<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dlgOpenFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>