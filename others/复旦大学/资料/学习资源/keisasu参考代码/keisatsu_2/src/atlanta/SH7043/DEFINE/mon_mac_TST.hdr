;/*--------------------------------------------------------------------------*/
;/*  プロジェクト : POPLAR/ANZU_L                                            */
;/*  ファイル名   : mon_mac.hdr                                              */
;/*  作成者       : 野瀬                                                     */
;/*  日  付       : 1996/10/14                                               */
;/*  概  要       : モニタマクロ定義                                         */
;/*  修正履歴     :                                                          */
;/*--------------------------------------------------------------------------*/
;
;/* ＳＡＫＡＫＩ／ＨＩＮＯＫＩ以降の機種は、マスクプログラム変更
;** 本当はこのファイルもSH7043_Aのほうを読み込むようにしなければいけない
;** のですが、読み込んでいるのが見当たらないのでここままにしておきます。
;** なお、以下の定義文を変更されるときは、Sh7043_A以下の該当ファイルも
;** あわせてお願いいたします。
;** by O.Kimoto 1998/09/12
;*/
;

	.IMPORT		_MON_StackCheckTable
	.IMPORT		_SYS_LED1_PortStatus				;/* POPLAR_H用 By O.Kimoto 1998/02/12 */

;-----------------------------------------------------------------------------
;  アセンブラ　マクロ定義
;-----------------------------------------------------------------------------
;
;/*****************************************************************************
;	module		:[ｺﾝﾃｷｽﾄを保存する（割込み禁止操作付き）]
;	function	:[
;		1.	割込禁止にする
;		2.	汎用ﾚｼﾞｽﾀ(R0ｰR14)､ｺﾝﾄﾛｰﾙﾚｼﾞｽﾀ(SR､GBR､VBR)､ｼｽﾃﾑﾚｼﾞｽﾀ(MACH､MACL､PR)を
;			ｽﾀｯｸへｾｰﾌﾞする
;	]
;	return		:[なし]
;	common		:[]
;	comment		:[]
;	machine		:[SH7043]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1995/10/25]
;	author		:[野瀬敏弘]
;*****************************************************************************/

	.MACRO	STCTX_REG

	MOV.L		R0,@-R15						;PUSH.L	R0
	MOV.L		R1,@-R15						;PUSH.L	R1
	STC			SR,R0
	MOV.L		STCTX_REG_TBL\@,R1
	OR			R1,R0
	LDC			R0,SR							;割り込み禁止
	MOV.L		R2,@-R15						;PUSH.L R2
	MOV.L		R3,@-R15						;PUSH.L R3
	MOV.L		R4,@-R15						;PUSH.L R4
	MOV.L		R5,@-R15						;PUSH.L R5
	MOV.L		R6,@-R15						;PUSH.L R6
	MOV.L		R7,@-R15						;PUSH.L R7
	MOV.L		R8,@-R15						;PUSH.L R8
	MOV.L		R9,@-R15						;PUSH.L R9
	MOV.L		R10,@-R15						;PUSH.L R10
	MOV.L		R11,@-R15						;PUSH.L R11
	MOV.L		R12,@-R15						;PUSH.L R12
	MOV.L		R13,@-R15						;PUSH.L R13
	MOV.L		R14,@-R15						;PUSH.L R14
	STC.L		GBR,@-R15						;PUSH.L	GBR
	STC.L		VBR,@-R15						;PUSH.L	VBR
	STS.L		MACH,@-R15						;PUSH.L MACH
	STS.L		MACL,@-R15						;PUSH.L	MACL
	STS.L		PR,@-R15						;PUSH.L	PR

	BRA			stctx_reg_end\@
	NOP

	.ALIGN 4
STCTX_REG_TBL\@:
	.DATA.L		I_BIT_ON

stctx_reg_end\@:

	.ENDM

;/*****************************************************************************
;	module		:[ｺﾝﾃｷｽﾄを保存する（割込み禁止操作なし）]
;	function	:[
;		1.	汎用ﾚｼﾞｽﾀ(R0ｰR14)､ｺﾝﾄﾛｰﾙﾚｼﾞｽﾀ(SR､GBR､VBR)､ｼｽﾃﾑﾚｼﾞｽﾀ(MACH､MACL､PR)を
;			ｽﾀｯｸへｾｰﾌﾞする
;	]
;	return		:[なし]
;	common		:[]
;	comment		:[]
;	machine		:[SH7043]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1996/11/12]
;	author		:[野瀬敏弘]
;*****************************************************************************/

	.MACRO	STCTX_REG_INT

	MOV.L		R0,@-R15						;PUSH.L	R0
	MOV.L		R1,@-R15						;PUSH.L	R1
	MOV.L		R2,@-R15						;PUSH.L R2
	MOV.L		R3,@-R15						;PUSH.L R3
	MOV.L		R4,@-R15						;PUSH.L R4
	MOV.L		R5,@-R15						;PUSH.L R5
	MOV.L		R6,@-R15						;PUSH.L R6
	MOV.L		R7,@-R15						;PUSH.L R7
	MOV.L		R8,@-R15						;PUSH.L R8
	MOV.L		R9,@-R15						;PUSH.L R9
	MOV.L		R10,@-R15						;PUSH.L R10
	MOV.L		R11,@-R15						;PUSH.L R11
	MOV.L		R12,@-R15						;PUSH.L R12
	MOV.L		R13,@-R15						;PUSH.L R13
	MOV.L		R14,@-R15						;PUSH.L R14
	STC.L		GBR,@-R15						;PUSH.L	GBR
	STC.L		VBR,@-R15						;PUSH.L	VBR
	STS.L		MACH,@-R15						;PUSH.L MACH
	STS.L		MACL,@-R15						;PUSH.L	MACL
	STS.L		PR,@-R15						;PUSH.L	PR

	.ENDM

;/*****************************************************************************
;	module		:[スタックチェック]
;	function	:[
;	]
;	return		:[なし]
;	common		:[]
;	comment		:[
;
;		内部使用レジスタ
;			R0 R12 R13 R14
;		エラー処理時のみ
;			R1 R2
;
;			UDWORD MON_StackCheckTable 4ﾊﾞｲﾄｻｲｽﾞ
;
;	]
;	machine		:[SH7043]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1995/10/26]
;	author		:[野瀬敏弘]
;*****************************************************************************/

	.MACRO	STACK_CHECK	ERRJUMP

	MOV.L		real_run_tid_STKCHK\@,R12
	MOV.B		@R12,R13
	EXTU.B		R13,R13							; R13 = real_run_tid
	SHLL2		R13
	MOV.L		MON_StackCheckTable_STKCHK\@,R0
	MOV.L		@(R0,R13),R14					; R14 = MON_StackCheckTable[real_run_tid]
	CMP/HS		R14,R15
	BT			stack_chk_error\@				; SP >= R14 -> error
	ADD			#4,R13
	MOV.L		@(R0,R13),R14					; R14 = MON_StackCheckTable[real_run_tid++]
	CMP/HS		R14,R15
	BT			stack_chk_end\@					; SP >= R14 -> end

stack_chk_error\@:
	MOV.L		stk_chk_err_STKCHK\@,R1
	MOV.L		stk_chk_err_STKCHK\@+4,R2
	JMP			@R2
	NOP

	.ALIGN 4
real_run_tid_STKCHK\@:
	.DATA.L		_real_run_tid
MON_StackCheckTable_STKCHK\@:
	.DATA.L		_MON_StackCheckTable
stk_chk_err_STKCHK\@:
	.DATA.L		H'FFFFFFFF
	.DATA.L		\ERRJUMP

stack_chk_end\@

	.ENDM


;/*****************************************************************************
;	module		:[レジスタの復帰]
;	function	:[
;	]
;	return		:[なし]
;	common		:[]
;	comment		:[
;	]
;	machine		:[SH7043]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1995/11/15]
;	author		:[野瀬敏弘]
;*****************************************************************************/

	.MACRO	RSTR_REG

	LDS.L	@R15+,PR			;POP.L	PR
	LDS.L	@R15+,MACL			;POP.L	MACL
	LDS.L	@R15+,MACH			;POP.L	MACH
	LDC.L	@R15+,VBR			;POP.L	VBR
	LDC.L	@R15+,GBR			;POP.L	GBR
	MOV.L	@R15+,R14			;POP.L	R14
	MOV.L	@R15+,R13			;POP.L	R13
	MOV.L	@R15+,R12			;POP.L	R12
	MOV.L	@R15+,R11			;POP.L	R11
	MOV.L	@R15+,R10			;POP.L	R10
	MOV.L	@R15+,R9			;POP.L	R9
	MOV.L	@R15+,R8			;POP.L	R8
	MOV.L	@R15+,R7			;POP.L	R7
	MOV.L	@R15+,R6			;POP.L	R6
	MOV.L	@R15+,R5			;POP.L	R5
	MOV.L	@R15+,R4			;POP.L	R4
	MOV.L	@R15+,R3			;POP.L	R3
	MOV.L	@R15+,R2			;POP.L	R2
	MOV.L	@R15+,R1			;POP.L	R1
	MOV.L	@R15+,R0			;POP.L	R0

	.ENDM

;/*****************************************************************************
;	module		:[スタックポインタをＴＣＢにセーブする]
;	function	:[
;	]
;	return		:[なし]
;	common		:[]
;	comment		:[
;	]
;	machine		:[SH7043]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1996/02/08]
;	author		:[野瀬敏弘]
;*****************************************************************************/

	.MACRO	STSP_REG

	MOV.L	real_run_tid_STKCHK\@,R2
	MOV.B	@R2,R1
	MOV		#TCB_TBL_SIZE,R8
	MULU	R1,R8							; real_run_tid * TCB_TBL_SIZE -> MACL
	MOV.L	tcb_STKCHK\@,R0
	STS		MACL,R2
	ADD		R2,R0
	MOV.L	R15,@(TCB_STACK_ADR,R0)					; SPセーブ
	BRA		save_SP_end\@
	NOP

	.ALIGN 4
real_run_tid_STKCHK\@:
	.DATA.L		_real_run_tid
tcb_STKCHK\@:
	.DATA.L		_tcb

save_SP_end\@

	.ENDM

;/*****************************************************************************
;	module		:[スタックチェック]
;	function	:[
;	]
;	return		:[なし]
;	common		:[
;		スタックチェックテーブルにはポインタによる間接アドレス参照で
;		アクセスします
;	]
;	comment		:[
;
;		内部使用レジスタ
;			R0 R12 R13 R14
;		エラー処理時のみ
;			R1 R2
;
;			UDWORD MON_StackCheckTable_p 4ﾊﾞｲﾄｻｲｽﾞ
;
;	]
;	machine		:[SH7043]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1997/04/16]
;	author		:[野瀬敏弘]
;*****************************************************************************/

	.MACRO	STACK_CHECK_P	ERRJUMP

	MOV.L		real_run_tid_STKCHK_P\@,R12
	MOV.B		@R12,R13
	EXTU.B		R13,R13							; R13 = real_run_tid
	SHLL2		R13

;	MOV.L		MON_StackCheckTable_STKCHK\@,R0
;	下の２行に変更
	MOV.L		MON_StackCheckTable_p_STKCHK_P\@,R0
	MOV.L		@R0,R0

	MOV.L		@(R0,R13),R14					; R14 = MON_StackCheckTable[real_run_tid]
	CMP/HS		R14,R15
	BT			stack_chk_error_p\@				; SP >= R14 -> error
	ADD			#4,R13
	MOV.L		@(R0,R13),R14					; R14 = MON_StackCheckTable[real_run_tid++]
	CMP/HS		R14,R15
	BT			stack_chk_end_p\@					; SP >= R14 -> end

stack_chk_error_p\@:
	MOV.L		stk_chk_err_STKCHK_P\@,R1
	JMP			@R1
	NOP

	.ALIGN 4
real_run_tid_STKCHK_P\@:
	.DATA.L		_real_run_tid
;MON_StackCheckTable_STKCHK\@:
;	.DATA.L		_MON_StackCheckTable
stk_chk_err_STKCHK_P\@:
	.DATA.L		\ERRJUMP
MON_StackCheckTable_p_STKCHK_P\@:
	.DATA.L		_MON_StackCheckTable_p

stack_chk_end_p\@

	.ENDM

;/*****************************************************************************
;	module		:[スタックポインタをＴＣＢにセーブする]
;	function	:[
;	]
;	return		:[なし]
;	common		:[]
;	comment		:[
;		ＴＣＢにはポインタによる間接アドレス参照でアクセスします
;	]
;	machine		:[SH7043]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1997/04/16]
;	author		:[野瀬敏弘]
;*****************************************************************************/

	.MACRO	STSP_REG_P

	MOV.L	real_run_tid_STSP_P\@,R2
	MOV.B	@R2,R1
	MOV		#TCB_TBL_SIZE,R8
	MULU	R1,R8							; real_run_tid * TCB_TBL_SIZE -> MACL
	MOV.L	tcbp_STSP_P\@,R0
	MOV.L	@R0,R0
	STS		MACL,R2
	ADD		R2,R0
	MOV.L	R15,@(TCB_STACK_ADR,R0)					; SPセーブ
	BRA		end_STSP_P\@
	NOP

	.ALIGN 4
real_run_tid_STSP_P\@:
	.DATA.L		_real_run_tid
tcbp_STSP_P\@:
	.DATA.L		_tcb_p

end_STSP_P\@

	.ENDM

;/*****************************************************************************
;	module		:[割込み禁止 ＆ ポートＯＮ]
;	function	:[]
;	return		:[なし]
;	common		:[]
;	comment		:[]
;	machine		:[SH7043]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1998/01/26]
;	author		:[野瀬敏弘]
;*****************************************************************************/

	.MACRO	INTDIS

;;;	MOV.L		R0,@-R15					;PUSH.L	R0 プッシュ済み
	MOV.L		R1,@-R15					;PUSH.L	R1
	MOV.L		R2,@-R15					;PUSH.L	R2

	STC			SR,R0
	MOV.L		INTDIS_TBL\@,R1
	OR			R1,R0
	LDC			R0,SR						;割り込み禁止

;割込み禁止開始をポートに出力します
;ＲＯＭ化の時ははずします
;割り込み禁止期間測定用 By Y.Suzuki 1902/09/14
	MOV.L		INTDIS_TBL\@+4,R0
	MOV.W		INTDIS_TBL\@+D'12,R1
	MOV.W		@R0,R2
	OR			R1,R2
	MOV.W		R2,@R0						;SYS_COM_PortStatus |= 0x0020
	MOV.L		INTDIS_TBL\@+8,R1
	MOV.W		R2,@R1						;outpw(COM_PORT,SYS_COM_PortStatus)
;ここまで

	MOV.L		@R15+,R2					;POP.L	R2
	MOV.L		@R15+,R1					;POP.L	R1
	MOV.L		@R15+,R0					;POP.L	R0
	BRA			INTDIS_END\@
	NOP
	.ALIGN 4
INTDIS_TBL\@:
;	/* 以下はＰＯＰＬＡＲ＿Ｂ／Ｌ用です。 By O.Kimoto 1998/02/12 */
;	.DATA.L		I_BIT_ON
;	.DATA.L		_SYS_COM_PortStatus
;	.DATA.L		H'00C203D0
;	.DATA.W		H'0020
;	/* 以下はＰＯＰＬＡＲ＿Ｈ用です。 By O.Kimoto 1998/02/12 */
	.DATA.L		I_BIT_ON
	.DATA.L		_SYS_LED1_PortStatus	; 出力ポートのステータス
	.DATA.L		H'00C2022A				; 出力ポートアドレス
	.DATA.W		H'0080					; ＯＮ出力のビットパターン
INTDIS_END\@:

	.ENDM
