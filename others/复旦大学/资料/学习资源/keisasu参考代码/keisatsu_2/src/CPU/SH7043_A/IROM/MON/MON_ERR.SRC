;/*--------------------------------------------------------------------------*/
;/*  プロジェクト : POPLAR/ANZU_L                                            */
;/*  ファイル名   : mon_err.src                                              */
;/*  作成者       : 野瀬                                                     */
;/*  日  付       : 1996/10/14                                               */
;/*  概  要       : スケジュール、キュー管理                                 */
;/*  修正履歴     : 1999/01/13 by H.Kubo                                     */
;/*  				AD 変換器が動いたままリセットに跳ぶとポートＦを正しく    */
;/*					読めず、ハード結線による機種判別に失敗するのでADを止める */
;/*					コードを挿入                                             */
;/*               : 1999/01/14 by H.Kubo                                     */
;/*                 RestartSystem のエントリのアドレスがずれるとリモート     */
;/*                 フラッシュ書き換え後に正しくリセットに飛べないので       */
;/*                 01/13 の修正をコメントアウトして元に戻す。               */
;/*               : 1999/01/20 by H.Kubo                                     */
;/*					ADを止めるコードを復活                                   */
;/*--------------------------------------------------------------------------*/

	.INCLUDE	"\src\cpu\sh7043_a\irom\define\def_mon.hdr"
	.INCLUDE	"\src\cpu\sh7043_a\irom\ext_v\extv_mon.hdr"

	.IMPORT		_SYB_MaintenanceSwitch
	.IMPORT		_INI_Entry
	.IMPORT		_tcb

	.EXPORT		_monitor_error
	.EXPORT		_SaveReturnAddressAndJumpBegin
	.EXPORT		_TraceTaskAddress
	.EXPORT		_RestartSystem
	.EXPORT		_TerminateDMA_DTC	;ソフトリセットを実行する前に内蔵DMA/DTCを停止する様にします。 By O.Kimoto 2002/12/12

; 	SAKAKI 用追加。INI_Entry に飛ぶ前にA/D変換器を止めるためです。 by H.Kubo 1999/01/13
	AD__ADCSR0:		.EQU	H'FFFF8410
	AD__ADCSR1:		.EQU	H'FFFF8411
	AD_ADCSR0_STOP:	.EQU	0
	AD_ADCSR1_STOP:	.EQU	0

; (Start)	ソフトリセットを実行する前に内蔵DMA/DTCを停止する様にします。 By O.Kimoto 2002/12/12
DMA__DMAOPR_MON		.EQU	H'FFFF86B0	; 内蔵ＤＭＡＣオペレーションレジスタ
DMAOPR_DME_MON		.EQU	H'FFFE		; 内蔵ＤＭＡＣマスターディセーブル
SH__DTEA_MON		.EQU	H'FFFF8700	; DTCイネーブルレジスタA
SH__DTEB_MON		.EQU	H'FFFF8701	; DTCイネーブルレジスタA
SH__DTEC_MON		.EQU	H'FFFF8702	; DTCイネーブルレジスタA
SH__DTED_MON		.EQU	H'FFFF8703	; DTCイネーブルレジスタA
SH__DTEE_MON		.EQU	H'FFFF8704	; DTCイネーブルレジスタA
SH__IPRA_MON		.EQU	H'FFFF8348	; 割込み優先レベル設定レジスタＡ
SH__IPRB_MON		.EQU	H'FFFF834A	; 割込み優先レベル設定レジスタＢ
; (End)		ソフトリセットを実行する前に内蔵DMA/DTCを停止する様にします。 By O.Kimoto 2002/12/12

;/*****************************************************************************
;	module		:[モニタエラールーチン]
;	function	:[
;		1. パワーＯＮリセットへ飛びます
;	]
;	return		:[なし]
;	common		:[なし]
;	comment		:[]
;	machine		:[SH1]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1995/11/01]
;	author		:[野瀬敏弘]
;*****************************************************************************/
;	.SECTION	PMONERR,CODE,ALIGN=4
	.SECTION	P,CODE,ALIGN=4

_monitor_error:
	MOV		#0,R0
	MOV		#0,R1
	MOV.B	R0,@R1	; outp(0,0)

	MOV		R15,R0
	MOV		#STACK_PC_POSITION,R2
	MOV.L	@(R0,R2),R3				; R3 = PC
; Ｒ３で渡されるアドレスをメンテナンススイッチＡ１〜Ａ４にセーブする
	MOV.L	MaintenanceSwitch0,R0
	MOV		#1,R2
	MOV.B	R3,@(R0,R2)		; A1
	SHLR8	R3
	MOV		#2,R2
	MOV.B	R3,@(R0,R2)		; A2
	SHLR8	R3
	MOV		#3,R2
	MOV.B	R3,@(R0,R2)		; A3
	SHLR8	R3
	MOV		#4,R2
	MOV.B	R3,@(R0,R2)		; A4

;ソフトリセットを実行する前に内蔵DMA/DTCを停止する様にします。 By O.Kimoto 2002/12/12
	BSR		_TerminateDMA_DTC	; R0,R1,R2
	NOP

	MOV.L	AD__ADCSR0_ADR,R0		; A/D 変換器を止めます。ここから。 by H.Kubo 1999/01/13 */
	MOV.B	#AD_ADCSR0_STOP,R1
	MOV.B	R1,@R0
	MOV.L	AD__ADCSR1_ADR,R0
	MOV.B	#AD_ADCSR1_STOP,R1
	MOV.B	R1,@R0					; A/D 変換器を止めます。 ここまで by H.Kubo 1999/01/13 */
	MOV.L	INI_Entry_mon_err0,R2
	JMP		@R2
	NOP

	.ALIGN 4
INI_Entry_mon_err0:
	.DATA.L	_INI_Entry
MaintenanceSwitch0:
	.DATA.L	_SYB_MaintenanceSwitch


	.SECTION	P,CODE,ALIGN=4

;/*****************************************************************************
;	module		:[通常プログラム中でのエラーリセット処理]
;	function	:[
;		1.ＰＣをメンテナンススイッチＡ１〜Ａ４にセーブする
;		2.パワーＯＮリセットへ飛ぶ
;	]
;	return		:[なし]
;	common		:[なし]
;	comment		:[
;		通常のプログラム内であり得ないパスが発生し、プログラムをリセットしたい
;		場合にコールする
;	]
;	machine		:[SH]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1996/02/06]
;	author		:[野瀬敏弘]
;*****************************************************************************/
_SaveReturnAddressAndJumpBegin:
	STS		PR,R3

	MOV		#0,R0
	MOV		#0,R1
	MOV.B	R0,@R1	;outp(0,0) T.Nose 1997/07/07

	BSR		SaveAddressToMemSwitch
	NOP

;ソフトリセットを実行する前に内蔵DMA/DTCを停止する様にします。 By O.Kimoto 2002/12/12
	BSR		_TerminateDMA_DTC	; R0,R1,R2
	NOP

	MOV.L	AD__ADCSR0_ADR,R0		; A/D 変換器を止めます。ここから。 by H.Kubo 1999/01/13 */
	MOV.B	#AD_ADCSR0_STOP,R1
	MOV.B	R1,@R0
	MOV.L	AD__ADCSR1_ADR,R0
	MOV.B	#AD_ADCSR1_STOP,R1
	MOV.B	R1,@R0					; A/D 変換器を止めます。 ここまで by H.Kubo 1999/01/13 */
	MOV.L	INI_Entry_mon_err1,R1
	JMP		@R1
	NOP

;/*****************************************************************************
;	module		:[]
;	function	:[
;		1.該当タスクの次実行アドレスをメンテナンススイッチＡ１〜Ａ４にセーブする
;	]
;	return		:[なし]
;	common		:[
;		SYB_MaintenanceSwitch
;	]
;	comment		:[
;		アイドルタスクから、メンテナンススイッチＡ０に登録されたタスクの
;		次の実行アドレスをメンテナンススイッチＡ１〜Ａ４にセーブする
;	]
;	machine		:[SH]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1996/02/06]
;	author		:[野瀬敏弘]
;*****************************************************************************/
_TraceTaskAddress:
	MOV.L	MaintenanceSwitch1,R0
	MOV.B	@R0,R2
	MOV		#H'FF,R3
	CMP/EQ	R3,R2
	BF		exec_trace_task_address
	RTS								; SYB_MaintenanceSwitch[A0] == 0xFF の場合、何もしない
	NOP

exec_trace_task_address:
	STS.L	PR,@-R15
	STS.L	MACL,@-R15		; PUSH.L	MACL

;	MOV		#TOTAL_STACK_MAX,R4
;FOR POINTER ACCESS
	MOV.L	MON_MAX_TCB_monerr,R4
	MOV.B	@R4,R4

	EXTU.B	R4,R4
	MOV		#TCB_TBL_SIZE,R5
	MOV		tcb_mon_err,R6
	SUB		R1,R1
cal_tcb:
	MULU	R1,R5
	STS		MACL,R3
	ADD		R6,R3
	MOV.B	@(TCB_PROGNO,R3),R0
	CMP/EQ	R0,R2					; tcb[R1].prog_no != SYB_MaintenanceSwitch[A0] -> next_tcb
	BF		next_tcb
	MOV.B	@(TCB_STAT,R3),R0
	CMP/EQ	#NOT_USED,R0			; tcb[R1].tsk_stat == NOT_USED -> next_tcb
	BT		next_tcb
	MOV.L	@(TCB_STACK_ADR,R3),R0
	ADD		#STACK_PC_POSITION,R0
	BSR		SaveAddressToMemSwitch
	MOV.L	@R0,R3					; PC -> R3 BSR命令に先だって実行される
	BRA		ret_tracetask
	NOP
next_tcb:
	ADD		#1,R1
	CMP/HI	R1,R4
	BT		cal_tcb
	BSR		SaveAddressToMemSwitch
	SUB		R3,R3					; BSR命令に先だって実行される
ret_tracetask:
	LDS.L	@R15+,MACL			;POP.L	MACL
	LDS.L	@R15+,PR
	RTS
	NOP

; Ｒ３で渡されるアドレスをメンテナンススイッチＡ１〜Ａ４にセーブする
SaveAddressToMemSwitch:
	MOV.L	MaintenanceSwitch1,R0
	MOV		#1,R2
	MOV.B	R3,@(R0,R2)		; A1
	SHLR8	R3
	MOV		#2,R2
	MOV.B	R3,@(R0,R2)		; A2
	SHLR8	R3
	MOV		#3,R2
	MOV.B	R3,@(R0,R2)		; A3
	SHLR8	R3
	MOV		#4,R2
	MOV.B	R3,@(R0,R2)		; A4
	RTS
	NOP

;/*****************************************************************************
;	module		:[システム再起動]
;	function	:[
;		1.強制的にシステムを再起動するためのルーチン
;	]
;	return		:[なし]
;	common		:[]
;	comment		:[]
;	machine		:[SH]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1996/02/06]
;	author		:[野瀬敏弘]
;*****************************************************************************/
_RestartSystem:
;ソフトリセットを実行する前に内蔵DMA/DTCを停止する様にします。 By O.Kimoto 2002/12/12
	BSR		_TerminateDMA_DTC	; R0,R1,R2
	NOP

	MOV.L	AD__ADCSR0_ADR,R0		; A/D 変換器を止めます。ここから。 by H.Kubo 1999/01/13 */
	MOV.B	#AD_ADCSR0_STOP,R1
	MOV.B	R1,@R0
	MOV.L	AD__ADCSR1_ADR,R0
	MOV.B	#AD_ADCSR1_STOP,R1
	MOV.B	R1,@R0					; A/D 変換器を止めます。 ここまで by H.Kubo 1999/01/13 */

; HINOKI3不具合 ソフトリセットしたときにポートＤがライト設定になっていると外ROMが読めなくなる
	MOV.W	PDIORH,R1
	MOV		#0,R0
	MOV.W	R0,@R1
	MOV.W	PDIORL,R1
	MOV.W	R0,@R1

	MOV.L	INI_Entry_mon_err1,R0
	JMP		@R0
	NOP

	.ALIGN 4
MaintenanceSwitch1:
	.DATA.L	_SYB_MaintenanceSwitch
tcb_mon_err:
	.DATA.L	_tcb
INI_Entry_mon_err1:
	.DATA.L	_INI_Entry
MON_MAX_TCB_monerr:
	.DATA.L	_MON_MAX_TCB
;;
;; added by H.Kubo 1999/01/13
;;
AD__ADCSR0_ADR:
	.DATA.L AD__ADCSR0
AD__ADCSR1_ADR:
	.DATA.L AD__ADCSR1
PDIORH:
	.DATA.W	H'83A4
PDIORL:
	.DATA.W	H'83A6


;/*****************************************************************************
;	module		:[CPU をスリープ状態にする処理]
;	function	:[
;		1.定消費電力状態がスリープ状態に設定。
;		2.スリープ命令で、CPU をスリープ状態にする
;	]
;	return		:[なし]
;	common		:[なし]
;	comment		:[
;		MAN_IdleTask で、何も処理することがないときに呼ぶ。
;		SAKAKIで使用します 1998/10/10 H.Yoshikawa
;	]
;	machine		:[SH]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[1998/08/05]
;	author		:[久保博]
;*****************************************************************************/


	.EXPORT		_MON_SleepCPU

	.SECTION	P,CODE,ALIGN=4

_MON_SleepCPU:
	SLEEP
	RTS
	NOP

;/*****************************************************************************
;	module		:[CPU内蔵のDMA/DTCを強制停止させます]
;	function	:[
;		1.強制的にシステムを再起動するためのルーチン
;	]
;	return		:[なし]
;	common		:[]
;	comment		:[]
;	machine		:[SH]
;	language	:[ASMSH]
;	keyword		:[MON]
;	date		:[2002/12/12]
;	author		:[木元修]
;*****************************************************************************/
_TerminateDMA_DTC:
; 内蔵割り込みレベルレジスターを全チャンネル、”０”にします。
	MOV.L	INTC__IPRA_mon_err,R0
	MOV		#0,R1
	MOV		#0,R2
	MOV.W	R1,@(R0,R2)		;SH__IPRA = 0
	ADD		#2,R2
	MOV.W	R1,@(R0,R2)		;SH__IPRB = 0
;
	MOV.L	DMA__DMAOPR_mon_err,R0
	MOV.W	DMAOPR_DME_mon_err,R1
	MOV.W	@R0,R2
	AND		R1,R2
	MOV.W	R2,@R0						; 内蔵ＤＭＡ停止
;
	MOV.L	DTC__DTER_mon_err,R0	;DTC_DTEA -- Base
	MOV		#0,R1
	MOV		#0,R2
	MOV.B	R1,@(R0,R2)			;DTC_DTEA = 0
	ADD		#1,R2
	MOV.B	R1,@(R0,R2)			;DTC_DTEB = 0
	ADD		#1,R2
	MOV.B	R1,@(R0,R2)			;DTC_DTEC = 0
	ADD		#1,R2
	MOV.B	R1,@(R0,R2)			;DTC_DTED = 0
	ADD		#1,R2
	MOV.B	R1,@(R0,R2)			;DTC_DTEE = 0
	RTS
	NOP

	.ALIGN 4
DTC__DTER_mon_err:
	.DATA.L		SH__DTEA_MON
DMA__DMAOPR_mon_err:
	.DATA.L		DMA__DMAOPR_MON
INTC__IPRA_mon_err:
	.DATA.L		SH__IPRA_MON
DMAOPR_DME_mon_err:
	.DATA.W		DMAOPR_DME_MON
	.END
