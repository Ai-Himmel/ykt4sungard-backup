/* --------------------------------------------
 * 程序名称: F820001.sqc
 * 创建日期: Sep 25 2004
 * 程序作者: 耿刚
 * 版本信息: 1.0.0.0
 * 程序功能: 子系统预注册
 * --------------------------------------------
 * 修改日期:
 * 修改人员: geng_gang
 * 修改描述: 加初始密钥产生规则/加同时注册设备
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "busqc.h"
ESQL #include "acctrans.h"

EXEC SQL INCLUDE SQLCA;
#if 0
int andDevice(const ST_PACK *rPack,int Dev_id,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
		sqlint32	deviceid=0;                  	//设备标识
		char    	devicename[150+1]="";         	//设备名称
		char    	devphyid[8+1]="";         	//设备物理ID
		sqlint32	deviceno=0;                  	//机号
		char    	devtype[4+1]="";              	//机型代码
		char    	devversion[8+1]="";           	//设备版本号
		char    	cardstr[2+1]="";              	//卡片结构
		char    	cardtype[64+1]="";            	//卡类
		sqlint32	portcount=0;                  	//服务器端口总数
		sqlint32  	fdeviceid=0;           	//上级设备ID
		sqlint32	portno=0;                     	//服务器端口号
		sqlint32	status=0;                   	//设备状态
		sqlint32	joinmode=0;                   	//链路模式
		char    	comadd[16+1]="";              	//通信地址
		char    	port[6+1]="";                 	//通讯端口
		sqlint32	baudrate=0;                   	//波特率
		sqlint32	comtype=0;                    	//数据通讯方式
		char    	bsheetvdate[12+1]="";         	//黑名单有效期
		char    	cardverno[12+1]="";           	//黑名单版本号
		sqlint32	lasttraserno=0;               	//终端交易流水号期末值
		char    	lasttradate[20+1]="";         	//终端交易时间期末值
		sqlint32	lastshutserno=0;              	//终端轧帐流水号期末值
		char    	lastshutdate[20+1]="";        	//终端轧帐时间期末值
		char    	syspwd[6+1]="";               	//系统员密码
		char    	admpwd[6+1]="";               	//管理员密码
		sqlint32	pwdonoff=0;                   	//密码开关
		char    	puserno[3+1]="";              	//钱包代码
		char    	cardset[64+1]="";             	//终端机适用用户卡类别
		char    	funonoff[2+1]="";             	//收费机增强功能开关
		sqlint32	cardusenum=0;                 	//卡的最大使用次数
		sqlint32	maxdeposit=0;                 	//钱包最高存款限额
		sqlint32	mindeposit=0;                 	//钱包最低剩余款限额
		sqlint32	ration=0;                     	//定值收费方式使用的定值额
		sqlint32	maxtrade=0;                   	//每次交易最高额
		char    	shuttimes[64+1]="";           	//扎帐时间点
		char    	card65pwd[64+1]="";           	//三九65类卡密钥
		char    	authpwd[64+1]="";             	//设备授权密钥
		sqlint32	ftflag=0;                     	//防火防盗状态
		sqlint32	phytype=0;                    	//设备物理型号
		sqlint32	web_level=0;                  	//网络层号
		sqlint32	sysid=0;               	//所属子系统
		sqlint32	area1=0;                       	//设备所在区域
		char    	init_key1[32+1]="";            	//读卡密钥
		char    	manager1[20+1]="";             	//负责人员工号
		char    	tel1[20+1]="";                 	//联系电话
		char    	address1[150+1]="";            	//地址
		char    	operate_time[26+1]="";        	//操作时间
		char    	comments1[150+1]="";           	//备注
	EXEC SQL END DECLARE SECTION;

	int ret=0;

	deviceid=Dev_id;
	des2src(devicename,rPack->scust_auth);
	des2src(devtype,DEVITYPE_SUBSYSTEM);
	status=DEVRUNSTATUS_REGIST;
	sysid=Dev_id;
	area1=rPack->lvol3;
	des2src(comadd,rPack->scust_auth2);
	des2src(manager1,rPack->sname2);
	des2src(tel1,rPack->sphone);
	des2src(address1,rPack->scusttypes);
	getsysdatetime(operate_time);
	des2src(comments1,rPack->ssectypes);

	EXEC SQL INSERT INTO ykt_cur.t_device (
 deviceid,devicename,devphyid,deviceno,devtype,devversion,cardstr,cardtype,portcount,fdeviceid,portno,status,joinmode,comadd,port,baudrate,comtype,bsheetvdate,cardverno,lasttraserno,lasttradate,lastshutserno,lastshutdate,syspwd,admpwd,pwdonoff,puserno,cardset,funonoff,cardusenum,maxdeposit,mindeposit,ration,maxtrade,shuttimes,card65pwd,authpwd,ftflag,phytype,web_level,sysid,area,init_key,manager,tel,addr,operate_time,comments)
	VALUES(:deviceid,:devicename,:devphyid,:deviceno,:devtype,:devversion,:cardstr,:cardtype,:portcount,:fdeviceid,:portno,:status,:joinmode,:comadd,:port,:baudrate,:comtype,:bsheetvdate,:cardverno,:lasttraserno,:lasttradate,:lastshutserno,:lastshutdate,:syspwd,:admpwd,:pwdonoff,:puserno,:cardset,:funonoff,:cardusenum,:maxdeposit,:mindeposit,:ration,:maxtrade,:shuttimes,:card65pwd,:authpwd,:ftflag,:phytype,:web_level,:sysid,:area1,:init_key1,:manager1,:tel1,:address1,:operate_time,:comments1);
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_DEVICE_I;
	}
	return 0;
}
#endif
int IsSubsystemSysnameExist(char* sysname)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char     hi_sysname[61]="";
	sqlint32 ho_sysname_cnt=0;
	EXEC SQL END DECLARE SECTION;
	des2src(hi_sysname,sysname);
	EXEC SQL
	SELECT count(sysname) INTO :ho_sysname_cnt
	FROM t_subsystem WHERE sysname=:hi_sysname and status='1';
	if(SQLCODE)
	{
	    db_chk_err(__FILE__,__LINE__,&sqlca);
	    return E_DB_SUBSYSTEM_R;
	}
	if(!ho_sysname_cnt)
	    return 0;
	return DB_EXIST;
}
int IsSubsystemIpExist(int systype,char* ip)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 hi_systype=0;	
	char     hi_ip[21]="";
	sqlint32 ho_ip_cnt=0;
	EXEC SQL END DECLARE SECTION;
	hi_systype=systype;
	des2src(hi_ip,ip);
	EXEC SQL
	SELECT count(ip) INTO :ho_ip_cnt
	FROM t_subsystem WHERE systype=:hi_systype and ip=:hi_ip and status='1';
	if(SQLCODE)
	{
	    db_chk_err(__FILE__,__LINE__,&sqlca);
	    return E_DB_SUBSYSTEM_R;
	}
	if(!ho_ip_cnt)
	    return 0;
	return DB_EXIST;
}
int IsSubsystemMacaddrExist(int systype,char* macaddr)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 hi_systype=0;	
	char     hi_macaddr[21]="";
	sqlint32 ho_macaddr_cnt=0;
	EXEC SQL END DECLARE SECTION;
	hi_systype=systype;
	des2src(hi_macaddr,macaddr);
	EXEC SQL
	SELECT count(macaddr) INTO :ho_macaddr_cnt
	FROM t_subsystem WHERE systype=:hi_systype and macaddr=:hi_macaddr and status='1';
	if(SQLCODE)
	{
	    db_chk_err(__FILE__,__LINE__,&sqlca);
	    return E_DB_SUBSYSTEM_R;
	}
	if(!ho_macaddr_cnt)
	    return 0;
	return DB_EXIST;
}
int GetMaxSysid(int& sysid)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 ho_sysid_max=0;
	sqlint16 indicator=0;
	EXEC SQL END DECLARE SECTION;
	EXEC SQL
	SELECT max(sysid) INTO :ho_sysid_max:indicator
	FROM t_subsystem;
	if(SQLCODE)
	{
	    db_chk_err(__FILE__,__LINE__,&sqlca);
	    if(DB_NOTFOUND==SQLCODE)
	        return E_DB_SUBSYSTEM_N;
	    else
	        return E_DB_SUBSYSTEM_R;
	}
	sysid=ho_sysid_max+1;
	return 0;
}

int F820001(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	int ret=0;
	CAccTrans& ats=CAccTrans::GetInst();
	des2src(ats.trans.opercode,rPack->semp);
	ats.trans.transcode=MAKETRANSCODEADD(TCM_SUBSYS);	
	ret=ats.InitTrans();
	if(ret)
		return ret;			
	int iSeqNo=0;
	char key[17]="";
	T_t_subsystem subsystem;
	memset(&subsystem,0,sizeof(subsystem));

	des2src(subsystem.sysname,rPack->scust_auth);
	subsystem.systype=rPack->lvol1;
	
	subsystem.runstatus[0]=SUBSYSRUNSTAT_DEACTIVE;
	subsystem.status[0]=STATUS_NORMAL;
	if(rPack->lvol3)
		sprintf(subsystem.areacode,"%d",rPack->lvol3);
//	subsystem.serverid=rPack->lvol4;
	des2src(subsystem.ip,rPack->scust_auth2);
	des2src(subsystem.macaddr,rPack->sname);
//	subsystem.version=rPack->lvol5;
//	des2src(subsystem.manager,rPack->sname2);
//	des2src(subsystem.tel,rPack->sphone);
//	des2src(subsystem.addr,rPack->scusttypes);
	des2src(subsystem.remark,rPack->ssectypes);
	subsystem.port = rPack->lvol6;
//	subsystem.enctype = rPack->lvol7;
//	des2src(subsystem.funclist,rPack->vsvarstr0);
	
	ret=IsSubsystemSysnameExist(subsystem.sysname);
	if(ret)
	{
		if(DB_EXIST==ret)
			return E_SYSNAME_SAME;
		else 
			return ret;
	}
	ret=IsSubsystemIpExist(subsystem.systype,subsystem.ip);
	if(ret)
	{
		if(DB_EXIST==ret)
			return E_SUBSYSTEM_RELOGIN;
		else 
			return ret;
	}
	ret=IsSubsystemMacaddrExist(subsystem.systype,subsystem.macaddr);
	if(ret)
	{
		if(DB_EXIST==ret)
			return E_SUBSYSTEM_RELOGIN;
		else 
			return ret;
	}	
	//插入子系统记录
	ret=GetMaxSysid(subsystem.sysid);
//	subsystem.serverid=subsystem.sysid;
	//生成初始密钥
	sprintf(key,"%d",subsystem.sysid);
	GetInitKey(subsystem.initkey, key);
	
	memset(subsystem.cardverno,'0',12);
	ret=DB_t_subsystem_add(&subsystem);
	if(ret)
	{
		return E_DB_SUBSYSTEM_I;
	}
	return 0;
	/*
	//得到子系统标识,并在设备注册表中插入改设备信息
	ret=andDevice(rPack,system_id,pRetCode,szMsg);
	if(ret)
	{
		*pRetCode=ret;
		goto L_RETU;
	}
	//完成提交
	SetCol(handle,0);
	PutRow(handle,out_pack,pRetCode,szMsg);
	*/
}

