/* --------------------------------------------
 * 创建日期: 2010-12-17
 * 程序作者: 闻剑
 * 版本信息: 3.0.0.0
 * 程序功能: 卡流水查询
 * --------------------------------------------*/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "cpack.h"
#include "errdef.h"
#include "pubdef.h"
#include "pubdb.h"
#include "pubfunc.h"
#include "dbfunc.h"
#include "dbfunc_foo.h"
#include "acctrans.h"
#include "busqc.h"
#include <string>
#include <sstream>
using namespace std;
EXEC SQL INCLUDE SQLCA;
int Qry2007(TRUSERID *handle,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	int accdate=0;//
	int cardseqno=0;//
	char samno[13]={0};//
	int posseqno=0;//
	int termdate=0;//
	int termtime=0;//
	int cardno=0;//卡号
	char cardasno[20]={0};//卡号
	int cardtype=0;//卡类型
	int dpscnt=0;//
	int paycnt=0;//卡交易次数
	int befcardbal=0;//
	int aftcardbal=0;//
	int amount=0;//发生额
	int otheramt=0;//卡成本费
	int balance=0;//余额
	int transcode=0;//交易码
	int transtype=0;//交易类型
	char transdesc[91]={0};//
	char refno[21]={0};//交易参考号
	int citycode=0;//
	char merchid[21]={0};//
	int posno=0;//
	int branchid=0;//网点号
	char opercode[9]={0};//
	int operid=0;
	int hosttime=0;//
	int hostdate=0;//
	char status[2]={0};//记录状态
	char wcstatus[2]={0};//
	int errcode=0;//
	char remark[91]={0};//备注
	short indicator=0;
	char	 h_sqlcmd[2048]="";
	EXEC SQL END DECLARE SECTION;
	
	int ret = 0;
	int row = 0;
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,F_LVOL0,F_SROOM_NO2,F_SNOTE,
				  F_SROOM_NO,F_SPAGER,F_SPHONE,
				  F_SPHONE2,F_SPHONE3,/*accdate,*//*cardseqno,*/
				  F_SCUST_AUTH2,F_LVOL2,F_SDATE0,
				  F_STIME0,F_SCARD0,F_LVOL1,
				  F_SCUST_TYPE,F_LVOL3,F_DAMT0,
				  F_DAMT1,F_DAMT2,F_DAMT3,F_DAMT4,
				  F_SPOST_CODE,F_LVOL4,F_SCUSTTYPES,
				  F_SCERT_NO,F_LVOL5,F_SCERT_NO2,
				  F_LVOL6,F_LVOL7,F_SEMP,
				  F_STIME1,F_SDATE1,F_SSTATUS1,F_SDATE3,
				  F_SSTATUS2,F_SCUST_LIMIT,F_VSVARSTR0,
				  0);
	
	des2src(cardasno,rPack->sphone3);
//	accdate=atol(rPack->sdate3);
	//cardseqno=rPack->;
	des2src(samno,rPack->scust_auth2);
	posseqno=rPack->lvol2;
	//termdate=atol(rPack->sdate0);
	int termdate1=atol(rPack->sdate1);
	int termdate2=atol(rPack->sdate2);
	termtime=atol(rPack->stime0);
	cardno=atol(rPack->scard0);
	cardtype=rPack->lvol1;
	dpscnt=atol(rPack->scust_type);
	paycnt=rPack->lvol3;
	befcardbal=rPack->damt0;
	aftcardbal=rPack->damt1;
	amount=rPack->damt2;
	otheramt=rPack->damt4;
	balance=rPack->damt3;
	transcode=atol(rPack->spost_code);
	transtype=rPack->lvol4;
	des2src(transdesc,rPack->scusttypes);
	des2src(refno,rPack->scert_no);
	citycode=rPack->lvol5;
	des2src(merchid,rPack->scert_no2);
	posno=rPack->lvol6;
	branchid=rPack->lvol7;
//	des2src(opercode,rPack->semp);
	operid=atol(rPack->semp_no);
	hosttime=atol(rPack->stime1);
	hostdate=atol(rPack->sdate1);
	des2src(status,rPack->sstatus1);
	des2src(wcstatus,rPack->sstatus2);
	errcode=atol(rPack->scust_limit);
	des2src(remark,rPack->vsvarstr0);
	
	stringstream sql;
	sql<<"SELECT ";
	sql<<"b.accdate,";
	sql<<"b.samno,";
	sql<<"b.posseqno,";
	sql<<"b.termdate,";
	sql<<"b.termtime,";
	sql<<"b.cardno,";
	sql<<"b.cardasno,";
	sql<<"b.cardtype,";
	sql<<"b.dpscnt,";
	sql<<"b.paycnt,";
	sql<<"b.befcardbal,";
	sql<<"b.aftcardbal,";
	sql<<"b.amount,";
	sql<<"b.otheramt,";
	sql<<"b.balance,";
	sql<<"b.transcode,";
	sql<<"b.transtype,";
	sql<<"b.transdesc,";
	sql<<"b.refno,";
	sql<<"b.citycode,";
	sql<<"b.merchid,";
	sql<<"b.posno,";
	sql<<"b.branchid,";
	sql<<"b.operid,";
	sql<<"b.hosttime,";
	sql<<"b.hostdate,";
	sql<<"b.status,";
	sql<<"b.wcstatus,";
	sql<<"b.errcode,";
	sql<<"b.remark ";
	sql<<" FROM t_carddtl b ";
	sql<<" WHERE b.accdate between "<<termdate1<<" and "<<termdate2;
	if(strlen(refno))
		sql<<" and b.refno ='"<<refno<<"'";
	if(strlen(samno))
		sql<<" and b.samno = '"<<samno<<"'";
	if(posseqno)
		sql<<" and b.posseqno="<<posseqno;
	if(termdate)
		sql<<" and b.termdate="<<termdate;
	if(termtime)
		sql<<" and b.termtime="<<termtime;
	if(cardno)
		sql<<" and b.cardno="<<cardno;
	else
	{
		if(strlen(cardasno))
		{
			ret=GetCardnoByCardasno(cardasno,&cardno);
			if(ret)
				return ret;
			sql<<" and b.cardno="<<cardno;
		}
	}
	if(cardtype)
		sql<<" and b.cardtype="<<cardtype;
	if(dpscnt)
		sql<<" and b.dpscnt="<<dpscnt;
	if(paycnt)
		sql<<" and b.paycnt="<<paycnt;
	if(befcardbal)
		sql<<" and b.befcardbal="<<befcardbal;
	if(aftcardbal)
		sql<<" and b.aftcardbal="<<aftcardbal;
	if(amount)
		sql<<" and b.amount="<<amount;
	if(balance)
		sql<<" and b.balance="<<balance;
	if(transcode)
		sql<<" and b.transcode="<<transcode;
	if(transtype)
		sql<<" and b.transtype="<<transtype;
	if(strlen(transdesc))
		sql<<" and b.transdesc = '"<<transdesc<<"'";
	if(strlen(refno))
		sql<<" and b.refno = '"<<refno<<"'";
	if(citycode)
		sql<<" and b.citycode="<<citycode;
	if(strlen(merchid))
		sql<<" and b.merchid = '"<<merchid<<"'";
	if(posno)
		sql<<" and b.posno="<<posno;
	if(branchid)
		sql<<" and b.branchid="<<branchid;
	if(operid)
		sql<<" and b.operid="<<operid;
	if(hosttime)
		sql<<" and b.hosttime="<<hosttime;
	if(strlen(status))
		sql<<" and b.status = "<<status;
	if(strlen(wcstatus))
		sql<<" and b.wcstatus ="<<wcstatus;
	if(errcode)
		sql<<" and b.errcode="<<errcode;
//	sql<<" order by b.accdate,b.cardno,b.cardseqno";
	sql<<" order by b.accdate,b.refno";

	strcpy(h_sqlcmd,sql.str().c_str());
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		writelog(LOG_ERR,"sql[%s]",h_sqlcmd);
		CHECK_DB_ERR;
		return E_DB_PREPARE;
	}
	EXEC SQL DECLARE carddtl_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_DECLARE;
	}
	EXEC SQL  OPEN carddtl_cur;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_OPEN;
	}
	while(1)
	{
		accdate=0;
		cardseqno=0;
		samno[0]=0;
		posseqno=0;
		termdate=0;
		termtime=0;
		cardno=0;
		cardasno[0]=0;
		cardtype=0;
		dpscnt=0;
		paycnt=0;
		befcardbal=0;
		aftcardbal=0;
		amount=0;
		otheramt=0;
		balance=0;
		transcode=0;
		transtype=0;
		transdesc[0]=0;
		refno[0]=0;
		citycode=0;
		merchid[0]=0;
		posno=0;
		branchid=0;
		operid=0;
		hosttime=0;
		hostdate=0;
		status[0]=0;
		wcstatus[0]=0;
		errcode=0;
		remark[0]=0;
		EXEC SQL FETCH carddtl_cur INTO
		:accdate:indicator,
		:samno:indicator,
		:posseqno:indicator,
		:termdate:indicator,
		:termtime:indicator,
		:cardno:indicator,
		:cardasno:indicator,
		:cardtype:indicator,
		:dpscnt:indicator,
		:paycnt:indicator,
		:befcardbal:indicator,
		:aftcardbal:indicator,
		:amount:indicator,
		:otheramt:indicator,
		:balance:indicator,
		:transcode:indicator,
		:transtype:indicator,
		:transdesc:indicator,
		:refno:indicator,
		:citycode:indicator,
		:merchid:indicator,
		:posno:indicator,
		:branchid:indicator,
		:operid:indicator,
		:hosttime:indicator,
		:hostdate:indicator,
		:status:indicator,
		:wcstatus:indicator,
		:errcode:indicator,
		:remark:indicator;
		if(SQLCODE)
		{
		  ret=SQLCODE;
		  CHECK_DB_ERR;
		  EXEC SQL CLOSE carddtl_cur;
		  if(DB_NOTFOUND==ret)
		  {
			if(row)
			  break;
			else
			  return E_DB_TRANSDTL_N;
		  }
		  else
			return E_DB_TRANSDTL_R;
		}
		row++;
		memset(outPack,0,sizeof(ST_PACK));	
		des2src(outPack->scust_auth2,samno);
		outPack->lvol2 = posseqno;
		if(termdate)
			sprintf(outPack->sdate0,"%d",termdate);
		if(termtime)
			sprintf(outPack->stime0,"%02d:%02d:%02d",termtime/10000,termtime%10000/100,termtime%100);
		if(cardno)
			sprintf(outPack->scard0,"%d",cardno);
		des2src(outPack->sphone3,cardasno);
		outPack->lvol1 = cardtype;
		sprintf(outPack->scust_type,"%d",dpscnt);
		outPack->lvol3 = paycnt;
		outPack->damt0 = D4U5(befcardbal/100.0);
		outPack->damt1 = D4U5(aftcardbal/100.0);
		outPack->damt2 = D4U5(amount/100.0);
		outPack->damt3 = D4U5(balance/100.0);
		outPack->damt4 = D4U5(otheramt/100.0);
		if(transcode)
			sprintf(outPack->spost_code,"%d",transcode);
		outPack->lvol4 = transtype;
		des2src(outPack->scusttypes,transdesc);
		sprintf(outPack->sdate3,"%d",accdate);
		des2src(outPack->scert_no,refno);
		outPack->lvol5 = citycode;
		des2src(outPack->scert_no2,merchid);
		outPack->lvol6 = posno;
		outPack->lvol7 = branchid;
		if(operid)
			sprintf(outPack->semp,"%d",operid);
		if(hosttime)
			sprintf(outPack->stime1,"%02d:%02d:%02d",hosttime/10000,hosttime%10000/100,hosttime%100);
		if(hostdate)
			sprintf(outPack->sdate1,"%d",hostdate);
		des2src(outPack->sstatus1,status);
		des2src(outPack->sstatus2,wcstatus);
		if(errcode)
			sprintf(outPack->scust_limit,"%d",errcode);
		des2src(outPack->vsvarstr0,remark);
		
		PutRow(handle,outPack,pRetCode,szMsg);
		if(row%9==0)
		  AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
}
int F2007(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	int ret=0;
	ret=Qry2007(handle,rPack,pRetCode,szMsg);
	return ret;
}
