/* --------------------------------------------
 * 创建日期: 2008-06-29
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能:操作员站点查询
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "acctrans.h"
ESQL #include "busqc.h"
ESQL #include <string>
ESQL #include <sstream>
ESQL using namespace std;
EXEC SQL INCLUDE SQLCA;
#if 0
int F820322(TRUSERID * handle, int iRequest, ST_PACK * rPack, int *iRetCode, char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
		char v_opercode[10+1] = "";
		char v_oper_name[150+1] = "";
		char v_site_no[20+1] = "";
		char v_ip_addr[20+1] = "";
		char v_mac_addr[20+1] = "";
		char v_machine_name[150+1] = "";
		char v_notes[100+1] = "";
		char v_sqlcmd[1024] = "";
		sqlint16 h_indicator = 0;
	EXEC SQL END DECLARE SECTION;

	ST_PACK tpack;				//要返回的cpack包
	int nrows = 0;
	int ret = 0;
	char sqltmp[128] = "";
	SetCol(handle, F_SCUST_NO, F_SNAME, F_SORDER0, F_SPHONE, F_SPHONE2, F_SCUST_LIMIT, F_SNOTE, 0);

	Strncpy_t(v_opercode, rPack->scust_no, sizeof(v_opercode));
	Strncpy_t(v_site_no, rPack->sphone, sizeof(v_site_no));

	sprintf(v_sqlcmd,"select oper.opercode, oper.oper_name, site.site_no, \
		site.ip_addr,site.mac_addr, site.machine_name,site.notes \
		from YKT_CUR.T_PIF_site_info site, YKT_CUR.T_PIF_operator oper, \
		YKT_CUR.T_PIF_oper_site  os where (oper.opercode = os.opercode) \
		and (site.site_no = os.site_no) ");

	if(strlen(v_opercode) > 0)
	{
		sprintf(sqltmp," and os.opercode = '%s' ",v_opercode);
		strcat(v_sqlcmd,sqltmp);
	}
		
	if(strlen(v_site_no) > 0)
	{
		sprintf(sqltmp," and os.site_no = '%s' ",v_site_no);
		strcat(v_sqlcmd,sqltmp);
	}
	strcat (v_sqlcmd," order by oper.opercode ");
	
	EXEC SQL PREPARE  stmt FROM :v_sqlcmd;
	if(SQLCODE)
	{
		*iRetCode = E_DB_PREPARE;
		goto L_Ret;
	}
	EXEC SQL DECLARE cur CURSOR for stmt;
	if(SQLCODE)
	{
		*iRetCode = E_DB_CURSOR_DECLARE;
		goto L_Ret;
	}
	EXEC SQL OPEN cur;
	if(SQLCODE)
	{
		*iRetCode = E_DB_CURSOR_OPEN;
		goto L_Ret;
	}
	
	/*
	EXEC SQL DECLARE C1 CURSOR FOR 
		select 
		oper.opercode, 
		oper.oper_name, 
		site.site_no, 
		site.ip_addr, 
		site.mac_addr, 
		site.machine_name,
		site.notes
		from YKT_CUR.T_PIF_site_info site, YKT_CUR.T_PIF_operator oper, YKT_CUR.T_PIF_oper_site  os
		where (:v_opercode = '' or os.opercode =:v_opercode)
			and(:v_site_no = '' or os.site_no =:v_site_no) 
			and(oper.opercode = os.opercode) 
			and(site.site_no = os.site_no) 
		order by oper.opercode ;
	*/
	

	do
	{
		memset(v_opercode, 0, sizeof(v_opercode));
		memset(v_oper_name, 0, sizeof(v_oper_name));
		memset(v_site_no, 0, sizeof(v_site_no));
		memset(v_ip_addr, 0, sizeof(v_ip_addr));
		memset(v_mac_addr, 0, sizeof(v_mac_addr));
		memset(v_machine_name, 0, sizeof(v_machine_name));
		memset(v_notes, 0, sizeof(v_notes));

		EXEC SQL FETCH cur INTO:v_opercode indicator:h_indicator,:v_oper_name indicator:h_indicator,:v_site_no indicator:h_indicator,:v_ip_addr indicator:h_indicator,:v_mac_addr indicator:h_indicator,:v_machine_name indicator:h_indicator,:v_notes indicator:h_indicator;
		ret = SQLCODE;
		if (0 != SQLCODE)
		{
			EXEC SQL CLOSE cur;
			if (DB_NOTFOUND==ret)
			{
				if(0 == nrows)
				{
					*iRetCode = E_DB_OPERSITE_N;
					db_chk_err(__FILE__,__LINE__,&sqlca);
					goto L_Ret;
				}
				else
				{
					break;
				}
			}
			else
			{					//读取操作员登陆站点信息表出错
				*iRetCode = E_DB_OPERSITE_R;
				db_chk_err(__FILE__,__LINE__,&sqlca);
				goto L_Ret;
			}
			break;
		}
		
		Strncpy_t(tpack.scust_no, v_opercode, sizeof(tpack.scust_no));
		Strncpy_t(tpack.sname, v_oper_name, sizeof(tpack.sname));
		Strncpy_t(tpack.sorder0, v_site_no, sizeof(tpack.sorder0));
		Strncpy_t(tpack.sphone, v_ip_addr, sizeof(tpack.sphone));
		Strncpy_t(tpack.sphone2, v_mac_addr, sizeof(tpack.sphone2));
		Strncpy_t(tpack.scust_limit, v_machine_name, sizeof(tpack.scust_limit));
		Strncpy_t(tpack.snote, v_notes, sizeof(tpack.snote));

		PutRow(handle, &tpack, iRetCode, szMsg);
		nrows++;
	}
	while (1);
	
	*iRetCode = 0;
	
	AnswerData(handle,*iRetCode,szMsg);
	return 0;
	
L_Ret:
	return -1;
}
#endif
int F820322(TRUSERID * handle, int iRequest, ST_PACK * rPack, int *pRetCode, char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char	 opercode[9]="";
	sqlint32 siteno=0;
	char	 sitename[61]="";
	char	 ip[16]="";
	char	 macaddr[18]="";
	char	 lastsaved[31]="";
	sqlint16 indicator=0;
	char	 h_sqlcmd[2048]="";
	EXEC SQL END DECLARE SECTION;
	
	int ret=0;
	CAccTrans& ats=CAccTrans::GetInst();
	des2src(ats.trans.opercode,rPack->semp);
	ats.trans.transcode=MAKETRANSCODEQRY(TCM_OPERSITE);
	ret=ats.InitTrans();
	if(ret)
		return ret;			
	int row = 0;
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,F_SCUST_NO,F_LVOL1,F_SCUST_LIMIT,
				  F_SPHONE,F_SPHONE2,F_SCUST_LIMIT2,
				  0);
	
	des2src(opercode,rPack->scust_no);
	siteno=rPack->lvol1;
	des2src(sitename,rPack->scust_limit);
	des2src(ip,rPack->sphone);
	des2src(macaddr,rPack->sphone2);
	des2src(lastsaved,rPack->scust_limit2);
	
	stringstream sql;
	sql<<"SELECT ";
	sql<<"a.opercode,";
	sql<<"a.siteno,";
	sql<<"b.sitename,";
	sql<<"b.ip,";
	sql<<"b.macaddr,";
	sql<<"a.lastsaved ";
	sql<<" FROM ykt_cur.t_opersite a,ykt_cur.t_site b";
	sql<<" WHERE a.siteno=b.siteno ";
	if(strlen(opercode))
		sql<<" and a.opercode = '"<<opercode<<"'";
	if(siteno)
		sql<<" and a.siteno="<<siteno;
	if(strlen(sitename))
		sql<<" and b.sitename like '"<<sitename<<"'";
	if(strlen(ip))
		sql<<" and b.ip = '"<<ip<<"'";
	if(strlen(macaddr))
		sql<<" and b.macaddr = '"<<macaddr<<"'";
	sql<<" order by a.opercode,a.siteno";
	strcpy(h_sqlcmd,sql.str().c_str());
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_PREPARE;
	}
	EXEC SQL DECLARE opersite_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_DECLARE;
	}
	EXEC SQL  OPEN opersite_cur;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_OPEN;
	}
	while(1)
	{
		opercode[0]=0;
		siteno=0;
		sitename[0]=0;
		ip[0]=0;
		macaddr[0]=0;
		lastsaved[0]=0;
		EXEC SQL FETCH opersite_cur INTO
		:opercode:indicator,
		:siteno:indicator,
		:sitename:indicator,
		:ip:indicator,
		:macaddr:indicator,
		:lastsaved:indicator;
		ret=SQLCODE;
		if(ret)
		{
		  CHECK_DB_ERR;
		  EXEC SQL CLOSE opersite_cur;
		  if(DB_NOTFOUND==ret)
		  {
			if(row)
			  break;
			else
			  return E_DB_OPERSITE_N;
		  }
		  else
			return E_DB_OPERSITE_R;
		}
		row++;
		des2src(outPack->scust_no,opercode);
		outPack->lvol1=siteno;
		des2src(outPack->scust_limit,sitename);
		des2src(outPack->sphone,ip);
		des2src(outPack->sphone2,macaddr);
		des2src(outPack->scust_limit2,lastsaved);
		PutRow(handle,outPack,pRetCode,szMsg);
		if(row%9==0)
		  AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
}
