/* --------------------------------------------
 * 创建日期: 2008-07-02
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能: 客户信息设置
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "busqc.h"
ESQL #include "acctrans.h"
ESQL #include <string>
ESQL #include <iostream>
ESQL #include <sstream>
ESQL using namespace std;
EXEC SQL INCLUDE SQLCA;

int IsAccountCustidExist(int custid)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 hi_custid=0;
	sqlint32 ho_custid_cnt=0;
	EXEC SQL END DECLARE SECTION;
	hi_custid=custid;
	EXEC SQL
	SELECT count(custid) INTO :ho_custid_cnt
	FROM ykt_cur.t_account WHERE custid=:hi_custid;
	if(SQLCODE)
	{
	    db_chk_err(__FILE__,__LINE__,&sqlca);
	    return E_DB_ACCOUNT_R;
	}
	if(!ho_custid_cnt)
	    return 0;
	return DB_EXIST;
}
//同步修改卡表的收费类别

int SyncUpdCardFeetype(int custid,int feetype)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32  hi_custid=0;
	sqlint32  hi_feetype=0;
	EXEC SQL END DECLARE SECTION;
	hi_custid=custid;
	hi_feetype=feetype;
	EXEC SQL 
		update ykt_cur.t_card 
		set  feetype=:hi_feetype
		where custid=:hi_custid and feetype <> :hi_feetype and status='1';
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		if(DB_NOTFOUND!=SQLCODE)
			return E_DB_CARD_U;
	}
	return 0;
}
int SyncUpdCustName(int custid,char *custname)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32  hi_custid=0;
	char 	  hi_custname[256]={0};
	EXEC SQL END DECLARE SECTION;
	hi_custid=custid;
	des2src(hi_custname,custname);
	EXEC SQL 
		update ykt_cur.t_account  
		set  accname=:hi_custname
		where custid=:hi_custid and status='1';
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		if(DB_NOTFOUND!=SQLCODE)
			return E_DB_ACCOUNT_U;
	}
	SQLCODE=0;
	return 0;
}


int ModifyStuempNo(ST_PACK *rPack,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;	
	sqlint32 	cut_state1 = 0;
	sqlint32	cut_id1 = 0;
	sqlint16	ind = 0;
	char    	oldStuemp_no[20+1]="";           	//联系人学号或员工号
	char    	newStuemp_no[20+1]="";        		//联系人学号或员工号
	EXEC SQL END DECLARE SECTION;

	int ret = 0;
	T_t_modifyinfo t_modifyinfo;
	memset(&t_modifyinfo,0,sizeof(t_modifyinfo));
	
	cut_state1 = CUSTSTAT_LOGOUT;
	des2src(oldStuemp_no, rPack->scert_no);
	des2src(newStuemp_no,rPack->scust_auth2);
	toupper_word(newStuemp_no);
	ret = IsStuempnoExist(newStuemp_no);	
	if(ret)
	{
		if(DB_EXIST==ret)
			return E_EXIST_STUEMPNO;
		else
			return ret;
	}
	
	EXEC SQL select custid into :cut_id1:ind from ykt_cur.t_customer
		where  stuempno=:oldStuemp_no and status != :cut_state1 and rownum = 1;
	if(SQLCODE)
	{	
		db_chk_err(__FILE__,__LINE__,&sqlca);
		if(DB_NOTFOUND==SQLCODE)
			return E_DB_CUSTOMER_N;
		else
			return E_DB_CUSTOMER_R;
	}
	
	EXEC SQL UPDATE ykt_cur.t_customer SET
		stuempno=:newStuemp_no
	WHERE stuempno = :oldStuemp_no and status != :cut_state1;
	if(SQLCODE)
	{	
		db_chk_err(__FILE__,__LINE__,&sqlca);
		if(DB_NOTFOUND==SQLCODE)
			return E_DB_CUSTOMER_N;
		else
			return E_DB_CUSTOMER_U;
	}

	t_modifyinfo.custid = cut_id1;
	des2src(t_modifyinfo.stuempno,newStuemp_no);
	des2src(t_modifyinfo.enrollno,oldStuemp_no);
	getsysdate(t_modifyinfo.modifydate);
	getsystime(t_modifyinfo.modifytime);
	des2src(t_modifyinfo.opercode,rPack->semp);
	ret = DB_t_modifyinfo_add(&t_modifyinfo);
	if(ret)
		return E_DB_MODIFYINFO_I;
	
	return 0;
}
int Read841601(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	/////////////////////////////ColVarDeclare///////////////////////////////
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 custid=0;
	sqlint32 custtype=0;
	sqlint32 feetype=0;
	char  custname[61]="";
	char  stuempno[31]="";
	char  areacode[4]="";
	char  deptcode[31]="";
	char  deptfullname[1001]="";
	char  specialtycode[31]="";
	char  classname[61]="";
	char  idtype[2]="";
	char  idno[61]="";
	char  sex[2]="";
	char  country[4]="";
	char  nation[3]="";
	char  email[61]="";
	char  tel[31]="";
	char  mobile[31]="";
	char  addr[241]="";
	char  zipcode[7]="";
	char  custattr[11]="";
	char  indate[9]="";
	char  outdate[9]="";
	char  opendate[9]="";
	char  batchno[31]="";
	char  useflag[2]="";
	char  eaccflag[2]="";
	char  status[2]="";
	char  lastsaved[31]="";
	sqlint32 holdcardcnt=0;
	sqlint16 indicator=0;
	char     h_sqlcmd[2048]="";
	EXEC SQL END DECLARE SECTION;
	////////////////////////////////SetCol//////////////////////////////////
	int ret = 0;
	int row = 0;
	char sqltmp[512]="";
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,F_LVOL1,F_LVOL3,F_LVOL5,
		F_SNAME,F_SALL_NAME,F_SCUST_AUTH2,F_SBRANCH_CODE0,
		F_SCERT_NO,F_VSVARSTR0,F_SCUST_NO2,
		F_SCARD1,F_SMARKET_CODE,F_SCUST_AUTH,
		F_SMARKET_CODE2,F_SNATION_CODE,F_SCUST_TYPE2,
		F_SEMAIL,F_SPHONE,F_SPHONE2,
		F_SCUSTTYPES,F_SPOST_CODE,F_SSERIAL1,
		F_SDATE0,F_SDATE1,F_SDATE2,F_SCERT_NO2,
		F_SCUST_LIMIT,F_SMAIN_FLAG,F_SCUST_LIMIT2,
		F_SSTATUS1,F_SCERT_NO2,F_SSTAT_TYPE,F_SCURRENCY_TYPE,0);
	CAccTrans& ats=CAccTrans::GetInst();
	char opencardflag= rPack->scurrency_type[0];
	int custid_begin=rPack->lvol11;
	int custid_end = rPack->lvol12;
	custid=rPack->lvol1;
	custtype=rPack->lvol3;
	feetype=rPack->lvol5;
	des2src(custname,rPack->sall_name);
	if(0==custname[0])
    {
		des2src(custname,rPack->sname);
	}
	des2src(stuempno,rPack->scust_auth2);
	des2src(areacode,rPack->sbranch_code0);
	des2src(deptcode,rPack->scert_no);
	des2src(deptfullname,rPack->vsvarstr0);
	des2src(specialtycode,rPack->scust_no2);
	des2src(classname,rPack->scard1);
	des2src(idtype,rPack->smarket_code);
	des2src(idno,rPack->scust_auth);
	des2src(sex,rPack->smarket_code2);
	des2src(country,rPack->snation_code);
	des2src(nation,rPack->scust_type2);
	des2src(email,rPack->semail);
	des2src(tel,rPack->sphone);
	des2src(mobile,rPack->sphone2);
	des2src(addr,rPack->scusttypes);
	des2src(zipcode,rPack->spost_code);
	des2src(custattr,rPack->sserial1);
	des2src(indate,rPack->sdate1);
	des2src(outdate,rPack->sdate2);
	des2src(opendate,rPack->sdate0);
	des2src(batchno,rPack->scust_limit);
	des2src(useflag,rPack->smain_flag);
	des2src(eaccflag,rPack->sstat_type);
	des2src(status,rPack->sstatus1);
//	des2src(lastsaved,rPack->scust_limit2);
	stringstream sql;
	sql<<"SELECT a.custid,a.custtype,a.feetype,a.custname,";
	sql<<"a.stuempno,a.areacode,a.deptcode,b.deptfullname,";
	sql<<"a.specialtycode,a.classname,a.idtype,a.idno,";
	sql<<"a.sex,a.country,a.nation,a.email,";
	sql<<"a.tel,a.mobile,a.addr,a.zipcode,";
	sql<<"a.custattr,a.indate,a.outdate,a.opendate,";
	sql<<"a.status,";
	sql<<"a.batchno,a.useflag,a.eaccflag,a.lastsaved,a.holdcardcnt ";
	sql<<" FROM ykt_cur.t_customer a left join ykt_cur.t_dept b on a.deptcode=b.deptcode WHERE 1=1 ";
	if(custid_begin>0)
		sql<<" and a.custid>="<<custid_begin;
	if(custid_end>0)
		sql<<" and a.custid<="<<custid_end;
	if(custid)
		sql<<" and a.custid ="<<custid;
	if(custtype)
		sql<<" and a.custtype ="<<custtype;
	if(feetype)
		sql<<" and a.feetype ="<<feetype;
	if(strlen(custname))
		sql<<" and a.custname like '"<<custname<<"'";
	if(strlen(stuempno))
		sql<<" and a.stuempno like '"<<stuempno<<"'";
	if(strlen(areacode))
		sql<<" and a.areacode = '"<<areacode<<"'";
	if(strlen(deptcode))
		sql<<" and a.deptcode like '"<<deptcode<<"'";
	if(strlen(deptfullname))
		sql<<" and b.deptfullname like '"<<deptfullname<<"'";
	if(strlen(specialtycode))
		sql<<" and a.specialtycode like '"<<specialtycode<<"'";
	if(strlen(classname))
		sql<<" and a.classname like '"<<classname<<"'";
	if(strlen(idtype))
		sql<<" and a.idtype = '"<<idtype<<"'";
	if(strlen(idno))
		sql<<" and a.idno = '"<<idno<<"'";
	if(strlen(sex))
		sql<<" and a.sex = '"<<sex<<"'";
	if(strlen(country))
		sql<<" and a.country = '"<<country<<"'";
	if(strlen(nation))
		sql<<" and a.nation = '"<<nation<<"'";
	if(strlen(email))
		sql<<" and a.email like '"<<email<<"'";
	if(strlen(tel))
		sql<<" and a.tel like '"<<tel<<"'";
	if(strlen(mobile))
		sql<<" and a.mobile like '"<<mobile<<"'";
	if(strlen(addr))
		sql<<" and a.addr like '"<<addr<<"'";
	if(strlen(zipcode))
		sql<<" and a.zipcode like '"<<zipcode<<"'";
	if(strlen(custattr))
		sql<<" and a.custattr = '"<<custattr<<"'";
	if(strlen(indate))
		sql<<" and a.indate like '"<<indate<<"'";
	if(strlen(outdate))
		sql<<" and a.outdate like '"<<outdate<<"'";
	if(strlen(opendate))
		sql<<" and a.opendate like '"<<opendate<<"'";
	if(strlen(batchno))
		sql<<" and a.batchno like '"<<batchno<<"'";
	if(strlen(useflag))
		sql<<" and a.useflag = '"<<useflag<<"'";
	if(strlen(eaccflag))
		sql<<" and a.eaccflag = '"<<eaccflag<<"'";
	if(strlen(lastsaved))
		sql<<" and a.lastsaved = '"<<lastsaved<<"'";
	if(strlen(status))
		sql<<" and a.status = '"<<status<<"'";
	else
		sql<<" and a.status = '1'";
	if('1'==opencardflag)
		sql<<" and a.holdcardcnt>0";
	if('0'==opencardflag)
		sql<<" and a.holdcardcnt=0";
	sql<<" order by a.custid";
	strcpy(h_sqlcmd,sql.str().c_str());
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
	    db_chk_err(__FILE__,__LINE__,&sqlca);
	     return E_DB_PREPARE;
	}
	EXEC SQL DECLARE cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
	    db_chk_err(__FILE__,__LINE__,&sqlca);
	    return E_DB_CURSOR_DECLARE;
	}
	EXEC SQL  OPEN cur;
	if(SQLCODE)
	{
	    db_chk_err(__FILE__,__LINE__,&sqlca);
	    return E_DB_CURSOR_OPEN;
	}
	while(1)
	{
	///////////////////////////////ColVarInit////////////////////////////////
		custid=0;
		custtype=0;
		feetype=0;
		custname[0]=0;
		stuempno[0]=0;
		areacode[0]=0;
		deptcode[0]=0;
		deptfullname[0]=0;
		specialtycode[0]=0;
		classname[0]=0;
		idtype[0]=0;
		idno[0]=0;
		sex[0]=0;
		country[0]=0;
		nation[0]=0;
		email[0]=0;
		tel[0]=0;
		mobile[0]=0;
		addr[0]=0;
		zipcode[0]=0;
		custattr[0]=0;
		indate[0]=0;
		outdate[0]=0;
		opendate[0]=0;
		status[0]=0;
		batchno[0]=0;
		useflag[0]=0;
		eaccflag[0]=0;
		lastsaved[0]=0;
		holdcardcnt=0;
	///////////////////////////////FetchIntoColVar///////////////////////////
		EXEC SQL FETCH cur INTO
		:custid:indicator,
		:custtype:indicator,
		:feetype:indicator,
		:custname:indicator,
		:stuempno:indicator,
		:areacode:indicator,
		:deptcode:indicator,
		:deptfullname:indicator,
		:specialtycode:indicator,
		:classname:indicator,
		:idtype:indicator,
		:idno:indicator,
		:sex:indicator,
		:country:indicator,
		:nation:indicator,
		:email:indicator,
		:tel:indicator,
		:mobile:indicator,
		:addr:indicator,
		:zipcode:indicator,
		:custattr:indicator,
		:indate:indicator,
		:outdate:indicator,
		:opendate:indicator,
		:status:indicator,
		:batchno:indicator,
		:useflag:indicator,
		:eaccflag:indicator,
		:lastsaved:indicator,
		:holdcardcnt:indicator;
	    ret=SQLCODE;
	    if(ret)
	    {
	        db_chk_err(__FILE__,__LINE__,&sqlca);
	        EXEC SQL CLOSE cur;
	        if(DB_NOTFOUND==ret)
	        {
	            if(row)
	                break;
	            else
	                 return E_DB_CUSTOMER_N;
	        }
	        else
	             return E_DB_CUSTOMER_R;
	    }
	    row++;
	///////////////////////////////ColVar2OutPack////////////////////////////
		outPack->lvol1=custid;
		outPack->lvol3=custtype;
		outPack->lvol5=feetype;
		src2des(custname,outPack->sname);
		src2des(custname,outPack->sall_name);
		src2des(stuempno,outPack->scust_auth2);
		src2des(areacode,outPack->sbranch_code0);
		src2des(deptcode,outPack->scert_no);
		src2des(deptfullname,outPack->vsvarstr0);
		src2des(specialtycode,outPack->scust_no2);
		src2des(classname,outPack->scard1);
		src2des(idtype,outPack->smarket_code);
		src2des(idno,outPack->scust_auth);
		src2des(sex,outPack->smarket_code2);
		src2des(country,outPack->snation_code);
		src2des(nation,outPack->scust_type2);
		src2des(email,outPack->semail);
		src2des(tel,outPack->sphone);
		src2des(mobile,outPack->sphone2);
		src2des(addr,outPack->scusttypes);
		src2des(zipcode,outPack->spost_code);
		src2des(custattr,outPack->sserial1);
		src2des("",outPack->scert_no2);
		src2des(opendate,outPack->sdate0);
		src2des(indate,outPack->sdate1);
		src2des(outdate,outPack->sdate2);
		src2des(status,outPack->sstatus1);
		src2des(batchno,outPack->scust_limit);
		src2des(useflag,outPack->smain_flag);
		src2des(eaccflag,outPack->sstat_type);
		src2des(lastsaved,outPack->scust_limit2);
		if(holdcardcnt>1)
			holdcardcnt=1;
		sprintf(outPack->scurrency_type,"%d",holdcardcnt);
	    PutRow(handle,outPack,pRetCode,szMsg);
	    if(row%9==0)
	       AnswerDataPart(handle,*pRetCode,szMsg);
		if(ats.sysPara.iQryMaxCnt)
		{
			if(row>=ats.sysPara.iQryMaxCnt)
			{	
				EXEC SQL CLOSE cur;
				break;
			}
		}
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
}
int Add841601(ST_PACK * rPack,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
		char    	stuempno[30+1]="";           	//学号或员工号
		sqlint32	custid=0;                     	//客户号
		sqlint16   indicator=0;
	EXEC SQL END DECLARE SECTION;
	int ret=0;
	CAccTrans& ats=CAccTrans::GetInst();
	T_t_customer tCustomer;
	memset(&tCustomer,0,sizeof(tCustomer));

	des2src(tCustomer.stuempno,rPack->scust_auth2);
	des2src(tCustomer.idtype,rPack->smarket_code);
	des2src(tCustomer.idno,rPack->scust_auth);
	toupper_word(tCustomer.stuempno);
	if(strlen(tCustomer.stuempno)>0)
	{
		ret=IsStuempnoExist(tCustomer.stuempno);
		if(ret)
		{
			return ret;
		}
	}
	/*
	if(strlen(tCustomer.idno)>0)
	{
		ret=IsIdnoExist(tCustomer.idno,tCustomer.idtype);
		if(ret)
		{
			return ret;
		}
	}
	*/
	SQLCODE=0;
	/////////////////////////////////rPack2TableStuct////////////////////////
	//
	des2src(tCustomer.areacode,rPack->sbranch_code0);
	ret=GetNewCustIDByShoolCode(tCustomer.areacode,tCustomer.custid);
	if(ret)
	{
		writelog(LOG_ERR,"GetNewCustIDByShoolCode err[%d]areacode[%s]",ret,tCustomer.areacode);
		return ret;
	}
	tCustomer.custtype=rPack->lvol3;
	tCustomer.feetype=rPack->lvol5;
	if(!tCustomer.feetype)
		return E_INPUTNULL_FEETYPE;
	des2src(tCustomer.custname,rPack->sall_name);
	if(0==tCustomer.custname[0])
	{
		des2src(tCustomer.custname,rPack->sname);
	}
	des2src(tCustomer.deptcode,rPack->scert_no);
	T_t_dept dept;
	memset(&dept,0,sizeof(dept));
	ret=DB_t_dept_read_by_deptcode(tCustomer.deptcode,&dept);
	if(ret)
	{
		if(DB_NOTFOUND==ret)
			return ERRINFO(E_NOTEXIST_DEPTCODE,tCustomer.deptcode);
		else
			return E_DB_CUSTOMER_R;
	}
//	des2src(tCustomer.deptfullname,dept.deptfullname);
	des2src(tCustomer.specialtycode,rPack->scust_no2);
	des2src(tCustomer.classname,rPack->scard1);
	des2src(tCustomer.sex,rPack->smarket_code2);
	des2src(tCustomer.country,rPack->snation_code);
	des2src(tCustomer.nation,rPack->scust_type2);
	des2src(tCustomer.email,rPack->semail);
	des2src(tCustomer.tel,rPack->sphone);
	des2src(tCustomer.mobile,rPack->sphone2);
	des2src(tCustomer.addr,rPack->scusttypes);
	des2src(tCustomer.zipcode,rPack->spost_code);
	des2src(tCustomer.custattr,rPack->sserial1);
	des2src(tCustomer.indate,rPack->sdate1);
	des2src(tCustomer.outdate,rPack->sdate2);
	strcpy(tCustomer.opendate,ats.trans.accdate);
	des2src(tCustomer.batchno,rPack->scust_limit);
	tCustomer.eaccflag[0]='0';
	tCustomer.useflag[0]='0';
	tCustomer.status[0]=STATUS_NORMAL;
	des2src(tCustomer.lastsaved,pAccTrans.hostdatetime);
	ret=DB_t_customer_add(&tCustomer);
	if(ret)
	{
		if(DB_REPEAT==ret)
			return ERRINFO(E_DB_CUSTOMER_E,tCustomer.custid);
		else
			return E_DB_CUSTOMER_I;
	}
	return 0;
}
int Update841601(ST_PACK * rPack,char *szMsg)
{
	int ret=0;
	char  sqlcmd[2048]="";
	T_t_customer InCustomer;
	T_t_customer customer;
	memset(&InCustomer,0,sizeof(InCustomer));
	memset(&customer,0,sizeof(customer));
	/////////////////////////////////rPack2TableStuct////////////////////////
	InCustomer.custid=rPack->lvol1;
	InCustomer.custtype=rPack->lvol3;
	InCustomer.feetype=rPack->lvol5;
	char batchupdate=rPack->sstatus4[0];
//	des2src(InCustomer.status,rPack->sstatus1);
	des2src(InCustomer.custname,rPack->sall_name);
	if(0==InCustomer.custname[0])
	{
		des2src(InCustomer.custname,rPack->sname);	
	}
	des2src(InCustomer.stuempno,rPack->scust_auth2);
	des2src(InCustomer.areacode,rPack->sbranch_code0);
	des2src(InCustomer.deptcode,rPack->scert_no);
	des2src(InCustomer.specialtycode,rPack->scust_no2);
	des2src(InCustomer.classname,rPack->scard1);
	des2src(InCustomer.idtype,rPack->smarket_code);
	des2src(InCustomer.idno,rPack->scust_auth);
	des2src(InCustomer.sex,rPack->smarket_code2);
	des2src(InCustomer.country,rPack->snation_code);
	des2src(InCustomer.nation,rPack->scust_type2);
	des2src(InCustomer.email,rPack->semail);
	des2src(InCustomer.tel,rPack->sphone);
	des2src(InCustomer.mobile,rPack->sphone2);
	des2src(InCustomer.addr,rPack->scusttypes);
	des2src(InCustomer.zipcode,rPack->spost_code);
	des2src(InCustomer.custattr,rPack->sserial1);
	des2src(InCustomer.indate,rPack->sdate1);
	des2src(InCustomer.outdate,rPack->sdate2);

	ret=DB_t_customer_read_lock_by_cur_and_custid(InCustomer.custid,&customer);
	if(ret)
	{
		if(DB_NOTFOUND==ret)
			return E_NOTEXIST_CUSTOMER;
		else
			return E_DB_CUSTOMER_R;
	}
	if(strlen(InCustomer.stuempno))
	{
		if(strcmp(InCustomer.stuempno,customer.stuempno)!=0)
		{
			ret=IsStuempnoExist(InCustomer.stuempno);
			if(ret)
			{
				DB_t_customer_free_lock_cur();
				if(DB_EXIST==ret)
					return E_EXIST_STUEMPNO;
				else
					return ret;
			}
			des2src(customer.stuempno,InCustomer.stuempno);
		}
	}
	if('1'==batchupdate)
	{
		if(InCustomer.custtype)
			customer.custtype=InCustomer.custtype;
		if(InCustomer.feetype)
		{
			if(customer.feetype!=InCustomer.feetype)
			{
				customer.feetype=InCustomer.feetype;
				ret=SyncUpdCardFeetype(customer.custid,customer.feetype);
				if(ret)
				{
					DB_t_customer_free_lock_cur();
					return ret;
				}
			}
		}
		if(strlen(InCustomer.custname))
			des2src(customer.custname,InCustomer.custname);
		if(strlen(InCustomer.areacode))
			des2src(customer.areacode,InCustomer.areacode);
		if(strlen(InCustomer.specialtycode))
			des2src(customer.specialtycode,InCustomer.specialtycode);
		if(strlen(InCustomer.classname))
			des2src(customer.classname,InCustomer.classname);
		if(strlen(InCustomer.idtype))
			des2src(customer.idtype,InCustomer.idtype);
		if(strlen(InCustomer.sex))
			des2src(customer.sex,InCustomer.sex);
		if(strlen(InCustomer.country))
			des2src(customer.country,InCustomer.country);
		if(strlen(InCustomer.nation))
			des2src(customer.nation,InCustomer.nation);
		if(strlen(InCustomer.email))
			des2src(customer.email,InCustomer.email);
		if(strlen(InCustomer.tel))
			des2src(customer.tel,InCustomer.tel);
		if(strlen(InCustomer.mobile))
			des2src(customer.mobile,InCustomer.mobile);
		if(strlen(InCustomer.addr))
			des2src(customer.addr,InCustomer.addr);
		if(strlen(InCustomer.zipcode))
			des2src(customer.zipcode,InCustomer.zipcode);
		if(strlen(InCustomer.custattr))
			des2src(customer.custattr,InCustomer.custattr);
		if(strlen(InCustomer.indate))
			des2src(customer.indate,InCustomer.indate);
		if(strlen(InCustomer.outdate))
		{
			des2src(customer.outdate,InCustomer.outdate);
			//同步修改卡表有效期
			ret=UpdateCardExpireDate(customer.custid,customer.outdate);
			if(ret)
			{
				return ret;
			}
		}
		T_t_dept dept;
		memset(&dept,0,sizeof(dept));
		if(strlen(InCustomer.deptcode))
		{
			DB_t_dept_read_by_deptcode(InCustomer.deptcode,&dept);
			des2src(customer.deptcode,InCustomer.deptcode);
			//des2src(customer.deptfullname,dept.deptfullname);			
		}
		if(strlen(InCustomer.idno))
		{
			if(strcmp(InCustomer.idno,customer.idno)!=0)
			{
			/*
				ret=IsIdnoExist(InCustomer.idno,InCustomer.idtype);
				if(ret)
				{
					DB_t_customer_free_lock_cur();
					return ret;
				}
			*/
				des2src(customer.idno,InCustomer.idno);
			}		
		}		
	}
	else
	{
		customer.custtype=InCustomer.custtype;
		if(customer.feetype!=InCustomer.feetype)
		{
			customer.feetype=InCustomer.feetype;
			ret=SyncUpdCardFeetype(customer.custid,customer.feetype);
			if(ret)
			{
				DB_t_customer_free_lock_cur();
				return ret;
			}
		}
		if(strcmp(customer.custname,InCustomer.custname)!=0)
		{
			des2src(customer.custname,InCustomer.custname);
			ret=SyncUpdCustName(customer.custid,customer.custname);
			if(ret)
			{
				DB_t_customer_free_lock_cur();
				return ret;
			}
		}
		des2src(customer.areacode,InCustomer.areacode);
		des2src(customer.specialtycode,InCustomer.specialtycode);
		des2src(customer.classname,InCustomer.classname);
		des2src(customer.idtype,InCustomer.idtype);
		des2src(customer.sex,InCustomer.sex);
		des2src(customer.country,InCustomer.country);
		des2src(customer.nation,InCustomer.nation);
		des2src(customer.email,InCustomer.email);
		des2src(customer.tel,InCustomer.tel);
		des2src(customer.mobile,InCustomer.mobile);
		des2src(customer.addr,InCustomer.addr);
		des2src(customer.zipcode,InCustomer.zipcode);
		des2src(customer.custattr,InCustomer.custattr);
		des2src(customer.indate,InCustomer.indate);

		if(strncmp(customer.outdate,InCustomer.outdate,8)!=0)
		{
			des2src(customer.outdate,InCustomer.outdate);
			ret=UpdateCardExpireDate(customer.custid,customer.outdate);
			if(ret)
			{
				return ret;
			}
		}
		T_t_dept dept;
		memset(&dept,0,sizeof(dept));
		if(strlen(InCustomer.deptcode))
		{
			DB_t_dept_read_by_deptcode(InCustomer.deptcode,&dept);
			des2src(customer.deptcode,InCustomer.deptcode);
			//des2src(customer.deptfullname,dept.deptfullname);			
		}
		else
		{
			customer.deptcode[0]=0;
			//customer.deptfullname[0]=0;
		}
		if(strlen(InCustomer.idno))
		{
			if(strcmp(InCustomer.idno,customer.idno)!=0)
			{
				/*
				ret=IsIdnoExist(InCustomer.idno,InCustomer.idtype);
				if(ret)
				{
					DB_t_customer_free_lock_cur();
					return ret;
				}
				*/
				des2src(customer.idno,InCustomer.idno);
			}		
		}	
		else
			customer.idno[0]=0;		
		
	}	
	des2src(customer.lastsaved,CAccTrans::GetInst().hostdatetime);
	toupper_word(customer.stuempno);
	ret=DB_t_customer_update_lock_by_cur(&customer);
	if(ret)
	{
		writelog(LOG_ERR,"sql:[%s]",sqlcmd);
		if(DB_NOTFOUND==ret)
			return E_DB_CUSTOMER_N;
		else
			return E_DB_CUSTOMER_U;
	}

	return 0;
}
int Delete841601(ST_PACK * rPack,char *szMsg)
{
	int ret=0;
	/////////////////////////////ColVarDeclare///////////////////////////////
	int custid=0;
	///////////////////////////////rPack2ColVar//////////////////////////////
	T_t_customer tCustomer;

	memset(&tCustomer,0,sizeof(tCustomer));
	custid=rPack->lvol1;

	ret=IsAccountCustidExist(custid);
	if(ret)
	{
		if(DB_EXIST==ret)
			return E_CUSTOMER_USED;
		else
			return ret;
	}
	ret=DB_t_customer_del_by_custid(custid);
	if(ret)
	{
		if(DB_NOTFOUND==ret)
			return E_DB_CUSTOMER_N;
		else
			return E_DB_CUSTOMER_D;
	}
	return 0;
	
	return 0;
}
int F841601(TRUSERID * handle, int iRequest, ST_PACK * rPack, int *pRetCode, char *szMsg)
{
	int ret=0;
	CAccTrans& ats=CAccTrans::GetInst();
	des2src(ats.trans.opercode,rPack->semp);
	switch(rPack->sstatus0[0])
	{
		//添加
		case 'A':
			ats.trans.transcode=MAKETRANSCODEADD(TCM_CUSTOMER);
			ret=ats.InitTrans();
			if(ret)
				return ret; 		
			ret=Add841601(rPack,szMsg);
			break;
		//注销
		case 'D':
			ats.trans.transcode=MAKETRANSCODEDEL(TCM_CUSTOMER);
			ret=ats.InitTrans();
			if(ret)
				return ret; 		
			ret=Delete841601(rPack,szMsg);
			break;
		//修改
		case 'U':
			ats.trans.transcode=MAKETRANSCODEUPD(TCM_CUSTOMER);
			ret=ats.InitTrans();
			if(ret)
				return ret; 		
			if(rPack->smain_flag[0] == '1')
			{
				if(strlen(rPack->scert_no)<=0 || strlen(rPack->scust_auth2)<=0)
					return E_INPUT_STUEMP_NO;
				return ModifyStuempNo(rPack,szMsg);
			}
			ret=Update841601(rPack,szMsg);
			break;
		default:
			//查询
			//ats.trans.transcode=MAKETRANSCODEQRY(TCM_CUSTOMER);
			//ret=ats.InitTrans();
			//if(ret)
			//	return ret; 		
			ret=Read841601(handle,iRequest,rPack,pRetCode,szMsg);
			break;
	}
	return ret;
}


