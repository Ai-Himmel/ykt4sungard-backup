#define _IN_SQC_  
ESQL #include "busqc.h"
ESQL #include <string.h>
ESQL #include <stdio.h>
ESQL #include <pubfunc.h>
ESQL #include <dictionary.h>

EXEC SQL INCLUDE SQLCA;
/*: 区域表删除                                                                             
  	函数名: F820303.sqc
	编程  : 黄勋章 2004-8-13 10:28
	描述  : 删除一个区域，在区域表中删除一条记录
	返回  : int 0 表示成功处理，其他作为处理失败
	参数  : TRUSERID *handle 本请求数据的通讯请求端标识
	参数  : ST_PACK *rPack 业务处理请求数据
	参数  : int *iRetCode 处理结果的返回代码，0表示成功，其他就是处理失败，在本业务处理函数调用之前，已经被初始化为0
	参数  : char *szMsg 处理结果的返回信息，在本业务处理函数调用之前，已经被初始化为空""                                                                      
*/                                                                                          
                                                                                            
// {820302 ,,"区域表修改" ,"!author!"       ,1,     false,0,0,0,0,0},                       
                                                                                            
int F820303(TRUSERID *handle,int iRequest,ST_PACK *in_pack,int *pRetCode,char *szMsg)              
{                                                                                           
   EXEC SQL BEGIN DECLARE SECTION;                                                          
		sqlint32	h_Area_no;                                                                      
   EXEC SQL END DECLARE SECTION;                                                            
                                                                                                                                                                                                                                                                                    
	h_Area_no = in_pack->lvol5;                         
                                                                                            
	EXEC SQL                 
	delete FROM YKT_CUR.T_PIF_Area
	WHERE Area_no=:h_Area_no;	                                                                                                                                                                  
	if (SQLCODE)                                                                        
   	{                 
		db_chk_err(__FILE__,__LINE__,&sqlca);
      		if (SQLCODE == SC_NOTFOUND)                                                           
		         *pRetCode = E_DB_AREA_N;                                                                   
	      else                                                                                  
		         *pRetCode = E_DB_AREA_U;                                                               
		goto L_RETU;
   	}                                                                                                                                                                                                                  
   	return 0;                                                                         
L_RETU:
	return -1;
                                                                                            
}                                                                                           
