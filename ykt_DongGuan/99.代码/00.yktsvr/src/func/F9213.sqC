ESQL #include <string.h>                               
ESQL #include <stdio.h>    
ESQL #include "errdef.h"  
ESQL #include "pubdb.h"  
ESQL #include "pubfunc.h"      
ESQL #include "busqc.h"                                
                          
                                                  
/*: 查询转账对帐表（前一版本）                              
  作者  : Dean                                      
  功能号: F900213                                    
  描述  : 查询转账对帐表                             
  返回  : int                                       
  参数  : TRUSERID *handle                          
  参数  : int iRequest                              
  参数  : ST_PACK *rPack                            
  参数  : int *pRetCode                             
  参数  : char *szMsg                               
*/                                                
                                                  
// {900213 ,F900213,"查询转账对帐表" ,"Dean"       ,1,     false,0,0,0,0,0}, 
                                                  
int F9213(TRUSERID *handle,int iRequest,ST_PACK *in_pack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
		char			hi_start[10+1]="";
		char			hi_end[10+1]="";
		char			hi_operator[10+1]="";
		char			hi_group_id[10+1]="";
		sqlint32		hi_serial_type=0;

		char			ho_school_name[260]="";
		sqlint32		ho_trade_num=0;
		double		ho_trade_amt=0;
		
		char 		h_sqlcmd[10240]="";
		sqlint16 		indication=0;
	EXEC SQL END DECLARE SECTION;


	char h_sqltmp[255+1]="";
	char	temp[255+1]="";
	int ret=0;
	int nrows = 0;

	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	// 准备处理结果中在ST_PACK中使用的字段
	Strncpy_t(hi_start, in_pack->sorder1, sizeof(hi_start));
	Strncpy_t(hi_end, in_pack->sorder2, sizeof(hi_end));
	Strncpy_t(hi_operator,in_pack->scust_no,sizeof(hi_operator));
	hi_serial_type=in_pack->lvol0;

	// 输入参数检查
	trim(hi_start);
	trim(hi_end);
	trim(hi_operator);
	if (!strlen(hi_start))
	{
		*pRetCode=E_INPUT_NOSTARTTIME;
		writelog(LOG_ERR,"Start date is null,hi_start[%s]errcode[%d]!",hi_start,E_INPUT_NOSTARTTIME);
		goto L_RETU;
	}
	if (!strlen (hi_end))
	{
		*pRetCode=E_INPUT_NOENDTIME;
		writelog(LOG_ERR,"End date is null,hi_end[%s]errcode[%d]!",hi_end,E_INPUT_NOENDTIME);
		goto L_RETU;
	}
	if (!strlen (hi_operator))
	{
		*pRetCode=E_INPUT_NOOPERATOR;
		writelog(LOG_ERR,"hi_operator,hi_operator[%s]errcode[%d]!",hi_operator,E_INPUT_NOOPERATOR);
		goto L_RETU;
	}
	sprintf(h_sqlcmd,"select (balance_date||'--'||(case when area_name is null  \
		and balance_date is not null then '小计'  \
		when balance_date is null then '合计--' else area_name end)) area_name, \
		sum(a.TRADE_COUNT),sum(a.trade_amt)  \
		from ykt_cur.t_tif_report_school_trade a \
		left join ykt_cur.t_pif_area b \
		on a.SCHOOL_CODE=b.school_code \
		where a.SERIal_TYPE=847301 and balance_date>=%s and balance_date<=%s \
		group by rollup(balance_date,b.area_name)",hi_start,hi_end);
	//writelog(LOG_ERR,"h_sqlt=[%s]",h_sqltmp);
	//writelog(LOG_ERR,"h_sqlcmd=[%s]",h_sqlcmd);

	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		*pRetCode=E_DB_T_REPORT_OPER_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  DECLARE C1 CURSOR FOR query_stmt;	
	if(SQLCODE)
	{
		*pRetCode=E_DB_T_REPORT_OPER_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		writelog(LOG_ALERT,"declare cursor err sqlcode[%d]",SQLCODE);
		goto L_RETU;
	}

	SetCol(handle,0);
	SetCol(handle,F_SALL_NAME,F_LVOL0,F_DAMT0,0);

	// 执行SQL语句

	EXEC SQL OPEN C1;

	if(SQLCODE)
	{
		*pRetCode=E_DB_TABLE_DBCARD_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		writelog(LOG_ALERT,"open cursor err sqlcode[%d]",SQLCODE);
		goto L_RETU;
	}
	while(1)
	{
		// 初始化宿主变量
		memset(ho_school_name,0,sizeof ho_school_name);
		ho_trade_num=0;
		ho_trade_amt=0;


		EXEC SQL FETCH C1 INTO
					:ho_school_name:indication,
					:ho_trade_num:indication,
					:ho_trade_amt:indication;
		ret=SQLCODE;
		if (ret)
		{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			EXEC SQL  CLOSE C1;
			if(DB_NOTFOUND==ret)
			{
				if(0==nrows)
				{
					*pRetCode=E_DB_T_REPORT_SHOP_BALANCE_N;
					writelog(LOG_DEBUG,"fetch t_tif_report_shop_balance no data [%d]",ret);
					goto L_RETU;
				}
				else
				{
					break;
				}
			}
			else
			{
				*pRetCode=E_DB_T_REPORT_SHOP_BALANCE_R;
				writelog(LOG_ERR,"fetch t_tif_report_shop_balance err [%d]",ret);
				goto L_RETU;
			}
		}

		des2src(out_pack->sall_name, ho_school_name); 	//银行名称
		out_pack->lvol0 = ho_trade_num;                   		//转账次数
		out_pack->damt0 = ho_trade_amt;                     	//补助金额
	
		
		PutRow(handle,out_pack,pRetCode,szMsg);
		nrows++;

	}

	EXEC SQL CLOSE C1;
	return 0;

	L_RETU:
		return *pRetCode;
}
                                                  
