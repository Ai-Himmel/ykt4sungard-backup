/* --------------------------------------------
 * 程序名称: F800783.sqc
 * 创建日期: Sep 29 2004
 * 程序作者: auto creat by wen jian
 * 版本信息: 1.0.0.0
 * 程序功能: update t_mif_alarmop
 * --------------------------------------------
 * 修改日期: 
 * 修改人员: 
 * 修改描述: 
 * 版本信息: 
 * 备注信息: 
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "busqc.h"

EXEC SQL INCLUDE SQLCA;

int F800783(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32	serial_no=0;                  	//报警流水号
	char    	finish_time[26+1]="";         	//处理完成时间
	char    	opresult[100+1]="";           	//
	sqlint16	indicator=0;
	EXEC SQL END DECLARE SECTION;


	int ret=0;
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	ResetNormalCPack(&aPack,0,1);

#ifdef DEBUG
	writelog(LOG_DEBUG,"serial_no      :lvol0          [%d]",rPack->lvol0);

	writelog(LOG_DEBUG,"opresult       :scusttypes     [%s]",rPack->scusttypes);
#endif
	serial_no=rPack->lvol0;

	EXEC SQL DECLARE alarmop_cur CURSOR FOR SELECT 
		finish_time,
		opresult
	FROM ykt_cur.t_mif_alarmop 
	WHERE 	serial_no = :serial_no 
 	FOR UPDATE;
	if(SQLCODE)
	{
		*pRetCode=E_DB_ALARMOP_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  OPEN alarmop_cur;
	if(SQLCODE)
	{
		*pRetCode=E_DB_ALARMOP_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  FETCH alarmop_cur INTO
		:finish_time:indicator,
		:opresult:indicator;
	ret=SQLCODE;
	if(ret)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		EXEC SQL  CLOSE alarmop_cur;
		if(DB_NOTFOUND==ret)
			*pRetCode=E_DB_ALARMOP_N;
		else
			*pRetCode=E_DB_ALARMOP_R;
		goto L_RETU;
	}
	getsysdatetime(finish_time);
	Strncpy_t(opresult,rPack->scusttypes,sizeof(opresult));

	EXEC SQL UPDATE ykt_cur.t_mif_alarmop SET 
		finish_time=:finish_time,
		opresult=:opresult
	WHERE current of alarmop_cur;
	ret=SQLCODE;
	if(ret)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		EXEC SQL  CLOSE alarmop_cur;
		if(DB_NOTFOUND==ret)
			*pRetCode=E_DB_ALARMOP_N;
		else
			*pRetCode=E_DB_ALARMOP_U;
		goto L_RETU;
	}

	EXEC SQL  CLOSE alarmop_cur;
	SetCol(handle,0);
	PutRow(handle,out_pack,pRetCode,szMsg);
	return 0;
L_RETU:
	return -1;
}
