/* --------------------------------------------
 * 程序名称: F847196.sqc
 * 创建日期: 2007-4-2
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能: 收费配置(增、删、改、查)
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/
#define _IN_SQC_
ESQL #include <string.h>
ESQL #include <stdio.h>
ESQL #include "pubfunc.h"
ESQL #include "pubdb.h"
ESQL #include "pubdef.h"
ESQL #include "errdef.h"
ESQL #include "dbfunc.h"
ESQL #include "fdsqc.h"
ESQL #include "dbfunc_foo.h"

EXEC SQL INCLUDE SQLCA;

static int Add847196(ST_PACK *rPack,char *szMsg)
{
	int ret=0;
	T_t_tif_cfgtxfee tCfgtxfee;

	memset(&tCfgtxfee,0,sizeof(tCfgtxfee));
	if(rPack->lvol0<=0)
	{
		return E_INPUT_DATA_INVAILD;
	}
	if(rPack->lvol1<0)
	{
		return E_INPUT_DATA_INVAILD;
	}	
	ret=DB_t_tif_cfgtxfee_del_by_tx_code_and_feetype(rPack->lvol0,rPack->lvol1);
	if(ret)
	{
		if(SQLCODE !=ret)
		{
			writelog(LOG_ERR,"ret[%d],tx_code[%d],feetype[%d]",ret,rPack->lvol0,rPack->lvol1);		
			return E_DB_CFGTXFEE_D;
		}
	}	
	SQLCODE=0;
	tCfgtxfee.tx_code=rPack->lvol0;
	tCfgtxfee.feetype=rPack->lvol1;
	des2src(tCfgtxfee.fee_list,rPack->scusttypes);
	des2src(tCfgtxfee.formula_list,rPack->vsvarstr0);
	ret=DB_t_tif_cfgtxfee_add(&tCfgtxfee);
	if (ret)
	{
		writelog(LOG_ERR,"ret[%d],tx_code[%d],feetype[%d]",ret,rPack->lvol0,rPack->lvol1);
		if(DB_REPEAT==ret)
			return E_DB_CFGTXFEE_E;
		else
			return E_DB_CFGTXFEE_I;
	}
	return 0;
}

int Update847196(ST_PACK *rPack)
{
	int ret=0;
/*
	EXEC SQL UPDATE YKT_CUR.t_tif_txfeecfg
		SET GROUP_NAME=:hi_group_name
		WHERE GROUP_ID=:hi_group_id;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		if(SQLCODE != DB_NOTFOUND)
		{
			return E_DB_GROUP_U;
		}
		return E_DB_GROUP_N;
	}
*/
	return -1;
}

static int Read847196(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32	tradecode;
	char		trademsg[256]="";
	sqlint32	feetype;
	char 	fee_list[256]="";
	char		formula_list[512]="";
	char sqlcmd[1024] = "";
	sqlint16 hi_indr = 0;
	EXEC SQL END DECLARE SECTION;

	int    ret=0;
	int    rows=0;
	int 	index=0;
	char sqltmp[500]="";
	char sTxType[256]="";
	char sFormula[256]="";

	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	sprintf(sqlcmd,"select t.tx_code,t.feetype,t.fee_list,t.formula_list,a.trademsg "
     				"   from t_tif_cfgtxfee t,t_pif_tradecode a "
				" where t.tx_code=a.tradecode  ");
	if(rPack->lvol0 > 0)
	{
		sprintf(sqltmp," and t.tx_code=%d  ",rPack->lvol0);
		strcat(sqlcmd,sqltmp);
	}
	if(rPack->lvol1 >= 0)
	{
		sprintf(sqltmp," and t.feetype=%d  ",rPack->lvol1);
		strcat(sqlcmd,sqltmp);
	}
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,0);
	SetCol(handle,F_LVOL0,F_SALL_NAME,F_LVOL1,F_VSVARSTR0,F_LVOL2,0);
	SQLCODE=0;
	EXEC SQL PREPARE txfeecfg_stmt FROM :sqlcmd;
	if(SQLCODE)
	{
			CHECK_DB_ERR;
		return E_DB_CURSOR_DECLARE;
	}
	
	EXEC SQL DECLARE txfeecfg_cur CURSOR FOR txfeecfg_stmt;
	if(SQLCODE)
	{
			CHECK_DB_ERR;
		return E_DB_CURSOR_DECLARE;
	}

	EXEC SQL OPEN txfeecfg_cur;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_OPEN;
	}
	while(1)
	{	
		EXEC SQL FETCH txfeecfg_cur INTO
		:tradecode:hi_indr,
		:feetype:hi_indr,
		:fee_list:hi_indr,
		:formula_list:hi_indr,
		:trademsg:hi_indr;
		if(SQLCODE)
		{
			ret = SQLCODE;
				CHECK_DB_ERR;
			EXEC SQL CLOSE txfeecfg_cur;
			if(DB_NOTFOUND == ret)
			{
				if(rows > 0)
					break;
				return E_DB_CFGTXFEE_N;
			}
			return E_DB_CFGTXFEE_R;
		}
		
		rows++;
		index=1;
		out_pack->lvol0=tradecode;
		des2src(out_pack->sall_name,trademsg);
		out_pack->lvol1=feetype;
		trim(fee_list);
		trim(sFormula);
		while(1)
		{
			ret=GetValueFromFmtBuf(fee_list,",",index,sTxType);
			if(ret)
			{
				break;
			}
			if(strlen(sTxType)<1)
				break;
			out_pack->lvol2=atoi(sTxType);			
			ret=GetValueFromFmtBuf(formula_list,",",index,sFormula);
			if(ret)
			{
				EXEC SQL CLOSE txfeecfg_cur;
				return E_DB_CFGTXFEE_R;
			}
			
			writelog(LOG_DEBUG,"index[%d]sTxType[%s]sFormula[%s]",index,sTxType,sFormula);
			des2src(out_pack->vsvarstr0,sFormula);
			PutRow(handle,out_pack,pRetCode,szMsg);
			if(rows%9==0)
				AnswerDataPart(handle,*pRetCode,szMsg);
			index++;
		}
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
}

static int Delete847196(ST_PACK *rPack)
{
	int ret;
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32	tradecode;
	sqlint32	feetype;
	EXEC SQL END DECLARE SECTION;
	if(rPack->lvol0<=0)
	{
		return E_INPUT_DATA_INVAILD;
	}
	if(rPack->lvol1<=0)
	{
		return E_INPUT_DATA_INVAILD;
	}
	ret=DB_t_tif_cfgtxfee_del_by_tx_code_and_feetype(rPack->lvol0,rPack->lvol1);
	if(ret)
	{
		writelog(LOG_ERR,"ret[%d],tx_code[%d],feetype[%d]",ret,rPack->lvol0,rPack->lvol1);
		if(SQLCODE == ret)
			return E_DB_CFGTXFEE_N;
		else
			return E_DB_CFGTXFEE_D;
	}
	return 0;
}

int F847196(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	int ret = 0;
	switch(rPack->sstatus0[0])
	{
		//添加
		case 'A':
			ret=Add847196(rPack,szMsg);
			break;
		//删除
		case 'D':
			ret=Delete847196(rPack);
			break;
		//查询
		case 'R':
			ret=Read847196(handle,iRequest,rPack,pRetCode,szMsg);
			break;
		//修改
		case 'U':
			ret=Update847196(rPack);
			break;
		default:
			ret=E_INPUT_DATA_INVAILD;
			break;
	}
	if(ret)
	{
		*pRetCode=ret;
		goto L_RETU;
	}
	return 0;
L_RETU:
	return  -1;
}

