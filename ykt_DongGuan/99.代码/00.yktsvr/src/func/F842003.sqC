/* --------------------------------------------
 * 程序名称: F842003.sqc
 * 创建日期: Sep 29 2004
 * 程序作者: auto creat by wen jian
 * 版本信息: 1.0.0.0
 * 程序功能: update t_cif_dept
 * --------------------------------------------
 * 修改日期: 
 * 修改人员: 
 * 修改描述: 
 * 版本信息: 
 * 备注信息: 
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "busqc.h"

EXEC SQL INCLUDE SQLCA;

int F842003(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char    	deptcode[10+1]="";           	//单位代码
	char    	is_academy[1+1]="";           	//是否院系
	char    	dept_name[150+1]="";          	//单位名称
	char    	e_name[150+1]="";             	//英文名称
	char    	parentdeptcode[10+1]="";     	//上级单位
	sqlint32	dept_level=0;                 	//单位级别
	char    	is_availability[1+1]="";      	//是否有效
	char    	comments[150+1]="";           	//备注
	sqlint16	indicator=0;
	EXEC SQL END DECLARE SECTION;


	int ret=0;
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	ResetNormalCPack(&aPack,0,1);

#ifdef DEBUG
	writelog(LOG_DEBUG,"deptcode      :scust_no       [%s]",rPack->scust_no);

	writelog(LOG_DEBUG,"is_academy     :smarket_code   [%s]",rPack->smarket_code);
	writelog(LOG_DEBUG,"dept_name      :ssectypes      [%s]",rPack->ssectypes);
	writelog(LOG_DEBUG,"e_name         :vsvarstr0      [%s]",rPack->vsvarstr0);
	writelog(LOG_DEBUG,"parentdeptcode:scust_no2      [%s]",rPack->scust_no2);
	writelog(LOG_DEBUG,"dept_level     :lvol0          [%d]",rPack->lvol0);
	writelog(LOG_DEBUG,"is_availability:smarket_code2  [%s]",rPack->smarket_code2);
	writelog(LOG_DEBUG,"comments       :scusttypes     [%s]",rPack->scusttypes);
#endif
	Strncpy_t(deptcode,rPack->scust_no,sizeof(deptcode));

	EXEC SQL DECLARE dept_cur CURSOR FOR SELECT 
		is_academy,
		dept_name,
		e_name,
		parentdeptcode,
		dept_level,
		is_availability,
		comments
	FROM ykt_cur.t_cif_dept 
	WHERE 	deptcode = :deptcode 
 	FOR UPDATE;
	if(SQLCODE)
	{
		*pRetCode=E_DB_DEPT_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  OPEN dept_cur;
	if(SQLCODE)
	{
		*pRetCode=E_DB_DEPT_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  FETCH dept_cur INTO
		:is_academy:indicator,
		:dept_name:indicator,
		:e_name:indicator,
		:parentdeptcode:indicator,
		:dept_level:indicator,
		:is_availability:indicator,
		:comments:indicator;
	ret=SQLCODE;
	if(ret)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		EXEC SQL  CLOSE dept_cur;
		if(DB_NOTFOUND==ret)
			*pRetCode=E_DB_DEPT_N;
		else
			*pRetCode=E_DB_DEPT_R;
		goto L_RETU;
	}
	Strncpy_t(is_academy,rPack->smarket_code,sizeof(is_academy));
	Strncpy_t(dept_name,rPack->ssectypes,sizeof(dept_name));
	Strncpy_t(e_name,rPack->vsvarstr0,sizeof(e_name));
	Strncpy_t(parentdeptcode,rPack->scust_no2,sizeof(parentdeptcode));
	dept_level=rPack->lvol0;
	Strncpy_t(is_availability,rPack->smarket_code2,sizeof(is_availability));
	Strncpy_t(comments,rPack->scusttypes,sizeof(comments));

	EXEC SQL UPDATE ykt_cur.t_cif_dept SET 
		is_academy=:is_academy,
		dept_name=:dept_name,
		e_name=:e_name,
		parentdeptcode=:parentdeptcode,
		dept_level=:dept_level,
		is_availability=:is_availability,
		comments=:comments
	WHERE current of dept_cur;
	ret=SQLCODE;
	if(ret)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		EXEC SQL  CLOSE dept_cur;
		if(DB_NOTFOUND==ret)
			*pRetCode=E_DB_DEPT_N;
		else
			*pRetCode=E_DB_DEPT_U;
		goto L_RETU;
	}

	EXEC SQL  CLOSE dept_cur;
	SetCol(handle,0);
	PutRow(handle,out_pack,pRetCode,szMsg);
	return 0;
L_RETU:
	return -1;
}
