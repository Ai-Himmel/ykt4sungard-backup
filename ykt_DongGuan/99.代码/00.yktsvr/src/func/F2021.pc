/* --------------------------------------------
 * 创建日期: 2011-01-14
 * 程序作者: 闻剑
 * 版本信息: 3.0.0.0
 * 程序功能: 充值回退
 * --------------------------------------------*/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "cpack.h"
#include "errdef.h"
#include "pubdef.h"
#include "pubdb.h"
#include "pubfunc.h"
#include "dbfunc.h"
#include "dbfunc_foo.h"
#include "acctrans.h"
#include "busqc.h"
#include <string>
#include <sstream>
#include "checkcardstatus.h"
#include "cardprocess.h"
using namespace std;
EXEC SQL INCLUDE SQLCA;
int ChkOrgiDpsdtl(int accdate, char* refno , T_t_dpsdtl* dpsdtl)
{
	int ret = 0;
	ret = DB_t_dpsdtl_read_lock_by_c0_and_accdate_and_refno(accdate, refno, dpsdtl);
	if(ret)
	{
		writelog(LOG_ERR,"accdate[%d], refno[%s]",accdate, refno);
		if(DB_NOTFOUND == ret)
			return E_DB_DPSDTL_N;
		else
			return E_DB_DPSDTL_R;
	}
	if(TRANSTATUS_SUCC != dpsdtl->status)
	{
		DB_t_dpsdtl_free_lock_by_c0();
		if(TRANSTATUS_CANCEL == dpsdtl->status)
		{
			ERRTIP("交易已经回退");
			return E_COMMON_ERR;
		}
		else
		{
			ERRTIP("该交易不成功,不需要回退");
			return E_COMMON_ERR;
		}
	}
	if(dpsdtl->amount < 0)
	{
		DB_t_dpsdtl_free_lock_by_c0();
		ERRTIP("已回退的交易不允许再回退");
		return E_COMMON_ERR;
	}
	dpsdtl->status = TRANSTATUS_CANCEL;
	ret = DB_t_dpsdtl_update_lock_by_c0(dpsdtl);
	if(ret)
	{
		return E_DB_DPSDTL_U;
	}
	return 0;
}
int F2021(TRUSERID *handle, int iRequest, ST_PACK *rPack, int *pRetCode, char *szMsg)
{
	int ret = 0;
	CAccTrans& ats = CAccTrans::GetInst();
	strcpy(ats.trans.opercode, ats.reqpack->semp);
	strcpy(ats.trans.samno, ats.reqpack->snote);
	ats.trans.termseqno=ats.reqpack->lserial1;
	ats.trans.termdate = atol(ats.reqpack->sdate0);
	ats.trans.termtime = atol(ats.reqpack->stime0);
	des2src(ats.trans.cardphyid, rPack->scust_auth);
	des2src(ats.trans.samno, rPack->sserial1);
	des2src(ats.trans.cardasno, rPack->scard0);
	des2src(ats.trans.remark,rPack->snote);
	ats.SetCardCntAndCardBal(ats.reqpack->lvol5, ats.reqpack->lvol6, ats.reqpack->lvol7);

	ret = ats.ChkOper();
	if(ret)
		return ret;
	char o_refno[21] = {0};
	int o_accdate = atol(rPack->sdate3);
	des2src(o_refno,rPack->scert_no);
	T_t_dpsdtl  orgiDpsdtl;
	memset(&orgiDpsdtl, 0, sizeof(orgiDpsdtl));
	ret = ChkOrgiDpsdtl(o_accdate, o_refno, &orgiDpsdtl);
	if(ret)
		return ret;
	ats.SetInputAmt(-orgiDpsdtl.amount);
	ats.trans.transtype = orgiDpsdtl.transtype;
	ats.trans.transcode = orgiDpsdtl.transcode;
	ret = GetCardIDByCardasno(ats.trans.cardasno, &ats.trans.cardid);
	if(ret)
	{
		return ret;
	}
	CCardDpsCancel transObj;
	transObj.SetTrans(ats.trans);
	if(!transObj.LockCard())
	{
		return transObj.GetErrCode();
	}
	if(!transObj.ExecBefChk())
	{
		return transObj.GetErrCode();
	}
	if(!transObj.Execute())
	{
		return transObj.GetErrCode();
	}
	if(!transObj.ExecAftChk())
	{
		return transObj.GetErrCode();
	}
	if(!transObj.SaveExecResult())
	{
		return transObj.GetErrCode();
	}
	if(!transObj.buildOutput())
	{
		return transObj.GetErrCode();
	}
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);

	ResetNormalCPack(&aPack, 0, 1);
	SetCol(handle, 0);
	SetCol(handle, F_LVOL0, F_LVOL8, F_LVOL9, F_SDATE1, F_STIME1, F_SCARD0,
	       F_SDATE3, F_SCERT_NO,F_SEMP, F_LWITHDRAW_FLAG, F_SALL_NAME, F_SPHONE, F_SNAME2, F_LSERIAL0, F_VSMESS, 0);
	outPack->lvol0 = transObj.GetObjCard().cardno;
	sprintf(outPack->sdate3,"%d",ats.accdate);
	strcpy(outPack->scert_no,transObj.GetTrans().refno);
	des2src(outPack->scard0, transObj.GetObjCard().cardasno);
	outPack->lvol8 = ats.trans.inputamt;
	outPack->lvol9 = transObj.GetAftcardbal();
	sprintf(outPack->sdate1, "%d", ats.hostdate);
	sprintf(outPack->stime1, "%06d", ats.hosttime);
	des2src(outPack->semp, ats.trans.opercode);
	outPack->lwithdraw_flag = ats.trans.termid;
	strcpy(outPack->sname2, transObj.GetObjCardtype().cardtypename);
	strcpy(outPack->sall_name,transObj.GetObjCustomer().custname);
	strcpy(outPack->sphone, transObj.GetObjCustomer().mobile);
	outPack->lserial0 = transObj.GetObjOperdtl().operseqno;
	sprintf(ats.trans.remark, "回退金额%.2lf元,卡余额%.2lf元", ats.trans.inputamt / 100.0,  transObj.GetAftcardbal() / 100.0);
	des2src(outPack->vsmess, ats.trans.remark);
	PutRow(handle, outPack, pRetCode, szMsg);
	return 0;
}
