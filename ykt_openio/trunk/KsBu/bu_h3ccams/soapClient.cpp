/* soapClient.cpp
   Generated by gSOAP 2.7.8c from CamsWebService.h
   Copyright (C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.8c 2009-03-02 09:49:46 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__pay(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__PayParam *_in0, struct ns37__payResponse &_param_2)
{	struct ns37__pay soap_tmp_ns37__pay;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__pay._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__pay(soap, &soap_tmp_ns37__pay);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__pay(soap, &soap_tmp_ns37__pay, "ns37:pay", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__pay(soap, &soap_tmp_ns37__pay, "ns37:pay", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__payResponse(soap, &_param_2);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__payResponse(soap, &_param_2, "ns37:payResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__randomReq(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns37__randomReqResponse &_param_3)
{	struct ns37__randomReq soap_tmp_ns37__randomReq;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__randomReq(soap, &soap_tmp_ns37__randomReq);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__randomReq(soap, &soap_tmp_ns37__randomReq, "ns37:randomReq", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__randomReq(soap, &soap_tmp_ns37__randomReq, "ns37:randomReq", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__randomReqResponse(soap, &_param_3);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__randomReqResponse(soap, &_param_3, "ns37:randomReqResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__login(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns23__OperatorInfo *_in0, struct ns37__loginResponse &_param_4)
{	struct ns37__login soap_tmp_ns37__login;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__login._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__login(soap, &soap_tmp_ns37__login);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__login(soap, &soap_tmp_ns37__login, "ns37:login", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__login(soap, &soap_tmp_ns37__login, "ns37:login", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__loginResponse(soap, &_param_4);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__loginResponse(soap, &_param_4, "ns37:loginResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__logout(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns37__logoutResponse &_param_5)
{	struct ns37__logout soap_tmp_ns37__logout;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__logout(soap, &soap_tmp_ns37__logout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__logout(soap, &soap_tmp_ns37__logout, "ns37:logout", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__logout(soap, &soap_tmp_ns37__logout, "ns37:logout", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__logoutResponse(soap, &_param_5);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__logoutResponse(soap, &_param_5, "ns37:logoutResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__singleQuery(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns24__QueryActionInfo *_in0, struct ns37__singleQueryResponse &_param_6)
{	struct ns37__singleQuery soap_tmp_ns37__singleQuery;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__singleQuery._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__singleQuery(soap, &soap_tmp_ns37__singleQuery);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__singleQuery(soap, &soap_tmp_ns37__singleQuery, "ns37:singleQuery", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__singleQuery(soap, &soap_tmp_ns37__singleQuery, "ns37:singleQuery", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__singleQueryResponse(soap, &_param_6);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__singleQueryResponse(soap, &_param_6, "ns37:singleQueryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__multiQuery(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns24__QueryActionInfo *_in0, struct ns37__multiQueryResponse &_param_7)
{	struct ns37__multiQuery soap_tmp_ns37__multiQuery;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__multiQuery._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__multiQuery(soap, &soap_tmp_ns37__multiQuery);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__multiQuery(soap, &soap_tmp_ns37__multiQuery, "ns37:multiQuery", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__multiQuery(soap, &soap_tmp_ns37__multiQuery, "ns37:multiQuery", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__multiQueryResponse(soap, &_param_7);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__multiQueryResponse(soap, &_param_7, "ns37:multiQueryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__addAcctUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns26__AddAcctParam *_in0, struct ns37__addAcctUserResponse &_param_8)
{	struct ns37__addAcctUser soap_tmp_ns37__addAcctUser;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__addAcctUser._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__addAcctUser(soap, &soap_tmp_ns37__addAcctUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__addAcctUser(soap, &soap_tmp_ns37__addAcctUser, "ns37:addAcctUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__addAcctUser(soap, &soap_tmp_ns37__addAcctUser, "ns37:addAcctUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__addAcctUserResponse(soap, &_param_8);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__addAcctUserResponse(soap, &_param_8, "ns37:addAcctUserResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__modifyAcctUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns27__ModifyAcctParam *_in0, struct ns37__modifyAcctUserResponse &_param_9)
{	struct ns37__modifyAcctUser soap_tmp_ns37__modifyAcctUser;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__modifyAcctUser._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__modifyAcctUser(soap, &soap_tmp_ns37__modifyAcctUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__modifyAcctUser(soap, &soap_tmp_ns37__modifyAcctUser, "ns37:modifyAcctUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__modifyAcctUser(soap, &soap_tmp_ns37__modifyAcctUser, "ns37:modifyAcctUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__modifyAcctUserResponse(soap, &_param_9);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__modifyAcctUserResponse(soap, &_param_9, "ns37:modifyAcctUserResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__deleteAcctUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns28__DelAcctParam *_in0, struct ns37__deleteAcctUserResponse &_param_10)
{	struct ns37__deleteAcctUser soap_tmp_ns37__deleteAcctUser;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__deleteAcctUser._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__deleteAcctUser(soap, &soap_tmp_ns37__deleteAcctUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__deleteAcctUser(soap, &soap_tmp_ns37__deleteAcctUser, "ns37:deleteAcctUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__deleteAcctUser(soap, &soap_tmp_ns37__deleteAcctUser, "ns37:deleteAcctUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__deleteAcctUserResponse(soap, &_param_10);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__deleteAcctUserResponse(soap, &_param_10, "ns37:deleteAcctUserResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__queryAcctByName(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns37__queryAcctByNameResponse &_param_11)
{	struct ns37__queryAcctByName soap_tmp_ns37__queryAcctByName;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__queryAcctByName._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__queryAcctByName(soap, &soap_tmp_ns37__queryAcctByName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__queryAcctByName(soap, &soap_tmp_ns37__queryAcctByName, "ns37:queryAcctByName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__queryAcctByName(soap, &soap_tmp_ns37__queryAcctByName, "ns37:queryAcctByName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__queryAcctByNameResponse(soap, &_param_11);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__queryAcctByNameResponse(soap, &_param_11, "ns37:queryAcctByNameResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__queryAcctPassword(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns37__queryAcctPasswordResponse &_param_12)
{	struct ns37__queryAcctPassword soap_tmp_ns37__queryAcctPassword;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__queryAcctPassword._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__queryAcctPassword(soap, &soap_tmp_ns37__queryAcctPassword);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__queryAcctPassword(soap, &soap_tmp_ns37__queryAcctPassword, "ns37:queryAcctPassword", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__queryAcctPassword(soap, &soap_tmp_ns37__queryAcctPassword, "ns37:queryAcctPassword", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__queryAcctPasswordResponse(soap, &_param_12);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__queryAcctPasswordResponse(soap, &_param_12, "ns37:queryAcctPasswordResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__changeAcctPassword(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns29__ChgAcctPassParam *_in0, struct ns37__changeAcctPasswordResponse &_param_13)
{	struct ns37__changeAcctPassword soap_tmp_ns37__changeAcctPassword;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__changeAcctPassword._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__changeAcctPassword(soap, &soap_tmp_ns37__changeAcctPassword);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__changeAcctPassword(soap, &soap_tmp_ns37__changeAcctPassword, "ns37:changeAcctPassword", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__changeAcctPassword(soap, &soap_tmp_ns37__changeAcctPassword, "ns37:changeAcctPassword", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__changeAcctPasswordResponse(soap, &_param_13);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__changeAcctPasswordResponse(soap, &_param_13, "ns37:changeAcctPasswordResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__applyService(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns30__ApplyServiceParam *_in0, struct ns37__applyServiceResponse &_param_14)
{	struct ns37__applyService soap_tmp_ns37__applyService;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__applyService._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__applyService(soap, &soap_tmp_ns37__applyService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__applyService(soap, &soap_tmp_ns37__applyService, "ns37:applyService", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__applyService(soap, &soap_tmp_ns37__applyService, "ns37:applyService", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__applyServiceResponse(soap, &_param_14);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__applyServiceResponse(soap, &_param_14, "ns37:applyServiceResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__cancelService(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns31__DelUserServiceParam *_in0, struct ns37__cancelServiceResponse &_param_15)
{	struct ns37__cancelService soap_tmp_ns37__cancelService;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__cancelService._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__cancelService(soap, &soap_tmp_ns37__cancelService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__cancelService(soap, &soap_tmp_ns37__cancelService, "ns37:cancelService", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__cancelService(soap, &soap_tmp_ns37__cancelService, "ns37:cancelService", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__cancelServiceResponse(soap, &_param_15);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__cancelServiceResponse(soap, &_param_15, "ns37:cancelServiceResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__queryAcctServiceInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns37__queryAcctServiceInfoResponse &_param_16)
{	struct ns37__queryAcctServiceInfo soap_tmp_ns37__queryAcctServiceInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__queryAcctServiceInfo._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__queryAcctServiceInfo(soap, &soap_tmp_ns37__queryAcctServiceInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__queryAcctServiceInfo(soap, &soap_tmp_ns37__queryAcctServiceInfo, "ns37:queryAcctServiceInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__queryAcctServiceInfo(soap, &soap_tmp_ns37__queryAcctServiceInfo, "ns37:queryAcctServiceInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__queryAcctServiceInfoResponse(soap, &_param_16);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__queryAcctServiceInfoResponse(soap, &_param_16, "ns37:queryAcctServiceInfoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__queryAppendDefInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns37__queryAppendDefInfoResponse &_param_17)
{	struct ns37__queryAppendDefInfo soap_tmp_ns37__queryAppendDefInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__queryAppendDefInfo(soap, &soap_tmp_ns37__queryAppendDefInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__queryAppendDefInfo(soap, &soap_tmp_ns37__queryAppendDefInfo, "ns37:queryAppendDefInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__queryAppendDefInfo(soap, &soap_tmp_ns37__queryAppendDefInfo, "ns37:queryAppendDefInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__queryAppendDefInfoResponse(soap, &_param_17);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__queryAppendDefInfoResponse(soap, &_param_17, "ns37:queryAppendDefInfoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__addBlackList(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns37__addBlackListResponse &_param_18)
{	struct ns37__addBlackList soap_tmp_ns37__addBlackList;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__addBlackList._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__addBlackList(soap, &soap_tmp_ns37__addBlackList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__addBlackList(soap, &soap_tmp_ns37__addBlackList, "ns37:addBlackList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__addBlackList(soap, &soap_tmp_ns37__addBlackList, "ns37:addBlackList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__addBlackListResponse(soap, &_param_18);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__addBlackListResponse(soap, &_param_18, "ns37:addBlackListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__deleteBlackList(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns37__deleteBlackListResponse &_param_19)
{	struct ns37__deleteBlackList soap_tmp_ns37__deleteBlackList;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__deleteBlackList._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__deleteBlackList(soap, &soap_tmp_ns37__deleteBlackList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__deleteBlackList(soap, &soap_tmp_ns37__deleteBlackList, "ns37:deleteBlackList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__deleteBlackList(soap, &soap_tmp_ns37__deleteBlackList, "ns37:deleteBlackList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__deleteBlackListResponse(soap, &_param_19);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__deleteBlackListResponse(soap, &_param_19, "ns37:deleteBlackListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__queryBlackList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns32__BlackListQueryInfo *_in0, struct ns37__queryBlackListResponse &_param_20)
{	struct ns37__queryBlackList soap_tmp_ns37__queryBlackList;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__queryBlackList._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__queryBlackList(soap, &soap_tmp_ns37__queryBlackList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__queryBlackList(soap, &soap_tmp_ns37__queryBlackList, "ns37:queryBlackList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__queryBlackList(soap, &soap_tmp_ns37__queryBlackList, "ns37:queryBlackList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__queryBlackListResponse(soap, &_param_20);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__queryBlackListResponse(soap, &_param_20, "ns37:queryBlackListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__queryUserBalance(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns37__queryUserBalanceResponse &_param_21)
{	struct ns37__queryUserBalance soap_tmp_ns37__queryUserBalance;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__queryUserBalance._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__queryUserBalance(soap, &soap_tmp_ns37__queryUserBalance);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__queryUserBalance(soap, &soap_tmp_ns37__queryUserBalance, "ns37:queryUserBalance", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__queryUserBalance(soap, &soap_tmp_ns37__queryUserBalance, "ns37:queryUserBalance", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__queryUserBalanceResponse(soap, &_param_21);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__queryUserBalanceResponse(soap, &_param_21, "ns37:queryUserBalanceResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__queryLanService(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns33__LanQryCondition *_in0, struct ns37__queryLanServiceResponse &_param_22)
{	struct ns37__queryLanService soap_tmp_ns37__queryLanService;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__queryLanService._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__queryLanService(soap, &soap_tmp_ns37__queryLanService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__queryLanService(soap, &soap_tmp_ns37__queryLanService, "ns37:queryLanService", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__queryLanService(soap, &soap_tmp_ns37__queryLanService, "ns37:queryLanService", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__queryLanServiceResponse(soap, &_param_22);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__queryLanServiceResponse(soap, &_param_22, "ns37:queryLanServiceResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__queryLanAccessDetail(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns34__LanAccessDetailQueryInfo *_in0, struct ns37__queryLanAccessDetailResponse &_param_23)
{	struct ns37__queryLanAccessDetail soap_tmp_ns37__queryLanAccessDetail;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__queryLanAccessDetail._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__queryLanAccessDetail(soap, &soap_tmp_ns37__queryLanAccessDetail);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__queryLanAccessDetail(soap, &soap_tmp_ns37__queryLanAccessDetail, "ns37:queryLanAccessDetail", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__queryLanAccessDetail(soap, &soap_tmp_ns37__queryLanAccessDetail, "ns37:queryLanAccessDetail", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__queryLanAccessDetailResponse(soap, &_param_23);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__queryLanAccessDetailResponse(soap, &_param_23, "ns37:queryLanAccessDetailResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__queryAcctList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns35__AccountListQueryInfo *_in0, struct ns37__queryAcctListResponse &_param_24)
{	struct ns37__queryAcctList soap_tmp_ns37__queryAcctList;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__queryAcctList._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__queryAcctList(soap, &soap_tmp_ns37__queryAcctList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__queryAcctList(soap, &soap_tmp_ns37__queryAcctList, "ns37:queryAcctList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__queryAcctList(soap, &soap_tmp_ns37__queryAcctList, "ns37:queryAcctList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__queryAcctListResponse(soap, &_param_24);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__queryAcctListResponse(soap, &_param_24, "ns37:queryAcctListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns37__bindAccount(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns36__BindParam *_in0, struct ns37__bindAccountResponse &_param_25)
{	struct ns37__bindAccount soap_tmp_ns37__bindAccount;
	if (!soap_endpoint)
		soap_endpoint = "http://10.153.89.79/csi/services/CamsWebService";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns37__bindAccount._in0 = _in0;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns37__bindAccount(soap, &soap_tmp_ns37__bindAccount);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns37__bindAccount(soap, &soap_tmp_ns37__bindAccount, "ns37:bindAccount", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns37__bindAccount(soap, &soap_tmp_ns37__bindAccount, "ns37:bindAccount", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_ns37__bindAccountResponse(soap, &_param_25);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns37__bindAccountResponse(soap, &_param_25, "ns37:bindAccountResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
