/*
 * IndexFrame.java
 *
 * Created on __DATE__, __TIME__
 */

package com.sungard.ticketsys;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.WindowConstants;
import org.apache.log4j.Logger;

import com.sungard.ticketsys.common.Configuration;
import com.sungard.ticketsys.page.busSer.BusSerPanel;
import com.sungard.ticketsys.page.busSer.LinePanel;
import com.sungard.ticketsys.page.busSer.SerSetPanel;
import com.sungard.ticketsys.page.pos.OpenPortPanel;
import com.sungard.ticketsys.page.pos.SignInPanel;
import com.sungard.ticketsys.page.report.BusReportPanel;
import com.sungard.ticketsys.page.runBus.BusPanel;
import com.sungard.ticketsys.page.runBus.RunbusPanel;
import com.sungard.ticketsys.page.ticket.BackTickePanel;
import com.sungard.ticketsys.page.ticket.TickePanel;
import com.sungard.ticketsys.service.card.KsCardInterfaceUtil;

/**
 * 首页，程序入口
 * @author zhou.xuan
 */
public class IndexFrame extends JFrame {
	
    private static final Logger logger = Logger.getLogger(IndexFrame.class);
	private static final long serialVersionUID = 1L;

	//首页面pane
	private JPanel jContentPane = null;
	
	private JMenuBar menuBar = null;
	
	//用户管理菜单
	private JMenu userMenu ;
	private JMenuItem userInfoMenuItem;
	private JMenuItem userMagMenuItem;
	private JMenuItem authSetMenuItem;
	private JMenuItem exitMenuItem;
	
	//车次管理 菜单 
	private JMenu busSerMenu;
	private JMenuItem pathMenuItem;
	private JMenuItem busMenuItem;
	private JMenuItem serInfoMenuItem;
	private JMenuItem serSetMenuItem;
	//路线页面
	private LinePanel linePanel;
	//班次管理页面
	private BusSerPanel busSerPanel;
	//车次管理页面
	private SerSetPanel serSetPanel;
	
	//票务管理菜单
	private JMenu ticketMenu;
	private JMenuItem ticketMenuItem;
	private JMenuItem backTckMenuItem;
	//售票管理
	private TickePanel tickePanel;
	//退票管理
	private BackTickePanel backTickePanel;
	
	//发车管理
	private JMenu runbusMenu;
	private JMenuItem runbusItem;
	//车辆管理页面
	private BusPanel busPanel;
	//发车确认
	private RunbusPanel runbusPanel;
	
	//统计查询
	private JMenu reportMenu;
	private JMenuItem busReportItem;
	//班车统计
	private BusReportPanel busReportPanel;
	
	//读卡器管理
	private JMenu posMenu;
	private JMenuItem openPortItem;
	private JMenuItem signInItem;
	
	//打开端口
	private OpenPortPanel openPortPanel;
	//读卡器签到
	private SignInPanel signInPanel;
	
	
	//帮助菜单 
	private JMenu helpMenu;
	private JMenuItem aboutMenuItem;	
	
	
	
	
//	public static int target = 1;	

	/** Creates new form IndexFrame */
	public IndexFrame() {
		super();
		initComponents();
		initCfg();
		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
	}
	
	private void initCfg(){
		Configuration.load();
		KsCardInterfaceUtil.loadLibrary();
        KsCardInterfaceUtil.ksInit();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	private void initComponents() {
		Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
		this.setSize(800, 700);
		setLocation((d.width - getWidth()) / 2, (d.height - getHeight()) / 2);
		this.setJMenuBar(getMenu());
		this.setContentPane(getJContentPane());
		this.setTitle("售票系统");
		this.setResizable(false);
	}
	
	private JMenuBar getMenu() {
		if(menuBar == null){
			menuBar = new JMenuBar();
			//用户管理菜单
//			menuBar.add(getUserMenu());
			//车次管理 
			menuBar.add(getBusSerMenu());
			//票务管理
			menuBar.add(getTicketMenu());
			//发车管理
			menuBar.add(getRunbusMenu());
			//统计查询
			menuBar.add(getReportMenu());
			//读卡器管理
			menuBar.add(getPosMenu());
			//帮助
			menuBar.add(gethelpMenu());
		}
		return menuBar;
	}
	
	private JMenu getPosMenu() {
		if(posMenu == null){
			//读卡器管理
			posMenu = new JMenu();			
			posMenu.setText("读卡器管理");

			//打开端口
			posMenu.add(getOpenPortMenuItem());
			//读卡器签到
			posMenu.add(getSignInMenuItem());
		}
		return posMenu;
	}
	

	private JMenuItem getOpenPortMenuItem() {
			if(openPortItem==null){
				//打开端口
				openPortItem = new JMenuItem();
				openPortItem.setText("打开端口");
				openPortItem.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent evt) {
						
							//隐藏其他页面
							hideCurrenPanel();
							//显示当前功能的页面
							jContentPane.add(getOpenPortPanel(), BorderLayout.CENTER);
							openPortPanel.setVisible(true);
					}

				});
			}
			return openPortItem;
		}
	
	public OpenPortPanel getOpenPortPanel() {
		if (openPortPanel == null) {
			openPortPanel = new OpenPortPanel(this);
			openPortPanel.setVisible(false);						
		}
		return openPortPanel;
	}

	private JMenuItem getSignInMenuItem() {
		if(signInItem==null){
			//读卡器签到
			signInItem = new JMenuItem();
			signInItem.setText("读卡器签到");
			signInItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
						//隐藏其他页面
						hideCurrenPanel();
						//显示当前功能的页面
						jContentPane.add(getSignInItemPanel(), BorderLayout.CENTER);
						signInPanel.setVisible(true);
				}

			});
		}
		return signInItem;
	}
	
	public SignInPanel getSignInItemPanel() {
		if (signInPanel == null) {
			signInPanel = new SignInPanel(this);
			signInPanel.setVisible(false);						
	}
	return signInPanel;
}

	private JMenu getReportMenu() {
		if(reportMenu == null){
			//统计查询 
			reportMenu = new JMenu();			
			reportMenu.setText("统计查询");

			//班车统计
			reportMenu.add(getBusReportMenuItem());
		}
		return reportMenu;
	}
	
	private JMenuItem getBusReportMenuItem() {
		if(busReportItem==null){
			//班车统计
			busReportItem = new JMenuItem();
			busReportItem.setText("班车统计");
			busReportItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
						//隐藏其他页面
						hideCurrenPanel();
						//显示当前功能的页面
						jContentPane.add(getBusReportPanel(), BorderLayout.CENTER);
						busReportPanel.getSerSet();
						busReportPanel.setVisible(true);
				}

			});
		}
		return busReportItem;
	}
	
	private BusReportPanel getBusReportPanel() {
		if (busReportPanel == null) {
			busReportPanel = new BusReportPanel(this);
			busReportPanel.setVisible(false);						
		}
		return busReportPanel;
	}


	private JMenu getRunbusMenu() {
		if(runbusMenu == null){
			//发车管理 
			runbusMenu = new JMenu();			
			runbusMenu.setText("发车管理");
			
			//车辆管理
			runbusMenu.add(getBusMenuItem());
			//发车确认
			runbusMenu.add(getRunbusMenuItem());
			
		}
		return runbusMenu;
	}

	private JMenuItem getRunbusMenuItem() {
		if(runbusItem==null){
			//发车确认
			runbusItem = new JMenuItem();
			runbusItem.setText("发车确认");
			runbusItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
						//隐藏其他页面
						hideCurrenPanel();
						//显示当前功能的页面
						jContentPane.add(getRunbusPanel(), BorderLayout.CENTER);
						runbusPanel.getSerSet();
						runbusPanel.setVisible(true);
				}

			});
		}
		return runbusItem;
	}
	
	private RunbusPanel getRunbusPanel() {
		if (runbusPanel == null) {
			runbusPanel = new RunbusPanel(this);
			runbusPanel.setVisible(false);						
		}
		return runbusPanel;
	}

	private JMenu getTicketMenu() {
		if(ticketMenu == null){
			//车次管理 
			ticketMenu = new JMenu();			
			ticketMenu.setText("票务管理");

			//售票管理
			ticketMenu.add(getTickeMenuItem());
			//退票管理
			ticketMenu.add(getBackTckMenuItem());
			
		}
		return ticketMenu;
	}

	private JMenuItem getBackTckMenuItem() {
		if(backTckMenuItem==null){
			//退票管理
			backTckMenuItem = new JMenuItem();
			backTckMenuItem.setText("退票管理");
			backTckMenuItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
						//隐藏其他页面
						hideCurrenPanel();
						//显示当前功能的页面
						jContentPane.add(getBackTickePanel(), BorderLayout.CENTER);
						backTickePanel.setVisible(true);
				}

			});
		}
		return backTckMenuItem;
	}
	
	private BackTickePanel getBackTickePanel() {
		if (backTickePanel == null) {
			backTickePanel = new BackTickePanel(this);
			backTickePanel.setVisible(false);						
		}
		return backTickePanel;
	}

	private JMenuItem getTickeMenuItem() {
		if(ticketMenuItem==null){
			//售票管理
			ticketMenuItem = new JMenuItem();
			ticketMenuItem.setText("售票管理");
			ticketMenuItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
						//隐藏其他页面
						hideCurrenPanel();
						//显示当前功能的页面
						jContentPane.add(getTickePanel(), BorderLayout.CENTER);
						tickePanel.getSerSet();
						tickePanel.getSelect_all().setSelected(false);
						tickePanel.setVisible(true);
				}

			});
		}
		return ticketMenuItem;
	}
	
	public TickePanel getTickePanel() {
		if (tickePanel == null) {
			tickePanel = new TickePanel(this);
			tickePanel.setVisible(false);
		}
		return tickePanel;
	}

	private JMenu gethelpMenu() {
		if(helpMenu == null){
			helpMenu = new JMenu();
			helpMenu.setText("帮助");
			
			aboutMenuItem = new javax.swing.JMenuItem();
            aboutMenuItem.setText("关于");
			helpMenu.add(aboutMenuItem);
		}
		
		return helpMenu;
	}


	private JMenu getBusSerMenu() {
		if(busSerMenu == null){
			//车次管理 
			busSerMenu = new JMenu();			
			busSerMenu.setText("车次管理");

			//路线管理
			busSerMenu.add(getPathMenuItem());
			//班次管理
			busSerMenu.add(getBusSerMenuItem());
			//车次设置
			busSerMenu.add(getSerSetMenuItem());
		}
		return busSerMenu;
	}


	private JMenuItem getSerSetMenuItem() {
		if(serSetMenuItem == null){
			serSetMenuItem = new JMenuItem();
			serSetMenuItem.setText("车次管理");
			serSetMenuItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
						//隐藏其他页面
						hideCurrenPanel();
						//显示当前功能的页面
						jContentPane.add(getSerSetPanel(), null);
						serSetPanel.getSerSet();
						serSetPanel.getSelect_all().setSelected(false);
						serSetPanel.setVisible(true);
				}

			});
		}
		return serSetMenuItem;
	}

	public SerSetPanel getSerSetPanel() {
		if (serSetPanel == null) {
			serSetPanel = new SerSetPanel(this);
			serSetPanel.setVisible(false);						
		}
		return serSetPanel;
	}
	
	private JMenuItem getBusSerMenuItem() {
		if(serInfoMenuItem == null){
			serInfoMenuItem = new JMenuItem();
			serInfoMenuItem.setText("班次管理");
			serInfoMenuItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
						//隐藏其他页面
						hideCurrenPanel();
						//显示当前功能的页面
						jContentPane.add(getBusSerPanel(), null);
						busSerPanel.getBusSer();
						busSerPanel.getSelect_all().setSelected(false);
						busSerPanel.setVisible(true);
				}

			});
		}
		return serInfoMenuItem;
	}
	
	public BusSerPanel getBusSerPanel() {
		if (busSerPanel == null) {
			busSerPanel = new BusSerPanel(this);
			busSerPanel.setVisible(false);						
		}
		return busSerPanel;
	}	

	private JMenuItem getBusMenuItem() {
		if(busMenuItem == null){
			busMenuItem = new JMenuItem();
			busMenuItem.setText("车辆管理");
			busMenuItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
						//隐藏其他页面
						hideCurrenPanel();
						//显示当前功能的页面
						jContentPane.add(getBusPanel(), null);
						busPanel.getBus();
						busPanel.getSelect_all().setSelected(false);
						busPanel.setVisible(true);
				}				
			});
		}
		return busMenuItem;
	}
	
	public BusPanel getBusPanel() {
		if (busPanel == null) {
			busPanel = new BusPanel(this);
			busPanel.setVisible(false);						
		}
		return busPanel;
	}

	private JMenuItem getPathMenuItem() {
		if(pathMenuItem==null){
			//路线管理
			pathMenuItem = new JMenuItem();
			pathMenuItem.setText("路线管理");
			pathMenuItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
						//隐藏其他页面
						hideCurrenPanel();
						//显示当前功能的页面
						jContentPane.add(getLinePanel(), null);
						linePanel.getLine();
						linePanel.getSelect_all().setSelected(false);
						linePanel.setVisible(true);
				}
			});
		}
		return pathMenuItem;
	}
	
	
	public LinePanel getLinePanel() {
		if (linePanel == null) {
			linePanel = new LinePanel(this);
			linePanel.setVisible(false);						
		}
		return linePanel;
	}
	
	

	private JMenu getUserMenu() {
		//用户管理菜单 
		if(userMenu == null){
			userMenu = new JMenu();
			userMenu.setText("用户管理");
			
			userInfoMenuItem = new JMenuItem();
			userInfoMenuItem.setText("个人信息");		
			userMenu.add(userInfoMenuItem);
			
			userMagMenuItem = new JMenuItem();
			userMagMenuItem.setText("用户信息管理");
			userMenu.add(userMagMenuItem);

			authSetMenuItem = new JMenuItem();
			authSetMenuItem.setText("操作权限设置");
			userMenu.add(authSetMenuItem);
			
			exitMenuItem = new JMenuItem();
			exitMenuItem.setText("退出");
			exitMenuItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
					exitMenuItemActionPerformed(evt);
				}
			});
			userMenu.add(exitMenuItem);
		}
		
		return userMenu;
	}



	/**
	 * This method initializes jContentPane
	 *
	 * @return javax.swing.JPanel
	 */
	private JPanel getJContentPane() {
		if (jContentPane == null) {
			jContentPane = new JPanel();
			jContentPane.setLayout(null);			
		}
		return jContentPane;
	}



	//GEN-END:initComponents

	private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
		System.exit(0);
	}//GEN-LAST:event_exitMenuItemActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new IndexFrame().setVisible(true);
			}
		});
	}

	private void hideCurrenPanel() {
		if (linePanel != null) {
			linePanel.setVisible(false);
		}
		if(busPanel != null){
			busPanel.setVisible(false);
		}
		if(busSerPanel != null){
			busSerPanel.setVisible(false);
		}
		if(serSetPanel != null){
			serSetPanel.setVisible(false);
		}
		if(tickePanel != null){
			tickePanel.setVisible(false);
		}
		if(backTickePanel != null){
			backTickePanel.setVisible(false);
		}
		if(runbusPanel != null){
			runbusPanel.setVisible(false);
		}
		if(busReportPanel != null){
			busReportPanel.setVisible(false);
		}
		if(openPortPanel != null){
			openPortPanel.setVisible(false);
		}
		if(signInPanel != null){
			signInPanel.setVisible(false);
		}
	}


}