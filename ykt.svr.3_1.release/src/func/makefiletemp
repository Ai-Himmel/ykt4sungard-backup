TARGET=infosync

SOURCE=\
	infosync
BINDIR=$(HOME)/ykt/bin
DB2PATH=/opt/IBM/db2/V8.1
RE=W
CC= gcc
CCFLAGS= -D_DRTP_V4 -D_MT -DSUNOS -Wall -O2

LIBS=-lstdc++ -lpthread -lsocket -lnsl -lm
APLIBS=-L$(HOME)/ykt/lib -ldrtplib -lkcrypto -lboost_thread -lbccpub -lpubdb
LIBSUDF=-L$(DB2PATH)/lib -ldb2 -ldb2apie
INCLD= -I./ -I$(HOME)/ykt/src/include -I$(HOME)/ykt/src/include/dbincl -I$(DB2PATH)/include -I../public

# =====================================================
all:$(TARGET)

clean:
	@rm -f *.o *.bnd

.SUFFIXES: .o .c .cpp .sqc .sqC .cfg .upd .ins  .del

#$(TARGET):$(SOURCE:=.o) $(HOME)/ykt/lib/libbccpub.a $(HOME)/ykt/lib/libpubdb.a
$(TARGET):$(SOURCE:=.o) 
	$(CC) $(CCFLAGS) $(INCLD) $(LIBS) -o $@ $(SOURCE:=.o) $(LIBSUDF) $(APLIBS) 
	@cp $(TARGET) $(BINDIR)/$(TARGET)

.c.o:
	$(CC) -c $(CCFLAGS) $(INCLD) $*.c

.cpp.o:
	$(CC) -c $(CCFLAGS) $(INCLD) $*.cpp

.sqc.c:
#	db2 connect to $(PHOTO_DBNAME) user $(YKT_USER) using $(YKT_PWD)
#	db2 prep $*.sqc output $*.c bindfile using $*.bnd
#	db2 bind $*.bnd
#	db2 connect reset

	db2 connect to $(YKT_DBNAME) user $(YKT_USER) using $(YKT_PWD)
	db2 prep $*.sqc output $*.c bindfile using $*.bnd
	db2 bind $*.bnd
	db2 connect reset
.sqC.cpp:
	db2 connect to $(PHOTO_DBNAME) user $(YKT_USER) using $(YKT_PWD)
	db2 prep $< output $@ bindfile using $*.bnd
	db2 bind $*.bnd
	db2 connect reset
# =====================================================
