/* --------------------------------------------
* 创建日期: 2008-07-21
* 程序作者: 闻剑
* 版本信息: 1.0.0.0
* 程序功能: 设备增加/修改界面中设备树显示查询,只显示根和LPORT
* --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "acctrans.h"
ESQL #include "busqc.h"
ESQL #include <string>
ESQL #include <sstream>
ESQL using namespace std;
EXEC SQL INCLUDE SQLCA;


int F820108(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg) {
#if 0
    EXEC SQL BEGIN DECLARE SECTION;
        sqlint32	deviceid=0;                  	//设备标识
        char    	devicename[150+1]="";         	//设备名称
        char    	devphyid[8+1]="";            	//三九设备注册号
        char    	devphyid[8+1]="";         	//设备物理ID
        sqlint32	deviceno=0;                  	//机号
        char    	devtype[4+1]="";              	//机型代码
        char    	devversion[8+1]="";           	//设备版本号
        char    	cardstr[2+1]="";              	//卡片结构
        char    	cardtype[64+1]="";            	//卡类
        sqlint32	portcount=0;                  	//服务器端口总数
        sqlint32	fdeviceid =0;
        sqlint32	portno=0;                     	//服务器端口号
        sqlint32	status=0;                   	//设备状态
        sqlint32	joinmode=0;                   	//链路模式
        char    	comadd[16+1]="";              	//通信地址
        char    	port[6+1]="";                 	//通讯端口
        sqlint32	baudrate=0;                   	//波特率
        sqlint32	comtype=0;                    	//数据通讯方式
        char    	bsheetvdate[12+1]="";         	//黑名单有效期
        char    	cardverno[12+1]="";           	//黑名单版本号
        sqlint32	lasttraserno=0;               	//终端交易流水号期末值
        char    	lasttradate[20+1]="";         	//终端交易时间期末值
        sqlint32	lastshutserno=0;              	//终端轧帐流水号期末值
        char    	lastshutdate[20+1]="";        	//终端轧帐时间期末值
        char    	syspwd[6+1]="";               	//系统员密码
        char    	admpwd[6+1]="";               	//管理员密码
        sqlint32	pwdonoff=0;                   	//密码开关
        char    	puserno[3+1]="";              	//钱包代码
        char    	cardset[64+1]="";             	//终端机适用用户卡类别
        char    	funonoff[2+1]="";             	//收费机增强功能开关
        sqlint32	cardusenum=0;                 	//卡的最大使用次数
        sqlint32	maxdeposit=0;                 	//钱包最高存款限额
        sqlint32	mindeposit=0;                 	//钱包最低剩余款限额
        sqlint32	ration=0;                     	//定值收费方式使用的定值额
        sqlint32	maxtrade=0;                   	//每次交易最高额
        char    	shuttimes[64+1]="";           	//扎帐时间点
        char    	card65pwd[64+1]="";           	//三九65类卡密钥
        char    	authpwd[64+1]="";             	//设备授权密钥
        sqlint32	ftflag=0;                     	//防火防盗状态
        sqlint32	phytype=0;                    	//设备物理型号
        sqlint32	web_level=0;                  	//网络层号
        sqlint32	sysid=0;               	//所属子系统
        sqlint32	area=0;                       	//设备所在区域
        char    	init_key[32+1]="";            	//读卡密钥
        char    	manager[20+1]="";             	//负责人员工号
        char    	tel[20+1]="";                 	//联系电话
        char    	addr[150+1]="";            	//地址
        char    	operate_time[26+1]="";        	//操作时间
        char    	comments[150+1]="";           	//备注
        sqlint32	feetype=0;                     	//收费方式

        sqlint16	indicator=0;
        char    	h_sqlcmd[1024]="";
    EXEC SQL END DECLARE SECTION;

    int    ret=0;
    int    row=0;
    int    first=0;
    char sqltmp[500]="";
    ST_CPACK aPack;
    ST_PACK *out_pack = &(aPack.pack);

    ResetNormalCPack(&aPack,0,1);
//	Strncpy_t(devicename,rPack->scert_no,sizeof(devicename));
//	Strncpy_t(devphyid,rPack->sbank_pwd,sizeof(devphyid));
//	Strncpy_t(devphyid,rPack->sbank_pwd2,sizeof(devphyid));
//	deviceno=rPack->lvol1;
//	Strncpy_t(devtype,rPack->sbank_code,sizeof(devtype));
//	fdeviceid=atoi(rPack->sdate1);
//	status=rPack->lvol4;
//	phytype=rPack->lbank_acc_type;
//	sysid=rPack->lserial0;
//	area=rPack->lserial1;
//	Strncpy_t(manager,rPack->sname2,sizeof(manager));

    strcpy(h_sqlcmd,"select  deviceid, devicename, devphyid, devphyid, deviceno, devtype, devversion, cardstr, cardtype, portcount, fdeviceid, portno, status, joinmode, comadd, port, baudrate, comtype, bsheetvdate, cardverno, lasttraserno, lasttradate, lastshutserno, lastshutdate, syspwd, admpwd, pwdonoff, puserno, cardset, funonoff, cardusenum, maxdeposit, mindeposit, ration, maxtrade, shuttimes, card65pwd, authpwd, ftflag, phytype, web_level, sysid, area, init_key, manager, tel, addr, operate_time, comments , feetype  from ykt_cur.t_device ");

    //只显示根和LPORT的查询
    sprintf(sqltmp," where  deviceid=1 or DevType in ('%s','%s','%s','%s','%s','%s','%s') "
            ,DEVITYPE_LPORT,HNDR_RAC2000P,HNDR_RAC2000G,HNDR_GCU3,HNDR_NCU3,HNDR_BF430
            ,DEVITYPE_JLPORT);
    strcat(h_sqlcmd,sqltmp);

    sprintf(sqltmp," order by nu ");
    strcat(h_sqlcmd,sqltmp);

    //printf("----sql=%s----",h_sqlcmd);

    EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;

    if(SQLCODE) {
        *pRetCode=E_DB_DEVICE_R;
        db_chk_err(__FILE__,__LINE__,&sqlca);
        goto L_RETU;
    }

    EXEC SQL  DECLARE device_cur CURSOR FOR query_stmt;

    if(SQLCODE) {
        *pRetCode=E_DB_DEVICE_R;
        db_chk_err(__FILE__,__LINE__,&sqlca);
        goto L_RETU;
    }
    EXEC SQL  OPEN device_cur;
    if(SQLCODE) {
        *pRetCode=E_DB_DEVICE_R;
        db_chk_err(__FILE__,__LINE__,&sqlca);
        goto L_RETU;
    }
    SetCol(handle,0);
    SetCol(handle,F_LVOL0,F_SCERT_NO,F_SBANK_PWD,F_SBANK_PWD2,F_LVOL1,F_SBANK_CODE,F_SDATE0,F_SCURRENCY_TYPE,F_SADDR,F_LVOL2,F_SDATE1,F_LVOL3,F_LVOL4,F_LVOL5,F_SSTATION0,F_SBANK_CODE2,F_LVOL6,F_LVOL7,F_SSERIAL0,F_SSERIAL1,F_LVOL8,F_SCUST_AUTH2,F_LVOL9,F_SNAME,F_SCHANGE_EMP,F_SCHECK_EMP,F_LVOL10,F_SBRANCH_CODE0,F_SADDR2,F_SCURRENCY_TYPE2,F_LVOL11,F_LVOL12,F_LCERT_CODE,F_LSAFE_LEVEL,F_LSAFE_LEVEL2,F_SALL_NAME,F_SBANKNAME,F_SBANKNAME2,F_LWITHDRAW_FLAG,F_LBANK_ACC_TYPE,F_LBANK_ACC_TYPE2,F_LSERIAL0,F_LSERIAL1,F_SCUST_LIMIT,F_SNAME2,F_SPAGER,F_SCUSTTYPES,F_SPHONE,F_SSECTYPES,F_DAMT0,0);
    while(1) {
        deviceid=0;
        memset(devicename,0,sizeof(devicename));
        memset(devphyid,0,sizeof(devphyid));
        memset(devphyid,0,sizeof(devphyid));
        deviceno=0;
        memset(devtype,0,sizeof(devtype));
        memset(devversion,0,sizeof(devversion));
        memset(cardstr,0,sizeof(cardstr));
        memset(cardtype,0,sizeof(cardtype));
        portcount=0;
        fdeviceid = 0;
        portno=0;
        status=0;
        joinmode=0;
        memset(comadd,0,sizeof(comadd));
        memset(port,0,sizeof(port));
        baudrate=0;
        comtype=0;
        memset(bsheetvdate,0,sizeof(bsheetvdate));
        memset(cardverno,0,sizeof(cardverno));
        lasttraserno=0;
        memset(lasttradate,0,sizeof(lasttradate));
        lastshutserno=0;
        memset(lastshutdate,0,sizeof(lastshutdate));
        memset(syspwd,0,sizeof(syspwd));
        memset(admpwd,0,sizeof(admpwd));
        pwdonoff=0;
        memset(puserno,0,sizeof(puserno));
        memset(cardset,0,sizeof(cardset));
        memset(funonoff,0,sizeof(funonoff));
        cardusenum=0;
        maxdeposit=0;
        mindeposit=0;
        ration=0;
        maxtrade=0;
        memset(shuttimes,0,sizeof(shuttimes));
        memset(card65pwd,0,sizeof(card65pwd));
        memset(authpwd,0,sizeof(authpwd));
        ftflag=0;
        phytype=0;
        web_level=0;
        sysid=0;
        area=0;
        memset(init_key,0,sizeof(init_key));
        memset(manager,0,sizeof(manager));
        memset(tel,0,sizeof(tel));
        memset(addr,0,sizeof(addr));
        memset(operate_time,0,sizeof(operate_time));
        memset(comments,0,sizeof(comments));
        feetype=0;

        EXEC SQL  FETCH device_cur INTO
        :deviceid:indicator,
        :devicename:indicator,
        :devphyid:indicator,
        :devphyid:indicator,
        :deviceno:indicator,
        :devtype:indicator,
        :devversion:indicator,
        :cardstr:indicator,
        :cardtype:indicator,
        :portcount:indicator,
        :fdeviceid:indicator,
        :portno:indicator,
        :status:indicator,
        :joinmode:indicator,
        :comadd:indicator,
        :port:indicator,
        :baudrate:indicator,
        :comtype:indicator,
        :bsheetvdate:indicator,
        :cardverno:indicator,
        :lasttraserno:indicator,
        :lasttradate:indicator,
        :lastshutserno:indicator,
        :lastshutdate:indicator,
        :syspwd:indicator,
        :admpwd:indicator,
        :pwdonoff:indicator,
        :puserno:indicator,
        :cardset:indicator,
        :funonoff:indicator,
        :cardusenum:indicator,
        :maxdeposit:indicator,
        :mindeposit:indicator,
        :ration:indicator,
        :maxtrade:indicator,
        :shuttimes:indicator,
        :card65pwd:indicator,
        :authpwd:indicator,
        :ftflag:indicator,
        :phytype:indicator,
        :web_level:indicator,
        :sysid:indicator,
        :area:indicator,
        :init_key:indicator,
        :manager:indicator,
        :tel:indicator,
        :addr:indicator,
        :operate_time:indicator,
        :comments:indicator,
        :feetype:indicator;
        ret=SQLCODE;

        if(ret) {
            db_chk_err(__FILE__,__LINE__,&sqlca);
            EXEC SQL  CLOSE device_cur;
            if(DB_NOTFOUND==ret) {
                if(row)
                    break;
                else
                    *pRetCode=E_DB_DEVICE_N;
            } else
                *pRetCode=E_DB_DEVICE_R;
            goto L_RETU;
        }
        out_pack->lvol0=deviceid;
        Strncpy_t(out_pack->scert_no,devicename,sizeof(out_pack->scert_no));
        Strncpy_t(out_pack->sbank_pwd,devphyid,sizeof(out_pack->sbank_pwd));
        Strncpy_t(out_pack->sbank_pwd2,devphyid,sizeof(out_pack->sbank_pwd2));
        out_pack->lvol1=deviceno;
        Strncpy_t(out_pack->sbank_code,devtype,sizeof(out_pack->sbank_code));
        Strncpy_t(out_pack->sdate0,devversion,sizeof(out_pack->sdate0));
        Strncpy_t(out_pack->scurrency_type,cardstr,sizeof(out_pack->scurrency_type));
        Strncpy_t(out_pack->saddr,cardtype,sizeof(out_pack->saddr));
        out_pack->lvol2=portcount;
        sprintf(out_pack->sdate1,"%d",fdeviceid);
        out_pack->lvol3=portno;
        out_pack->lvol4=status;
        out_pack->lvol5=joinmode;
        Strncpy_t(out_pack->sstation0,comadd,sizeof(out_pack->sstation0));
        Strncpy_t(out_pack->sbank_code2,port,sizeof(out_pack->sbank_code2));
        out_pack->lvol6=baudrate;
        out_pack->lvol7=comtype;
        Strncpy_t(out_pack->sserial0,bsheetvdate,sizeof(out_pack->sserial0));
        Strncpy_t(out_pack->sserial1,cardverno,sizeof(out_pack->sserial1));
        out_pack->lvol8=lasttraserno;
        Strncpy_t(out_pack->scust_auth2,lasttradate,sizeof(out_pack->scust_auth2));
        out_pack->lvol9=lastshutserno;
        Strncpy_t(out_pack->sname,lastshutdate,sizeof(out_pack->sname));
        Strncpy_t(out_pack->schange_emp,syspwd,sizeof(out_pack->schange_emp));
        Strncpy_t(out_pack->scheck_emp,admpwd,sizeof(out_pack->scheck_emp));
        out_pack->lvol10=pwdonoff;
        Strncpy_t(out_pack->sbranch_code0,puserno,sizeof(out_pack->sbranch_code0));
        Strncpy_t(out_pack->saddr2,cardset,sizeof(out_pack->saddr2));
        Strncpy_t(out_pack->scurrency_type2,funonoff,sizeof(out_pack->scurrency_type2));
        out_pack->lvol11=cardusenum;
        out_pack->lvol12=maxdeposit;
        out_pack->lcert_code=mindeposit;
        out_pack->lsafe_level=ration;
        out_pack->lsafe_level2=maxtrade;
        Strncpy_t(out_pack->sall_name,shuttimes,sizeof(out_pack->sall_name));
        Strncpy_t(out_pack->sbankname,card65pwd,sizeof(out_pack->sbankname));
        Strncpy_t(out_pack->sbankname2,authpwd,sizeof(out_pack->sbankname2));
        out_pack->lwithdraw_flag=ftflag;
        out_pack->lbank_acc_type=phytype;
        out_pack->lbank_acc_type2=web_level;
        out_pack->lserial0=sysid;
        out_pack->lserial1=area;
        Strncpy_t(out_pack->scust_limit,init_key,sizeof(out_pack->scust_limit));
        Strncpy_t(out_pack->sname2,manager,sizeof(out_pack->sname2));
        Strncpy_t(out_pack->spager,tel,sizeof(out_pack->spager));
        Strncpy_t(out_pack->scusttypes,addr,sizeof(out_pack->scusttypes));
        Strncpy_t(out_pack->sphone,operate_time,sizeof(out_pack->sphone));
        Strncpy_t(out_pack->ssectypes,comments,sizeof(out_pack->ssectypes));
        out_pack->damt0=(double)feetype;

        row++;
        PutRow(handle,out_pack,pRetCode,szMsg);
        if(row%9==0)
            AnswerDataPart(handle,*pRetCode,szMsg);
    }
    AnswerData(handle,*pRetCode,szMsg);
    return 0;
L_RETU:
    return -1;
#endif
    EXEC SQL BEGIN DECLARE SECTION;
        sqlint32 deviceid=0;
        char     devicename[61]="";
        char     devphyid[31]="";
        char     devtypecode[31]="";
        char     devverno[31]="";
        char     cardphytype[2]="";
        sqlint32 portcount=0;
        sqlint32 fdeviceid=0;
        char     runstatus[2]="";
        char     status[2]="";
        sqlint32 joinmode=0;
        char     ip[16]="";
        sqlint32 portno=0;
        sqlint32 svrportno=0;
        sqlint32 deviceno=0;
        sqlint32 baudrate=0;
        char     cardverno[31]="";
        sqlint32 lastseqno=0;
        char     lasttranstime[31]="";
        sqlint32 purseno=0;
        sqlint32 maxamt=0;
        sqlint32 devphytype=0;
        sqlint32 sysid=0;
        char     areacode[4]="";
        char     doorlstver[31]="";
        sqlint32 devusage=0;
        sqlint16 indicator=0;
        char     h_sqlcmd[2048]="";
    EXEC SQL END DECLARE SECTION;

    int ret = 0;
    int row = 0;
    ST_CPACK aPack;
    ST_PACK *outPack = &(aPack.pack);
    ResetNormalCPack(&aPack,0,1);
    SetCol(handle,F_LVOL0,F_SCERT_NO,F_SBANK_PWD,F_SBANK_PWD2,
           F_SSERIAL1,F_SDATE0,F_SADDR,
           F_LVOL2,F_DAMT6,F_SSTATUS2,
           F_SSTATUS1,F_LVOL5,F_SSTATION0,
           F_LVOL3,F_SBANK_CODE2,F_LVOL1,
           F_LVOL6,F_SSERIAL1,F_LVOL8,
           F_SCUST_AUTH2,F_SNAME2,F_SCHECK_EMP,
           F_SBRANCH_CODE0,F_LVOL12,F_LVOL5,
           F_LSERIAL0,F_LSERIAL1,F_SPAGER,
           F_SCUSTTYPES,/*doorlstver,*/F_DAMT5,
           F_SBANK_CODE,F_SDATE1,F_LBANK_ACC_TYPE,F_SPHONE3,
           0);

    deviceid=rPack->lvol0;
    des2src(devicename,rPack->scert_no);
    des2src(devphyid,rPack->sphone3);
    des2src(devtypecode,rPack->sbank_code);
    des2src(devverno,rPack->sdate0);
    des2src(cardphytype,rPack->saddr);
    portcount=rPack->lvol2;
//	fdeviceid=;
    des2src(runstatus,rPack->sstatus2);
//	des2src(status,rPack->sstatus1);
    joinmode=rPack->lvol5;
    des2src(ip,rPack->sstation0);
    portno=rPack->lvol3;
    svrportno=atoi(rPack->sbank_code2);
    deviceno=rPack->lvol1;
    baudrate=rPack->lvol6;
    des2src(cardverno,rPack->sserial1);
    lastseqno=rPack->lvol8;
    des2src(lasttranstime,rPack->scust_auth2);
    purseno=atoi(rPack->sbranch_code0);
    devphytype=rPack->lbank_acc_type;
    sysid=rPack->lserial0;
    if(rPack->lserial1)
        sprintf(areacode,"%d",rPack->lserial1);
    //des2src(doorlstver,rPack->);
    devusage=(int)rPack->damt5;

    stringstream sql;
    sql<<"SELECT ";
    sql<<"deviceid,";
    sql<<"devicename,";
    sql<<"devphyid,";
    sql<<"devtypecode,";
    sql<<"devverno,";
    sql<<"cardphytype,";
    sql<<"svrportcnt,";
    sql<<"fdeviceid,";
    sql<<"runstatus,";
    sql<<"status,";
    sql<<"commtype,";
    sql<<"ip,";
    sql<<"portno,";
    sql<<"svrportno,";
    sql<<"deviceno,";
    sql<<"baudrate,";
    sql<<"cardverno,";
    sql<<"lastseqno,";
    sql<<"lasttranstime,";
    sql<<"purseno,";
    sql<<"maxamt,";
    sql<<"devphytype,";
    sql<<"sysid,";
    sql<<"areacode,";
    sql<<"doorlstver,";
    sql<<"devusage ";
    sql<<" FROM ykt_cur.v_device ";
    sql<<" where deviceid=1 or devtypecode in ('";
    sql<<DEVITYPE_LPORT<<"','";
    sql<<HNDR_RAC2000P<<"','";
    sql<<HNDR_GCU3<<"','";
    sql<<HNDR_NCU3<<"','";
    sql<<HNDR_BF430<<"','";
    sql<<DEVITYPE_AR716E<<"','";
    sql<<DEVITYPE_JLPORT<<"')";
    sql<<" order by nu";
    strcpy(h_sqlcmd,sql.str().c_str());
    EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
    if(SQLCODE) {
        CHECK_DB_ERR;
        return E_DB_PREPARE;
    }
    EXEC SQL DECLARE device_cur CURSOR FOR query_stmt;
    if(SQLCODE) {
        CHECK_DB_ERR;
        return E_DB_CURSOR_DECLARE;
    }
    EXEC SQL  OPEN device_cur;
    if(SQLCODE) {
        CHECK_DB_ERR;
        return E_DB_CURSOR_OPEN;
    }
    while(1) {
        deviceid=0;
        devicename[0]=0;
        devphyid[0]=0;
        devtypecode[0]=0;
        devverno[0]=0;
        cardphytype[0]=0;
        portcount=0;
        fdeviceid=0;
        runstatus[0]=0;
        status[0]=0;
        joinmode=0;
        ip[0]=0;
        portno=0;
        svrportno=0;
        deviceno=0;
        baudrate=0;
        cardverno[0]=0;
        lastseqno=0;
        lasttranstime[0]=0;
        purseno=0;
        maxamt=0;
        devphytype=0;
        sysid=0;
        areacode[0]=0;
        doorlstver[0]=0;
        devusage=0;
        EXEC SQL FETCH device_cur INTO
        :deviceid:indicator,
        :devicename:indicator,
        :devphyid:indicator,
        :devtypecode:indicator,
        :devverno:indicator,
        :cardphytype:indicator,
        :portcount:indicator,
        :fdeviceid:indicator,
        :runstatus:indicator,
        :status:indicator,
        :joinmode:indicator,
        :ip:indicator,
        :portno:indicator,
        :svrportno:indicator,
        :deviceno:indicator,
        :baudrate:indicator,
        :cardverno:indicator,
        :lastseqno:indicator,
        :lasttranstime:indicator,
        :purseno:indicator,
        :maxamt:indicator,
        :devphytype:indicator,
        :sysid:indicator,
        :areacode:indicator,
        :doorlstver:indicator,
        :devusage:indicator;
        ret=SQLCODE;
        if(ret) {
            CHECK_DB_ERR;
            EXEC SQL CLOSE device_cur;
            if(DB_NOTFOUND==ret) {
                if(row)
                    break;
                else
                    return E_DB_DEVICE_N;
            } else
                return E_DB_DEVICE_R;
        }
        row++;
        outPack->lvol0=deviceid;
        des2src(outPack->scert_no,devicename);
        //    des2src(outPack->sbank_pwd,devphyid);
        des2src(outPack->sphone3,devphyid);
        des2src(outPack->sbank_code,devtypecode);
        des2src(outPack->sdate0,devverno);
        des2src(outPack->saddr,cardphytype);
        outPack->lvol2=portcount;
        sprintf(outPack->sdate1,"%d",fdeviceid);
        des2src(outPack->sstatus2,runstatus);
        des2src(outPack->sstatus1,status);
        outPack->lvol5=joinmode;
        des2src(outPack->sstation0,ip);
        outPack->lvol3=portno;
        sprintf(outPack->sbank_code2,"%d",svrportno);
        outPack->lvol1=deviceno;
        outPack->lvol6=baudrate;
        des2src(outPack->sserial1,cardverno);
        outPack->lvol8=lastseqno;
        des2src(outPack->scust_auth2,lasttranstime);
        sprintf(outPack->sbranch_code0,"%d",purseno);
        outPack->lvol12=(int)(maxamt*100);
        outPack->lbank_acc_type=devphytype;
        outPack->lserial0=sysid;
        outPack->lserial1=atoi(areacode);
        //    des2src(outPack->,doorlstver);
        outPack->damt5=(double)devusage;
        PutRow(handle,outPack,pRetCode,szMsg);
        if(row%9==0)
            AnswerDataPart(handle,*pRetCode,szMsg);
    }
    AnswerData(handle,*pRetCode,szMsg);
    return 0;

}


