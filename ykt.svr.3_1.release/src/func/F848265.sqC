/* --------------------------------------------
 * 程序名称: F848265.sqc
 * 创建日期: 2007-04-03
 * 程序作者: 汤成
 * 版本信息: 1.0.0.0
 * 程序功能:门禁组操作员查询
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/
#define _IN_SQC_
ESQL #include <string.h>
ESQL #include <stdio.h>
ESQL #include "pubfunc.h"
ESQL #include "pubdb.h"
ESQL #include "pubdef.h"
ESQL #include "errdef.h"
ESQL #include "dbfunc.h"
ESQL #include "busqc.h"
ESQL #include "dbfunc_foo.h"

static int Read848265(TRUSERID *handle,int iRequest,ST_PACK *in_pack,int *pRetCode,char *szMsg) {
    EXEC SQL BEGIN DECLARE SECTION;
        sqlint32 ho_grpid;
        char ho_grpname[81] = "";
        sqlint16 ho_indr = 1;
        char sqlcmd[1024] = "";
    EXEC SQL END DECLARE SECTION;
    char sqltmp[128];
    int rows;
    int ret;
    ST_CPACK aPack;
    ST_PACK *out_pack = &(aPack.pack);
    char opercode[20]= {0};
    des2src(opercode,in_pack->semp);
    char groupname[61]= {0};
    des2src(groupname,in_pack->semail);
    if(strlen(opercode) < 1) {
        return E_INPUT_ERROR;
    }
    sprintf(sqlcmd,"SELECT G.GROUPID ,G.GROUPNAME  \
	FROM YKT_CUR.T_DOORGRPOPERRIGHT O,YKT_CUR.T_DOORGROUP G \
	WHERE O.GROUPID=G.GROUPID  AND O.opercode='%s' ",opercode);
    if(strlen(groupname)>0) {
        sprintf(sqltmp," AND G.GROUPNAME LIKE '%s' ",groupname);
        strcat(sqlcmd,sqltmp);
    }
    EXEC SQL PREPARE stmt FROM :sqlcmd;
    if(SQLCODE) {
        CHECK_DB_ERR;
        return E_DB_PREPARE;
    }
    EXEC SQL DECLARE cur CURSOR FOR stmt;
    if(SQLCODE) {
        CHECK_DB_ERR;
        return E_DB_CURSOR_DECLARE;
    }
    EXEC SQL OPEN cur;
    if(SQLCODE) {
        CHECK_DB_ERR;
        return E_DB_CURSOR_OPEN;
    }

    memset(&aPack,0,sizeof aPack);
    rows=0;
    ResetNormalCPack(&aPack,0,1);
    SetCol(handle,0);
    SetCol(handle,F_SEMAIL,F_LVOL0,0);
    while(1) {
        memset(ho_grpname,0,sizeof ho_grpname);
        ho_grpid = 0;

        EXEC SQL FETCH cur INTO :ho_grpid:ho_indr,:ho_grpname:ho_indr;
        if(SQLCODE) {
            ret = SQLCODE;
            CHECK_DB_ERR;
            EXEC SQL CLOSE cur;
            if(DB_NOTFOUND == ret) {
                if(rows > 0)
                    break;
                return E_DB_DOOR_DEV_GRP_NO_RIGHT;
            }
            return E_DB_DOOR_GRP_OPER_RIGHT_R;
        }
        rows++;
        des2src(out_pack->semail,ho_grpname);
        out_pack->lvol0 = ho_grpid;
        PutRow(handle,out_pack,pRetCode,szMsg);
        if(rows % 20 == 0)
            AnswerDataPart(handle,*pRetCode,szMsg);
    }
    AnswerData(handle,*pRetCode,szMsg);
    return 0;
}

int F848265(TRUSERID *handle,int iRequest,ST_PACK *in_pack,int *pRetCode,char *szMsg) {
    int ret = 0;
    ret = Read848265(handle,iRequest,in_pack,pRetCode,szMsg);
    if(ret) {
        *pRetCode=ret;
        return -1;
    }
    return 0;
}