/* --------------------------------------------
 * 程序名称: F841306.sqc
 * 创建日期: Sep 29 2004
 * 程序作者: auto creat by wen jian
 * 版本信息: 1.0.0.0
 * 程序功能: query t_cit_student
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "fdsqc.h"

EXEC SQL INCLUDE SQLCA;

int F841306(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg) {
    EXEC SQL BEGIN DECLARE SECTION;
        char    	student_no[20+1]="";          	//学号
        sqlint32	study_state=0;                	//学生状态
        sqlint32	study_type=0;                 	//学生类别
        char    	student_name[150+1]="";        	//姓名
        char    	sex[1+1]="";                  	//性别
        sqlint32	polity=0;                     	//政治面貌
        sqlint32	nation=0;                     	//民族
        char    	idcard[20+1]="";              	//身份证号
        char    	dept_no[10+1]="";             	//院系代码
        char    	deptcode[10+1]="";           	//专业代码
        char    	register_date[10+1]="";       	//入学日期
        char    	grade[8+1]="";                	//年级
        sqlint32	study_time=0;                 	//学制
        char    	tel[20+1]="";                 	//联系电话
        char    	addr[150+1]="";            	//联系地址
        char    	opendate[26+1]="";            	//注册时间
        char    	comments[150+1]="";           	//备注
        sqlint16	indicator=0;
        char    	h_sqlcmd[1024]="";
    EXEC SQL END DECLARE SECTION;

    int    ret=0;
    int    row=0;
    int    first=0;
    char sqltmp[500]="";
    ST_CPACK aPack;
    ST_PACK *out_pack = &(aPack.pack);

#ifdef DEBUG
    writelog(LOG_DEBUG,"student_no     :scust_auth     [%s]",rPack->scust_auth);
#endif

    ResetNormalCPack(&aPack,0,1);
    Strncpy_t(student_no,rPack->scust_auth,sizeof(student_no));
    study_state=STUSTAT_REGIST;

    strcpy(h_sqlcmd,"select  student_no, study_state, study_type, student_name, sex, polity, nation, idcard, dept_no, deptcode, register_date, grade, study_time, tel, addr, opendate, comments  from ykt_cur.t_cit_student ");
    if(strlen(student_no)) {
        if(!first) {
            first=1;
            sprintf(sqltmp," where  student_no ='%s' ",student_no);
            strcat(h_sqlcmd,sqltmp);
        } else {
            sprintf(sqltmp," and student_no ='%s' ",student_no);
            strcat(h_sqlcmd,sqltmp);
        }
    }
    if(study_state!=0) {
        if(!first) {
            first=1;
            sprintf(sqltmp," where  study_state =%d ",study_state);
            strcat(h_sqlcmd,sqltmp);
        } else {
            sprintf(sqltmp," and study_state =%d ",study_state);
            strcat(h_sqlcmd,sqltmp);
        }
    }

    EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
    if(SQLCODE) {
        *pRetCode=E_DB_STUDENT_R;
        db_chk_err(__FILE__,__LINE__,&sqlca);
        goto L_RETU;
    }
    EXEC SQL  DECLARE student_cur CURSOR FOR query_stmt;
    if(SQLCODE) {
        *pRetCode=E_DB_STUDENT_R;
        db_chk_err(__FILE__,__LINE__,&sqlca);
        goto L_RETU;
    }
    EXEC SQL  OPEN student_cur;
    if(SQLCODE) {
        *pRetCode=E_DB_STUDENT_R;
        db_chk_err(__FILE__,__LINE__,&sqlca);
        goto L_RETU;
    }
    SetCol(handle,0);
    SetCol(handle,F_SCUST_AUTH,F_LVOL5,F_LVOL1,F_SNAME,F_SCUST_TYPE,F_LVOL2,F_LVOL3,F_SCUST_LIMIT,F_SSTATION0,F_SSTATION1,F_SCUST_AUTH2,F_SORDER2,F_LVOL0,F_SPHONE,F_SCUSTTYPES,F_SCUST_LIMIT2,F_SSECTYPES,0);
    while(1) {
        memset(student_no,0,sizeof(student_no));
        study_state=0;
        study_type=0;
        memset(student_name,0,sizeof(student_name));
        memset(sex,0,sizeof(sex));
        polity=0;
        nation=0;
        memset(idcard,0,sizeof(idcard));
        memset(dept_no,0,sizeof(dept_no));
        memset(deptcode,0,sizeof(deptcode));
        memset(register_date,0,sizeof(register_date));
        memset(grade,0,sizeof(grade));
        study_time=0;
        memset(tel,0,sizeof(tel));
        memset(addr,0,sizeof(addr));
        memset(opendate,0,sizeof(opendate));
        memset(comments,0,sizeof(comments));

        EXEC SQL  FETCH student_cur INTO
        :student_no:indicator,
        :study_state:indicator,
        :study_type:indicator,
        :student_name:indicator,
        :sex:indicator,
        :polity:indicator,
        :nation:indicator,
        :idcard:indicator,
        :dept_no:indicator,
        :deptcode:indicator,
        :register_date:indicator,
        :grade:indicator,
        :study_time:indicator,
        :tel:indicator,
        :addr:indicator,
        :opendate:indicator,
        :comments:indicator;
        ret=SQLCODE;
        if(ret) {
            db_chk_err(__FILE__,__LINE__,&sqlca);
            EXEC SQL  CLOSE student_cur;
            if(DB_NOTFOUND==ret) {
                if(row)
                    break;
                else
                    *pRetCode=E_DB_STUDENT_N;
            } else
                *pRetCode=E_DB_STUDENT_R;
            goto L_RETU;
        }

        Strncpy_t(out_pack->scust_auth,student_no,sizeof(out_pack->scust_auth));
        out_pack->lvol5=study_state;
        out_pack->lvol1=study_type;
        Strncpy_t(out_pack->sname,student_name,sizeof(out_pack->sname));
        Strncpy_t(out_pack->scust_type,sex,sizeof(out_pack->scust_type));
        out_pack->lvol2=polity;
        out_pack->lvol3=nation;
        Strncpy_t(out_pack->scust_limit,idcard,sizeof(out_pack->scust_limit));
        Strncpy_t(out_pack->sstation0,dept_no,sizeof(out_pack->sstation0));
        Strncpy_t(out_pack->sstation1,deptcode,sizeof(out_pack->sstation1));
        Strncpy_t(out_pack->scust_auth2,register_date,sizeof(out_pack->scust_auth2));
        Strncpy_t(out_pack->sorder2,grade,sizeof(out_pack->sorder2));
        out_pack->lvol0=study_time;
        Strncpy_t(out_pack->sphone,tel,sizeof(out_pack->sphone));
        Strncpy_t(out_pack->scusttypes,addr,sizeof(out_pack->scusttypes));
        Strncpy_t(out_pack->scust_limit2,opendate,sizeof(out_pack->scust_limit2));
        Strncpy_t(out_pack->ssectypes,comments,sizeof(out_pack->ssectypes));
        row++;
        PutRow(handle,out_pack,pRetCode,szMsg);
        if(row%9==0)
            AnswerDataPart(handle,*pRetCode,szMsg);
    }
    AnswerData(handle,*pRetCode,szMsg);
    return 0;
L_RETU:
    return -1;
}
