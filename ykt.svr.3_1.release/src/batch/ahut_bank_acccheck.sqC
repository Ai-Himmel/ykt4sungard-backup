/* --------------------------------------------
 * 程序名称: bank_acccheck.sqc
 * 创建日期: 2010/08/14
 * 程序作者: 王彦兵
 * 版本信息: 1.0.0.0
 * 程序功能:  安徽工大圈存对账
 * --------------------------------------------*/
#define _IN_SQC_
ESQL #include <stdio.h>
ESQL #include <string.h>
ESQL #include "pubdef.h"
ESQL #include "errdef.h"
ESQL #include "pubfunc.h"
ESQL #include "pubdb.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "cpack.h"

EXEC SQL INCLUDE SQLCA;

int startaccchk(char *chkacc_date) {
    EXEC SQL BEGIN DECLARE SECTION;
        char    hi_transdate[9]="";
    EXEC SQL END DECLARE SECTION;

//查当前流水表
    des2src(hi_transdate,chkacc_date);
    SQLCODE=0;

// 银行文件中没有，一卡通流水中有，更新状态为2
    EXEC SQL
       insert into ykt_cur.t_bankchkdtl(transdate,refno,stuempno,bankcardno,amount,chkstatus,chkflag)
       select  accdate,refno,stuempno,extdata,amount,2,0
       from ykt_cur.v_transdtl where accdate=:hi_transdate
       and ((status ='3'  and transcode=3170) or (nvl(revflag,0)<> '1' and status='3' and transcode = 3171))
       and refno not in
       (select refno from ykt_cur.t_bankchkdtl
       where transdate=:hi_transdate);
    if(SQLCODE) {
        db_chk_err(__FILE__,__LINE__,&sqlca);

        if(DB_NOTFOUND!=SQLCODE)
            return E_DB_BANK_CHKACC_I;
    }

// 银行文件中有，一卡通没有，更新状态为 1
    EXEC SQL
       update ykt_cur.t_bankchkdtl set
       chkstatus =1
       where  transdate=:hi_transdate
       and refno not in
       (select refno from ykt_cur.v_transdtl
        where accdate=:hi_transdate and ((status ='3'  and transcode=3170)
        or (nvl(revflag,0)<> '1' and status='3' and transcode = 3171)));
    if(SQLCODE) {
        db_chk_err(__FILE__,__LINE__,&sqlca);

        if(DB_NOTFOUND!=SQLCODE)
            return E_DB_BANK_CHKACC_I;
    }

    EXEC SQL
       update  ykt_cur.T_BANKCHKDATE
       set chkflag=1
       where chkdate=:hi_transdate;
    if(SQLCODE) {
        return E_DB_BANK_CHKDATE_U;
    }
    return db_commit();
}
int bank_accchk(char *checkdate,char *filepath) {

    EXEC SQL BEGIN DECLARE SECTION;
        char    	chkacc_date[9]="";
        sqlint16	indicator=0;
    EXEC SQL END DECLARE SECTION;

    int ret = 0;
    FILE *fp = NULL;
    char sBuffer[1024]="";

    char refno[32]="";						//学校端流水号（20位）
    char bankseri[32]="";					//银行流水号（20位）
    char tradetype[4]="";					//交易类别： 01：圈存 02：无卡充值
    char stuempno[32]="";
//	char bankno[33]="";
    double  amount=0;
    char sAmount[16]="";
    char tmp[20] = "";

    int addrows=0;
    int totalrows = 0;
    double totalamount = 0;
    double addamount = 0;

    T_t_bankchkdtl  tbankchkdtl;
    T_t_bankchkdate  tbankchkdate;

    des2src(chkacc_date,checkdate);

    SQLCODE=0;
    EXEC SQL
       	delete from ykt_cur.t_bankchkdtl  where transdate=:chkacc_date;
    if(SQLCODE!=0&&SQLCODE!=DB_NOTFOUND) {
        db_chk_err(__FILE__,__LINE__,&sqlca);
        return E_DB_BANK_CHKDATE_D;
    }

    memset(&tbankchkdate,0,sizeof tbankchkdate);
    des2src(tbankchkdate.chkdate,chkacc_date);
    SQLCODE=0;
    ret=DB_t_bankchkdate_add(&tbankchkdate);
    if(ret!=0&&ret!=DB_REPEAT) {
        return E_DB_BANK_CHKDATE_I;
    }

    if((fp = fopen(filepath, "rb")) == NULL) {
        writelog(LOG_ERR, "open filename[%s] error", filepath);
        return E_TRANS_UNKNOW_ERROR;
    }

    fgets(sBuffer, sizeof(sBuffer), fp);						// 读文件头
    memcpy(tmp,sBuffer+8,6);
    totalrows = atoi(tmp);								// 总条数

    memcpy(tmp,sBuffer + 14,12);
    totalamount = atof(tmp);								// 总金额

    if(!totalrows) {									// 银行端无记录
        fclose(fp);
        return startaccchk(checkdate);
    }

    while(1) {
        if(fgets(sBuffer, sizeof(sBuffer), fp) == NULL)
            break;
        // printf("line [%s]\n",sBuffer);
        memcpy(bankseri,sBuffer+8,20);				//银行流水号（20位）
        trim(bankseri);

        memcpy(refno,sBuffer+28,20);					// 一卡通流水号
        trim(refno);

        memcpy(tradetype,sBuffer+48,2);				//类别(2位)
        trim(tradetype);

        memcpy(stuempno,sBuffer+50,30);				// 学工号
        trim(stuempno);

        memcpy(sAmount,sBuffer+80,12);				// 金额
        amount = atof(sAmount);

        addrows++;
        addamount += amount;

        memset(&tbankchkdtl,0,sizeof(tbankchkdtl));
        des2src(tbankchkdtl.transdate,checkdate);									// 对账日期
        des2src(tbankchkdtl.refno,refno);											// 交易参考号
//		des2src(tbankchkdtl.bankcardno,bankno);										// 银行卡号
        des2src(tbankchkdtl.stuempno,stuempno);										//学工号
        tbankchkdtl.amount=amount;													//交易金额

        SQLCODE=0;
        ret=DB_t_bankchkdtl_add(&tbankchkdtl);
        if(ret!=0&&ret!=DB_REPEAT) {
            fclose(fp);
            return E_DB_BANK_CHKACC_I;
        }
    }

    if((addrows != totalrows )										// 校验文件中的总条数，总金额是否相符合
            || (addamount != totalamount)) {
        fclose(fp);
        return E_ELEC_DATA;
    }

    fclose(fp);
    return startaccchk(checkdate);

}

int main(int argc,char *argv[]) {
    int ret=0;
    int cnt=0;
    char *p = NULL;
    char dbname[256]="";
    char dbuser[256]="";
    char dbpwd[256]="";
    char chkdate[9] = "";
    char sysdate[9]="";
    char filepath[256]="";


    openlog("bank_chk",LOG_PID|LOG_CONS|LOG_NDELAY,LOG_LOCAL4);
    //打开数据库连接
    p=getenv("YKT_DBNAME");
    if(p==NULL) {
        perror("get ENV VAR YKT_DBNAME ERR\n");
        writelog(LOG_ERR,"get ENV VAR YKT_DBNAME ERR");
        exit(1);
    }
    des2src(dbname,p);
    p=getenv("YKT_USER");
    if(p==NULL) {
        perror("get ENV VAR YKT_USER ERR\n");
        writelog(LOG_ERR,"get ENV VAR YKT_USER ERR");
        exit(2);
    }
    des2src(dbuser,p);
    p=getenv("YKT_PWD");
    if(p==NULL) {
        perror("get ENV VAR YKT_PWD ERR\n");
        writelog(LOG_ERR,"get ENV VAR YKT_PWD ERR");
        exit(3);
    }
    des2src(dbpwd,p);

    while(1) {
        ret=db_connect(dbname,dbuser,dbpwd);
        if(ret) {
            db_chk_err(__FILE__,__LINE__,&sqlca);
            writelog(LOG_ERR,"connect to database err dbname[%s]",dbname);
            sleep(10);
            if(cnt<=3) {
                cnt++;
                continue;
            } else {
                printf("连接数据库失败!\n");
                return(-100);
            }
        } else {
            printf("连接数据库成功!\n");
            break;
        }
    }

    getsysdate(sysdate);

    if(argc !=3) {
        printf("格式错误\n");
        printf("usage:	bank_acccheck checkdate chkfilepath\n");
        goto L_RET;
    } else {
        if(IsInvalidDateTime(argv[1],"YYYYMMDD")) {
            printf("日期格式输入错误,有效格式为:	YYYYMMDD\n ");
            goto L_RET;
        }
        if(strncmp(argv[1],sysdate,8)>0) {
            printf("对账日期[%s]比当前日期[%s]大",argv[1],sysdate);
            goto L_RET;
        }
        des2src(chkdate, argv[1]);

        des2src(filepath, argv[2]);
    }

    printf("圈存对账参数:时间[%s]，文件路径[%s]\n",chkdate,filepath);
    ret=bank_accchk(chkdate,filepath);
    if(ret) {
        printf("bank_accchk ret[%d]",ret);
        goto L_RET;
    }

    printf("圈存对账执行成功!\n");
L_RET:
    db_disconnect();
    closelog();
    return 0;
}
