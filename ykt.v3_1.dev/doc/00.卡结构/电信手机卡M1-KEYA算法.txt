int CalcKeyFromSAM(int keytype,int keyidx,unsigned char *cipherData)
{
	int i,ret;
	char szCmd[256];
	ks_cpu_cmd_t cmd;
	unsigned char uResp[256];
	unsigned char uRespLen;

	ret = m_PSAMCardType->ResetPSAM();
	if(ret)
	{
		return ret;
	}
	// select dir 
	sprintf(szCmd,"00A4000002DF03");
	ret = m_PSAMCardType->Adpu4HexSAM(szCmd,strlen(szCmd),uResp,uRespLen);
	if(ret)
	{
		SET_ERR(this->GetLastErrMsg(NULL));
		CLog::GetObj().WriteTime()<<"Line("<<__LINE__<<"):"<<GetLastErrMsg(NULL)<<"\n";
	}

	// delivery key
	sprintf(szCmd,"801A%02X%02X08%s%02X00",keytype,keyidx,this->strUserCode_,this->ctAppID_);
	ret = m_PSAMCardType->Adpu4HexSAM(szCmd,strlen(szCmd),uResp,uRespLen);
	if(ret)
	{
		SET_ERR(this->GetLastErrMsg(NULL));
		return ret;
	}
	
	// cipher data
	memset(szCmd,0,sizeof szCmd);
	sprintf(szCmd,"80FA000008%s",this->m_szCardUID);
	cmd.send_len = strlen(szCmd);

	ret = m_PSAMCardType->Adpu4HexSAM(szCmd,strlen(szCmd),uResp,uRespLen);
	if(ret)
	{
		SET_ERR(this->GetLastErrMsg(NULL));
		return ret;
	}
	memcpy(cipherData,uResp,8);
	return 0;
}




if(sectno == 1 || sectno == 2 || sectno == 3 || sectno == 4
    || sectno == 6 || sectno == 8 || sectno == 9)
{
    // 消费密钥
    nRet = CalcKeyFromSAM(0x28,5,sCipher);
}
else if(sectno == 5 || sectno == 7)
{
    // 公共密钥 , 重装主密钥
    nRet = CalcKeyFromSAM(0x28,3,sCipher);
}
memcpy(sCipher+8,sCipher,8);
startpos=(sCipher[0]+sCipher[1]+sCipher[2]+sCipher[3]+sCipher[4]+sCipher[5]+sCipher[6]+sCipher[7])%7;
memcpy(key,sCipher+startpos,6);

计算出来的KEY 就是KEYA
