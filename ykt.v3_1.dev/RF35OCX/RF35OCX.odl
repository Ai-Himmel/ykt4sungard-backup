// RF35OCX.odl : type library source for ActiveX Control project.

// This file will be processed by the Make Type Library (mktyplib) tool to
// produce the type library (RF35OCX.tlb) that will become a resource in
// RF35OCX.ocx.

#include <olectl.h>
#include <idispids.h>

[ uuid(77BADB02-4AEB-4F23-AA67-850E29099245), version(1.1),
  helpfile("RF35OCX.hlp"),
  helpstring("RF35OCX ActiveX Control module"),
  control ]
library RF35OCXLib
{
	importlib(STDOLE_TLB);
	importlib(STDTYPE_TLB);

	//  Primary dispatch interface for CRF35OCXCtrl

	[ uuid(5F5CACB6-AFB2-49BE-9ED4-D1E34BD4E8D1),
	  helpstring("Dispatch interface for RF35OCX Control"), hidden ]
	dispinterface _DRF35OCX
	{
		properties:
			// NOTE - ClassWizard will maintain property information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_PROP(CRF35OCXCtrl)
			[id(1)] long CardNo;
			[id(2)] short PortNo;
			[id(50), helpstring("property CardPhyID")] BSTR CardPhyID;
			[id(57), helpstring("property PsamCardPosition")] SHORT PsamCardPosition;
			//}}AFX_ODL_PROP

		methods:
			// NOTE - ClassWizard will maintain method information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_METHOD(CRF35OCXCtrl)
			[id(3)] short DoScan();
			[id(4)] short UndoLoss(BSTR key,long cardno,BSTR blkver);
			[id(5)] short ChangePassWord(BSTR key, BSTR newpwd,long cardno);
			[id(6)] short SendRequest(BSTR URL);
			[id(7)] SHORT MySendRequest(BSTR url, BSTR params);
			//}}AFX_ODL_METHOD
			
			[id(8), helpstring("method GetRequestRetInfo")] BSTR GetRequestRetInfo(BSTR param);
			[id(9), helpstring("method ReadCardPocket")] LONG ReadCardPocket(SHORT pocket,BSTR CardPhyId);
			[id(10), helpstring("method GetPacketInfo")] LONG GetPacketInfo(BSTR param);
			[id(11), helpstring("method RewriteCardInfo")] SHORT RewriteCardInfo(void);
			[id(12), helpstring("method ReportCardWriteFailue")] SHORT ReportCardWriteFailue(BSTR url, BSTR serialno);
			[id(13), helpstring("method GetMainKey")] SHORT GetMainKey(BSTR url);			
			[id(15), helpstring("method CommonTransWriteCard")] SHORT CommonTransWriteCard(BSTR url, BSTR cardphyid,BSTR txcnt, BSTR outcardamount,BSTR amount,BSTR sdate3,BSTR stime3,BSTR ipServer,BSTR drtpPort,BSTR svrFunc,BSTR params);
			[id(16), helpstring("method UpdateCardInfo")] SHORT UpdateCardInfo(LPCTSTR CardPhyId, LPCTSTR feetype, LPCTSTR enddate);			
			[id(18), helpstring("method getComsumerLimit")] LONG getComsumerLimit(BSTR param);
			[id(19), helpstring("method ReadCardConsumerLimit")] SHORT ReadCardConsumerLimit(BSTR cardno);
			[id(20), helpstring("method ResetConsumerLimit")] SHORT ResetConsumerLimit(BSTR cardid, BSTR maxpercount, BSTR maxperday);
			[id(21), helpstring("method ReadCardSidyNo")] LONG ReadCardSidyNo(BSTR cardno, BSTR mainkey);
			[id(22), helpstring("method RewriteSidy")] SHORT RewriteSidy(void);
			[id(23), helpstring("method ReNetTransWriteCard")] SHORT ReNetTransWriteCard(void);
			[id(24), helpstring("method ReverseNetTrans")] SHORT ReverseNetTrans(BSTR url);
			[id(25), helpstring("method ReadOldCardInfo")] SHORT ReadOldCardInfo(BSTR oldcardpwd);
			[id(26), helpstring("method getOldCardInfo")] BSTR getOldCardInfo(BSTR param);
			[id(27), helpstring("method getMoneyFromOldCard")] SHORT getMoneyFromOldCard(BSTR CardNo, BSTR Money, BSTR cardPwd,BSTR newCardName);
			[id(28), helpstring("method CardTransWriteCard")] SHORT CardTransWriteCard(BSTR outcardamount, BSTR cardphyid, BSTR txcnt,BSTR amount,BSTR sdate3,BSTR stime3,BSTR ipServer,BSTR drtpPort,BSTR svrFunc);
			[id(29), helpstring("method UpdateDeadlineDate")] SHORT UpdateDeadlineDate(LPCTSTR url, LPCTSTR cardno, LPCTSTR enddate, LPCTSTR param);
			[id(30), helpstring("method getDeadlineDate")] BSTR getDeadlineDate(LPCTSTR url,LPCTSTR cardno, LPCTSTR params);
			[id(31), helpstring("method BeginUpdateCard")] SHORT BeginUpdateCard(BSTR cardphyid);
			[id(32), helpstring("method SetCardProperty")] SHORT SetCardProperty(BSTR prop_name, BSTR prop_value);
			[id(33), helpstring("method UpdateCard")] SHORT UpdateCard(void);
			[id(34), helpstring("method GetVersion")] BSTR GetVersion(void);
			[id(35), helpstring("method ReadSmallPacket")] SHORT ReadSmallPacket(SHORT nPacketNo,BSTR cardno);
			[id(36), helpstring("method GetSmallPacketInfo")] LONG GetSmallPacketInfo(BSTR param);
			[id(37), helpstring("method WaterTransWriteCard")] SHORT WaterTransWriteCard(BSTR url, BSTR cardphyid, BSTR param);
			[id(38), helpstring("method ReWriteWaterTrans")] SHORT ReWriteWaterTrans(void);
			[id(39), helpstring("method ReportWriteCardFailure")] SHORT ReportWriteCardFailure(BSTR url, BSTR params);
			[id(40), helpstring("method BankTransWriteCard")] SHORT BankTransWriteCard(BSTR url, BSTR cardphyid, BSTR outcardamount, BSTR dptCardCnt, BSTR params);
			[id(41), helpstring("method ReadShowCardno")] SHORT ReadShowCardno(void);
			[id(42), helpstring("method GetCardStateInfo")] BSTR GetCardStateInfo(BSTR param);
			[id(43), helpstring("method CardChangeClearOldCard")] SHORT CardChangeClearOldCard(BSTR cardphyid,BSTR newcardphyid, BSTR showcardno, BSTR dpt_card_cnt, BSTR pay_card_cnt, BSTR cardBala,BSTR ipServer,BSTR drtpPort,BSTR svrFunc);
			[id(44), helpstring("method ReCardChangeClearOldCard")] SHORT ReCardChangeClearOldCard(void);
			[id(45), helpstring("method CheckNewCard")] SHORT CheckNewCard(void);
			[id(46), helpstring("method CardChangeNewCard")] SHORT CardChangeNewCard(BSTR url);
			[id(47), helpstring("method ReCardChangeNewCard")] SHORT ReCardChangeNewCard(BSTR url);
			[id(48), helpstring("method GetChangeCardinfo")] BSTR GetChangeCardinfo(BSTR param);
			[id(49), helpstring("method CheckOldCard")] SHORT CheckOldCard(void);
			[id(51), helpstring("method ReadWaterCtlPacket")] SHORT ReadWaterCtlPacket(SHORT watertype, BSTR cardphyid);
			[id(52), helpstring("method GetWaterCtlPacketInfo")] LONG GetWaterCtlPacketInfo(BSTR param);
			[id(53), helpstring("method WaterCtlTransWriteCard")] SHORT WaterCtlTransWriteCard(BSTR url, BSTR cardphyid, SHORT watertype, BSTR params);
			[id(54), helpstring("method WriteWaterCtlPacket")] SHORT WriteWaterCtlPacket(BSTR outcardamount, BSTR cardphyid, BSTR txcnt, SHORT watertype, BSTR amount, BSTR sdatetime, BSTR price1, BSTR price2, BSTR price3, BSTR validatedate);
			[id(55), helpstring("method ReWriteWaterCtlTrans")] SHORT ReWriteWaterCtlTrans(void);
			[id(56), helpstring("method DoOpenCom")] SHORT DoOpenCom(void);
			[id(58), helpstring("method ReadCardLockInfo")] LONG ReadCardLockInfo(BSTR CardPhyId);
			[id(59), helpstring("method GetCardLockInfo")] BSTR GetCardLockInfo(BSTR param);
			[id(60), helpstring("method UnlockWriteCard")] SHORT UnlockWriteCard(BSTR outcardamount,BSTR cardphyid,BSTR txcnt,BSTR amount,BSTR sdate,BSTR stime,BSTR ipServer,BSTR drtpPort,BSTR svrFunc,BSTR CARDSTAT);
			[id(61), helpstring("method ReUnlockWriteCard")] SHORT ReUnlockWriteCard(void);
			[id(62), helpstring("method CheckTransProve")] SHORT CheckTransProve(SHORT transflag, SHORT cardcnt);
			[id(63), helpstring("method SetReturnMap")] void SetReturnMap(BSTR key, BSTR value);
			[id(64), helpstring("method CleanReturnMap")] void CleanReturnMap(void);
			[id(65), helpstring("method InitWaterCtlPocket")] SHORT InitWaterCtlPocket(BSTR url,SHORT pocket, BSTR cardphyid);
			[id(66), helpstring("method CheckLockStatus")] SHORT CheckLockStatus(BSTR cardphyid);
	};

	//  Event dispatch interface for CRF35OCXCtrl

	[ uuid(C49584BD-7055-48B1-AF83-744D3D2EBEDA),
	  helpstring("Event interface for RF35OCX Control") ]
	dispinterface _DRF35OCXEvents
	{
		properties:
			//  Event interface has no properties

		methods:
			// NOTE - ClassWizard will maintain event information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_EVENT(CRF35OCXCtrl)
			//}}AFX_ODL_EVENT
	};

	//  Class information for CRF35OCXCtrl

	[ uuid(335AEB92-0D39-4999-A2B5-536A2C718901),
	  helpstring("RF35OCX Control"), control ]
	coclass RF35OCX
	{
		[default] dispinterface _DRF35OCX;
		[default, source] dispinterface _DRF35OCXEvents;
	};

	//{{AFX_APPEND_ODL}}
	//}}AFX_APPEND_ODL}}
};
