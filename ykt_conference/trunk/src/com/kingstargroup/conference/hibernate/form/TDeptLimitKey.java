/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Tue Mar 28 13:46:48 CST 2006 by MyEclipse Hibernate Tool.
 */
package com.kingstargroup.conference.hibernate.form;

import java.io.Serializable;

/**
 * A class representing a composite primary key id for the T_DEPT_LIMIT
 * table.  This object should only be instantiated for use with instances 
 * of the TDeptLimit class.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized 
 * by MyEclipse Hibernate tool integration.
 */
public class TDeptLimitKey
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private volatile int hashValue = 0;

    /** The value of the OPER_CODE component of this composite id. */
    private java.lang.String operCode;

    /** The value of the DEPT_ID component of this composite id. */
    private java.lang.String deptId;

    /**
     * Simple constructor of TDeptLimitKey instances.
     */
    public TDeptLimitKey()
    {
    }

    /**
     * Returns the value of the operCode property.
     * @return java.lang.String
     */
    public java.lang.String getOperCode()
    {
        return operCode;
    }

    /**
     * Sets the value of the operCode property.
     * @param operCode
     */
    public void setOperCode(java.lang.String operCode)
    {
        hashValue = 0;
        this.operCode = operCode;
    }

    /**
     * Returns the value of the deptId property.
     * @return java.lang.String
     */
    public java.lang.String getDeptId()
    {
        return deptId;
    }

    /**
     * Sets the value of the deptId property.
     * @param deptId
     */
    public void setDeptId(java.lang.String deptId)
    {
        hashValue = 0;
        this.deptId = deptId;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the id components.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof TDeptLimitKey))
            return false;
        TDeptLimitKey that = (TDeptLimitKey) rhs;
        if (this.getOperCode() == null || that.getOperCode() == null)
        {
            return false;
        }
        if (! this.getOperCode().equals(that.getOperCode()))
        {
            return false;
        }
        if (this.getDeptId() == null || that.getDeptId() == null)
        {
            return false;
        }
        if (! this.getDeptId().equals(that.getDeptId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int operCodeValue = this.getOperCode() == null ? 0 : this.getOperCode().hashCode();
            result = result * 37 + operCodeValue;
            int deptIdValue = this.getDeptId() == null ? 0 : this.getDeptId().hashCode();
            result = result * 37 + deptIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
