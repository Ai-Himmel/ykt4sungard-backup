package org.king.yangong.dormitorymanage.domain;



/**
 * AbstractDormStuViewYgId generated by MyEclipse - Hibernate Tools
 */

public abstract class AbstractDormStuViewYgId  implements java.io.Serializable {


    // Fields    

     private String area;
     private String location;
     private String dormitory;
     private Integer incount;
     private String curdormdept;     


    // Constructors

    /** default constructor */
    public AbstractDormStuViewYgId() {
    }

	/** minimal constructor */
    public AbstractDormStuViewYgId(Integer incount) {
        this.incount = incount;
    }
    
    /** full constructor */
    public AbstractDormStuViewYgId(String area, String location, String dormitory, Integer incount,String curdormdept) {
        this.area = area;
        this.location = location;
        this.dormitory = dormitory;
        this.incount = incount;
        this.curdormdept = curdormdept;        
    }

   
    // Property accessors

    public String getArea() {
        return this.area;
    }
    
    public void setArea(String area) {
        this.area = area;
    }

    public String getLocation() {
        return this.location;
    }
    
    public void setLocation(String location) {
        this.location = location;
    }

    public String getDormitory() {
        return this.dormitory;
    }
    
    public void setDormitory(String dormitory) {
        this.dormitory = dormitory;
    }

    public Integer getIncount() {
        return this.incount;
    }
    
    public void setIncount(Integer incount) {
        this.incount = incount;
    }
    
   public String getCurdormdept() {
		return curdormdept;
	}

	public void setCurdormdept(String curdormdept) {
		this.curdormdept = curdormdept;
	}


	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		result = PRIME * result + ((area == null) ? 0 : area.hashCode());
		result = PRIME * result + ((curdormdept == null) ? 0 : curdormdept.hashCode());
		result = PRIME * result + ((dormitory == null) ? 0 : dormitory.hashCode());
		result = PRIME * result + ((incount == null) ? 0 : incount.hashCode());
		result = PRIME * result + ((location == null) ? 0 : location.hashCode());
		return result;
	}

	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final AbstractDormStuViewYgId other = (AbstractDormStuViewYgId) obj;
		if (area == null) {
			if (other.area != null)
				return false;
		} else if (!area.equals(other.area))
			return false;
		if (curdormdept == null) {
			if (other.curdormdept != null)
				return false;
		} else if (!curdormdept.equals(other.curdormdept))
			return false;
		if (dormitory == null) {
			if (other.dormitory != null)
				return false;
		} else if (!dormitory.equals(other.dormitory))
			return false;
		if (incount == null) {
			if (other.incount != null)
				return false;
		} else if (!incount.equals(other.incount))
			return false;
		if (location == null) {
			if (other.location != null)
				return false;
		} else if (!location.equals(other.location))
			return false;
		return true;
	}
}