package org.king.classmanage.domain;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;



/**
 * AbstractDictionary generated by MyEclipse - Hibernate Tools
 */

public abstract class AbstractDictionary extends org.king.framework.domain.BaseObject implements java.io.Serializable {


    // Fields    

     private DictionaryId id;
     private String dictName;
     private String dictCaption;
     private String dictParent;
     private Double dictSort;
     private String dictParent1;
     private Integer dictAvail;


    // Constructors

    /** default constructor */
    public AbstractDictionary() {
    }

    
    /** full constructor */
    public AbstractDictionary(String dictName, String dictCaption, String dictParent, Double dictSort, String dictParent1, Integer dictAvail) {
        this.dictName = dictName;
        this.dictCaption = dictCaption;
        this.dictParent = dictParent;
        this.dictSort = dictSort;
        this.dictParent1 = dictParent1;
        this.dictAvail = dictAvail;
    }

   
    // Property accessors

    public DictionaryId getId() {
        return this.id;
    }
    
    public void setId(DictionaryId id) {
        this.id = id;
    }

    public String getDictName() {
        return this.dictName;
    }
    
    public void setDictName(String dictName) {
        this.dictName = dictName;
    }

    public String getDictCaption() {
        return this.dictCaption;
    }
    
    public void setDictCaption(String dictCaption) {
        this.dictCaption = dictCaption;
    }

    public String getDictParent() {
        return this.dictParent;
    }
    
    public void setDictParent(String dictParent) {
        this.dictParent = dictParent;
    }

    public Double getDictSort() {
        return this.dictSort;
    }
    
    public void setDictSort(Double dictSort) {
        this.dictSort = dictSort;
    }

    public String getDictParent1() {
        return this.dictParent1;
    }
    
    public void setDictParent1(String dictParent1) {
        this.dictParent1 = dictParent1;
    }

    public Integer getDictAvail() {
        return this.dictAvail;
    }
    
    public void setDictAvail(Integer dictAvail) {
        this.dictAvail = dictAvail;
    }


	/**
	 * @see java.lang.Object#equals(Object)
	 */
	public boolean equals(Object object) {
		if (!(object instanceof AbstractDictionary)) {
			return false;
		}
		AbstractDictionary rhs = (AbstractDictionary) object;
		return new EqualsBuilder().append(this.dictParent, rhs.dictParent)
				.append(this.dictAvail, rhs.dictAvail).append(this.dictParent1,
						rhs.dictParent1).append(this.dictSort, rhs.dictSort)
				.append(this.dictName, rhs.dictName).append(this.dictCaption,
						rhs.dictCaption).append(this.id, rhs.id).isEquals();
	}


	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode() {
		return new HashCodeBuilder(123927275, 406536163)
				.append(this.dictParent).append(this.dictAvail).append(
						this.dictParent1).append(this.dictSort).append(
						this.dictName).append(this.dictCaption).append(this.id)
				.toHashCode();
	}


	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString() {
		return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
				.append("dictParent", this.dictParent).append("dictAvail",
						this.dictAvail).append("dictParent1", this.dictParent1)
				.append("dictSort", this.dictSort).append("dictName",
						this.dictName).append("dictCaption", this.dictCaption)
				.append("id", this.id).toString();
	}
   








}