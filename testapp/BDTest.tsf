KSTestScriptFile, Updated on 2006/07/05 15:21:14 from D:\proj\ksbass\topen\tobix\test3\testapp\klg\20060705.klg
FUNC1010,retCode=0,TIME=20060705 09:45:05 -- 原数据直接返回的BCC/BU测试功能
{ 
	vsmess='test1010',任意字符串数据，应答包中也应该有这个字段，并且也是这个值
}
FUNC1011,retCode=0,TIME=20060705 10:01:21 -- 测试BCCSHM功能，作用vsmess指定的循环次数测试
{ 
	vsmess='1000',指定循环测试次数
}
FUNC1012,retCode=0,TIME=20060705 10:03:08 -- 测试BUSHM的功能和效率
{ 
	vsmess='1000',测试的循环次数
}
FUNC1013,retCode=0,TIME=20060705 10:12:38 -- 用BCCSHM进行《多包测试返回功能》的测试，将会有不同结果集的多记录返回
{ 
	vsmess='150',多包返回的记录数
}
FUNC1014,retCode=0,TIME=20060705 10:34:52 -- 读取BCCSHM共享内存中的数据，及其BU运行机器中的类型长度返回
FIELDS
FUNC1015,retCode=0,TIME=20060705 10:42:56 -- 读取共享内存中的数据返回给客户端，将请求包中的值设置到共享内存中
{ 
	lvol0='100',BU机器上的BCCSHM块中m_iSerialNo值;
	vsmess='设置BCCSHM中字符串的值',BU机器上的BCCSHM块中m_szDBlock值
}
FUNC1016,retCode=0,TIME=20060705 11:36:06 -- 用功能号1013(150条测试记录)测试BCC的IntCall/IntCallNext、RACall/RACallNext的功能
{ 
	vsmess='',外调的ＢＵ组号，空则调用RACall/RACallNext
}
FUNC1016,retCode=0,TIME=20060705 11:37:29 -- 用功能号1013(150条测试记录)测试BCC的IntCall/IntCallNext、RACall/RACallNext的功能
{ 
	vsmess='BU0',外调的ＢＵ组号，空则调用RACall/RACallNext
}
FUNC1017,retCode=0,TIME=20060705 11:45:58 -- 用功能号1013测试BCC的IntTransfer、RATransfer的功能
{ 
	vsmess='',转交处理的的ＢＵ组号，空则调用RATransfer
}
FUNC1017,retCode=0,TIME=20060705 11:49:16 -- 用功能号1013测试BCC的IntTransfer、RATransfer的功能
{ 
	vsmess='BU0',转交处理的的ＢＵ组号，空则调用RATransfer
}
FUNC1018,retCode=0,TIME=20060705 12:00:59 -- 用1013功能测试外调功能ExtCall/ExtCallNext
{ 
	lvol1='400',ExtCall's DestNo目标BCC连接的DRTP的节点号
	lvol2='6673',ExtCall's FuncNo目标BCC注册的功能号
}
FUNC1019,retCode=0,TIME=20060705 12:07:06 -- 用1013功能测试外部转发请求ExtTransfer
{ 
	lvol1='400',ExtTransfer's DestNo目标BCC连接的DRTP的节点号
	lvol2='6673',ExtTransfer's FuncNo目标BCC注册的功能号
}
FUNC1020,retCode=0,TIME=20060705 14:23:17 -- 用1010功能来测试推送功能PushData, 1类消息模式
{ 
	lvol0='0',SourceNo in PushData(...)
	lvol1='400',DestNo in PushData(...)
	lvol2='7777',FuncNo in PushData(...)
	vsmess='标志性的数据内容，原封不动的被返回和推送的',作为推送消息的数据内容，可以包括其他数据字段
}
FUNC1025,retCode=0,TIME=20060705 14:30:05 -- 检查1013中在不同平台下各个操作的耗时分时时间
{ 
	vsmess='300', Test Loop Count
}
//EOF