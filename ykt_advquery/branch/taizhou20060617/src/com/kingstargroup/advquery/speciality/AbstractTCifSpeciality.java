/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Wed Oct 19 14:05:12 CST 2005 by MyEclipse Hibernate Tool.
 */
package com.kingstargroup.advquery.speciality;

import java.io.Serializable;

/**
 * A class that represents a row in the T_CIF_SPECIALITY table. 
 * You can customize the behavior of this class by editing the class, {@link TCifSpeciality()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractTCifSpeciality 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.String scode;

    /** The value of the simple sName property. */
    private java.lang.String sname;

    /** The value of the simple comments property. */
    private java.lang.String comments;

    /**
     * Simple constructor of AbstractTCifSpeciality instances.
     */
    public AbstractTCifSpeciality()
    {
    }

    /**
     * Constructor of AbstractTCifSpeciality instances given a simple primary key.
     * @param sCode
     */
    public AbstractTCifSpeciality(java.lang.String scode)
    {
        this.setScode(scode);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.String
     */
    public java.lang.String getScode()
    {
        return scode;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param sCode
     */
    public void setScode(java.lang.String sCode)
    {
        this.hashValue = 0;
        this.scode = sCode;
    }

    /**
     * Return the value of the S_NAME column.
     * @return java.lang.String
     */
    public java.lang.String getSname()
    {
        return this.sname;
    }

    /**
     * Set the value of the S_NAME column.
     * @param sName
     */
    public void setSname(java.lang.String sName)
    {
        this.sname = sName;
    }

    /**
     * Return the value of the COMMENTS column.
     * @return java.lang.String
     */
    public java.lang.String getComments()
    {
        return this.comments;
    }

    /**
     * Set the value of the COMMENTS column.
     * @param comments
     */
    public void setComments(java.lang.String comments)
    {
        this.comments = comments;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof TCifSpeciality))
            return false;
        TCifSpeciality that = (TCifSpeciality) rhs;
        if (this.getScode() == null || that.getScode() == null)
            return false;
        return (this.getScode().equals(that.getScode()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int sCodeValue = this.getScode() == null ? 0 : this.getScode().hashCode();
            result = result * 37 + sCodeValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
