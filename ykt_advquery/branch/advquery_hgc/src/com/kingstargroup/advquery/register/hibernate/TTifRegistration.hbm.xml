<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse - Hibernate Tools
-->
<hibernate-mapping>
	<class name="com.kingstargroup.advquery.register.hibernate.TTifRegistration" table="T_TIF_REGISTRATION" schema="YKT_CUR">
		<composite-id name="id" class="com.kingstargroup.advquery.register.hibernate.TTifRegistrationId">
			<key-property name="custId" type="long">
				<column name="CUST_ID" precision="22" scale="0" />
			</key-property>
			<key-property name="regId" type="long">
				<column name="REG_ID" precision="22" scale="0" />
			</key-property>
		</composite-id>
		<property name="deviceId" type="long">
			<column name="DEVICE_ID" precision="22" scale="0" not-null="true" />
		</property>
		<property name="deviceName" type="string">
			<column name="DEVICE_NAME" length="250" />
		</property>
		<property name="txDate" type="string">
			<column name="TX_DATE" length="8" />
		</property>
		<property name="txTime" type="string">
			<column name="TX_TIME" length="6" />
		</property>
		<property name="comments" type="string">
			<column name="COMMENTS" length="250" />
		</property>
		<property name="regFlag" type="integer">
			<column name="reg_flag" />
		</property>
	</class>

	<sql-query name="getTermList">
		<return-scalar type="string" column="regId"></return-scalar>
		<return-scalar type="string" column="termName"></return-scalar>
		select regId, termName from 
(select   t1.schoolterm_name termName,
(t1.reg_id||','||nvl(t2.reg_id,t1.reg_id)) regId,
row_number() over(partition by t1.schoolterm_name order by t1.schoolterm_name)rankid
from 
(select reg_id,schoolterm_name
  from t_tif_register_schoolterm t 
where  reg_flag in(1,2) and cuttype is not null 
 order by reg_id)t1 
 left join 
 (select reg_id,schoolterm_name
  from t_tif_register_schoolterm t 
where  reg_flag in(1,2) and cuttype is not null 
 order by reg_id)t2
 on  t1.schoolterm_name = t2.schoolterm_name and t1.reg_id != t2.reg_id )
  where rankid=1
	</sql-query>
</hibernate-mapping>
