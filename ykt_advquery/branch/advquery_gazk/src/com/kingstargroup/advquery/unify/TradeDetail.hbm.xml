<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<!-- DO NOT EDIT: This is a generated file that is synchronized -->
<!-- by MyEclipse Hibernate tool integration.                   -->
<!-- Created Wed Oct 19 14:10:34 CST 2005                         -->
<hibernate-mapping package="com.kingstargroup.advquery.unify">
<sql-query name="TradelogSQL">
		<return-scalar column="Serial_type" type="integer" />
		<return-scalar column="Device_Id" type="integer" />
		<return-scalar column="Operate_Date" type="string" />
		<return-scalar column="Operate_time" type="string" />
		<return-scalar column="Op_Fee" type="double" />
		<return-scalar column="out_balance" type="double" />
		<return-scalar column="trade_count" type="integer" />
select rankid,customer_id,Operate_Date,Operate_time,out_balance from (
select  row_number() over(partition by customer_id order by operate_date desc,operate_time desc ) rankid,
      customer_id,Operate_Date,Operate_time,out_balance from (
			 select customer_id,Operate_Date,Operate_time, out_balance
			  from ykt_his.t_tif_tradeserial_his his
			  where   his.serial_state = 2 and not (his.serial_type='930036' )
        
			  union all 
			  select customer_id,Operate_Date,Operate_time, out_balance
			   from ykt_cur.t_tif_tradeserial log 
			    where 
			      log.serial_state = 2 and not (log.serial_type='930036')
         ) t )p
         where p.rankid=1 and customer_id in(11,12)
           
</sql-query>
<sql-query name="TradelogSQL">
		<return-scalar column="Serial_type" type="integer" />
		<return-scalar column="Device_Id" type="integer" />
		<return-scalar column="Operate_Date" type="string" />
		<return-scalar column="Operate_time" type="string" />
		<return-scalar column="Op_Fee" type="double" />
		<return-scalar column="out_balance" type="double" />
		<return-scalar column="trade_count" type="integer" />
			select Serial_type,Device_Id,Operate_Date,Operate_time,Op_Fee, out_balance, trade_count from (
			 select Serial_type,Device_Id,Operate_Date,Operate_time,(out_balance - in_balance) Op_Fee, out_balance, trade_count
			  from ykt_his.t_tif_tradeserial_his his
			  where his.operate_date>= :startDate and not(his.operate_date > :endDate) 
			  and his.card_id = :cardId and his.serial_state = 2 and not (his.serial_type='930036')
			  union all 
			  select Serial_type,Device_Id,Operate_Date,Operate_time,(out_balance - in_balance) Op_Fee, out_balance, trade_count 
			   from ykt_cur.t_tif_tradeserial log 
			    where log.operate_date>= :startDate and not(log.operate_date > :endDate) and 
			    log.card_id = :cardId and log.serial_state = 2 and not (log.serial_type='930036')) tt order by Operate_Date desc, trade_count desc
	</sql-query>
	
	
	
	<sql-query name="TodayTradelogSQL">
		<return-scalar column="Serial_type" type="integer" />
		<return-scalar column="Device_Id" type="integer" />
		<return-scalar column="Operate_Date" type="string" />
		<return-scalar column="Operate_time" type="string" />
		<return-scalar column="Op_Fee" type="double" />
		<return-scalar column="out_balance" type="double" />
		<return-scalar column="trade_count" type="integer" />
			select Serial_type,Device_Id,Operate_Date,Operate_time,(out_balance - in_balance) Op_Fee, out_balance ,trade_count
			   from ykt_cur.t_tif_tradeserial log 
			    where log.operate_date>= :startDate and not(log.operate_date > :endDate) and 
			    log.card_id = :cardId and log.serial_state = 2 and not (log.serial_type='930036')
			     order by  Operate_Date desc , log.trade_count desc
	</sql-query >

  
    
</hibernate-mapping>
