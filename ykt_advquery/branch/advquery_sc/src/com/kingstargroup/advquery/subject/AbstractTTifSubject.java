/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Wed Oct 19 14:09:54 CST 2005 by MyEclipse Hibernate Tool.
 */
package com.kingstargroup.advquery.subject;

import java.io.Serializable;

/**
 * A class that represents a row in the T_TIF_SUBJECT table. 
 * You can customize the behavior of this class by editing the class, {@link TTifSubject()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractTTifSubject 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.String subno;

    /** The value of the simple subname property. */
    private java.lang.String subname;

    /** The value of the simple subtype property. */
    private java.lang.Integer subtype;

    /** The value of the simple direct property. */
    private java.lang.Integer direct;

    /** The value of the simple kind property. */
    private java.lang.Integer kind;

    /** The value of the simple father property. */
    private java.lang.String father;

    /** The value of the simple level property. */
    private java.lang.Integer level;

    /** The value of the simple endflag property. */
    private java.lang.Integer endflag;

    /** The value of the simple spare1 property. */
    private java.lang.String spare1;

    /** The value of the simple spare2 property. */
    private java.lang.String spare2;

    /** The value of the simple spare3 property. */
    private java.lang.String spare3;

    /**
     * Simple constructor of AbstractTTifSubject instances.
     */
    public AbstractTTifSubject()
    {
    }

    /**
     * Constructor of AbstractTTifSubject instances given a simple primary key.
     * @param subno
     */
    public AbstractTTifSubject(java.lang.String subno)
    {
        this.setSubno(subno);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.String
     */
    public java.lang.String getSubno()
    {
        return subno;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param subno
     */
    public void setSubno(java.lang.String subno)
    {
        this.hashValue = 0;
        this.subno = subno;
    }

    /**
     * Return the value of the SUBNAME column.
     * @return java.lang.String
     */
    public java.lang.String getSubname()
    {
        return this.subname;
    }

    /**
     * Set the value of the SUBNAME column.
     * @param subname
     */
    public void setSubname(java.lang.String subname)
    {
        this.subname = subname;
    }

    /**
     * Return the value of the SUBTYPE column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getSubtype()
    {
        return this.subtype;
    }

    /**
     * Set the value of the SUBTYPE column.
     * @param subtype
     */
    public void setSubtype(java.lang.Integer subtype)
    {
        this.subtype = subtype;
    }

    /**
     * Return the value of the DIRECT column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getDirect()
    {
        return this.direct;
    }

    /**
     * Set the value of the DIRECT column.
     * @param direct
     */
    public void setDirect(java.lang.Integer direct)
    {
        this.direct = direct;
    }

    /**
     * Return the value of the KIND column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getKind()
    {
        return this.kind;
    }

    /**
     * Set the value of the KIND column.
     * @param kind
     */
    public void setKind(java.lang.Integer kind)
    {
        this.kind = kind;
    }

    /**
     * Return the value of the FATHER column.
     * @return java.lang.String
     */
    public java.lang.String getFather()
    {
        return this.father;
    }

    /**
     * Set the value of the FATHER column.
     * @param father
     */
    public void setFather(java.lang.String father)
    {
        this.father = father;
    }

    /**
     * Return the value of the LEVEL column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getLevel()
    {
        return this.level;
    }

    /**
     * Set the value of the LEVEL column.
     * @param level
     */
    public void setLevel(java.lang.Integer level)
    {
        this.level = level;
    }

    /**
     * Return the value of the ENDFLAG column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getEndflag()
    {
        return this.endflag;
    }

    /**
     * Set the value of the ENDFLAG column.
     * @param endflag
     */
    public void setEndflag(java.lang.Integer endflag)
    {
        this.endflag = endflag;
    }

    /**
     * Return the value of the SPARE1 column.
     * @return java.lang.String
     */
    public java.lang.String getSpare1()
    {
        return this.spare1;
    }

    /**
     * Set the value of the SPARE1 column.
     * @param spare1
     */
    public void setSpare1(java.lang.String spare1)
    {
        this.spare1 = spare1;
    }

    /**
     * Return the value of the SPARE2 column.
     * @return java.lang.String
     */
    public java.lang.String getSpare2()
    {
        return this.spare2;
    }

    /**
     * Set the value of the SPARE2 column.
     * @param spare2
     */
    public void setSpare2(java.lang.String spare2)
    {
        this.spare2 = spare2;
    }

    /**
     * Return the value of the SPARE3 column.
     * @return java.lang.String
     */
    public java.lang.String getSpare3()
    {
        return this.spare3;
    }

    /**
     * Set the value of the SPARE3 column.
     * @param spare3
     */
    public void setSpare3(java.lang.String spare3)
    {
        this.spare3 = spare3;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof TTifSubject))
            return false;
        TTifSubject that = (TTifSubject) rhs;
        if (this.getSubno() == null || that.getSubno() == null)
            return false;
        return (this.getSubno().equals(that.getSubno()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int subnoValue = this.getSubno() == null ? 0 : this.getSubno().hashCode();
            result = result * 37 + subnoValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
