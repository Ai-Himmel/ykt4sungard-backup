/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Wed Oct 19 13:59:10 CST 2005 by MyEclipse Hibernate Tool.
 */
package com.kingstargroup.advquery.dictionary;

import java.io.Serializable;

/**
 * A class that represents a row in the T_PIF_DICTIONARY table. 
 * You can customize the behavior of this class by editing the class, {@link TPifDictionary()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractTPifDictionary 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The simple primary key value. */
    private TPifDictionaryKey id;

    /** The value of the simple dictName property. */
    private java.lang.String dictName;

    /** The value of the simple dictCaption property. */
    private java.lang.String dictCaption;

    /**
     * Simple constructor of AbstractTPifDictionary instances.
     */
    public AbstractTPifDictionary()
    {
    }

    /**
     * Constructor of AbstractTPifDictionary instances given a composite primary key.
     * @param id
     */
    public AbstractTPifDictionary(TPifDictionaryKey id)
    {
        this.setId(id);
    }

    /**
     * Return the composite id instance that identifies this object.
     * @return TPifDictionaryKey
     */
    public TPifDictionaryKey getId()
    {
        return this.id;
    }

    /**
     * Set the composite id instance that identifies this object.
     * @param id
     */
    public void setId(TPifDictionaryKey id)
    {
        this.hashValue = 0;
        this.id = id;
    }

    /**
     * Return the value of the DICT_NAME column.
     * @return java.lang.String
     */
    public java.lang.String getDictName()
    {
        return this.dictName;
    }

    /**
     * Set the value of the DICT_NAME column.
     * @param dictName
     */
    public void setDictName(java.lang.String dictName)
    {
        this.dictName = dictName;
    }

    /**
     * Return the value of the DICT_CAPTION column.
     * @return java.lang.String
     */
    public java.lang.String getDictCaption()
    {
        return this.dictCaption;
    }

    /**
     * Set the value of the DICT_CAPTION column.
     * @param dictCaption
     */
    public void setDictCaption(java.lang.String dictCaption)
    {
        this.dictCaption = dictCaption;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof TPifDictionary))
            return false;
        TPifDictionary that = (TPifDictionary) rhs;
        if (this.getId() == null || that.getId() == null)
            return false;
        return (this.getId().equals(that.getId()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            if (this.getId() == null)
            {
                result = super.hashCode();
            }
            else
            {
                result = this.getId().hashCode();
            }
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
