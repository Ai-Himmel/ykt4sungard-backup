/* --------------------------------------------
 * 创建日期: 2008-11-25
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能: 卡库不平处理
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "acctrans.h"
ESQL #include "busqc.h"
ESQL #include <string>
ESQL #include <sstream>
ESQL using namespace std;
EXEC SQL INCLUDE SQLCA;
int DoFrozeCard(int cardno);
int F846116(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{	
	int ret = 0;
	char dealtype;
	
	CAccTrans *pAccTrans=CAccTrans::getInstance();
	ret=pAccTrans->CheckCfgUpdate();
	if(ret)
		return ret;
	des2src(pAccTrans->trans.opercode,rPack->semp);
	pAccTrans->trans.transcode=TC_CARDACCDIFF;
	ret=pAccTrans->InitTrans();
	if(ret)
		return ret;			
	TRANS& trans=pAccTrans->trans;
	trans.cardno=rPack->lvol0;
	dealtype=rPack->sstatus2[0];


	T_t_card tCard;
	memset(&tCard,0,sizeof(tCard));
	ret=DB_t_card_read_by_cardno(trans.cardno,&tCard);
	if(ret)
	{
		writelog(LOG_ERR,"cardno[%d]",trans.cardno);
		if(DB_NOTFOUND==ret)
			return ERRINFO(E_NOTEXIST_CARDNO,trans.cardno);
		else 
			return E_DB_CARD_R;
	}
	if(tCard.status[0]!=STATUS_NORMAL)
	{
		return ERRINFO(E_CARD_LOGOUT,trans.cardno);
	}	
	if('1'==tCard.frozeflag[0])
	{
		return ERRINFO(E_CARD_FREEZE,trans.cardno);
	}

	T_t_cardaccdiff cardaccdiff;
	
	memset(&cardaccdiff,0,sizeof(cardaccdiff));
	
	des2src(cardaccdiff.startdate,rPack->sdate0);
	
	ret=DB_t_cardaccdiff_read_lock_by_c0_and_cardno_and_startdate(trans.cardno,cardaccdiff.startdate,&cardaccdiff);
	if(ret)
	{
		if(DB_NOTFOUND==ret)
			return E_DB_CARDACCDIFF_N;
		else
			return E_DB_CARDACCDIFF_D;
	}
	if('1'==cardaccdiff.status[0])
	{
		DB_t_cardaccdiff_free_lock_by_c0();
		ERRTIP("该卡已经平账");
		return E_COMMON_ERR;
	}
	des2src(cardaccdiff.dealdate,trans.sysdate);
	des2src(cardaccdiff.opercode,trans.opercode);
	if(dealtype=='1')
	{
		cardaccdiff.status[0]='1';
		strcpy(cardaccdiff.remark,"卡已经平账");		
	}
	if(dealtype=='2')
	{
		strcpy(cardaccdiff.remark,"卡已冻结");
	}
	ret=DB_t_cardaccdiff_update_lock_by_c0(&cardaccdiff);
	if(ret)
	{
		if(DB_NOTFOUND==ret)
			return E_DB_CARDACCDIFF_N;
		else
			return E_DB_CARDACCDIFF_D;
	}
	T_t_account tCardAccount;	
	memset(&tCardAccount,0,sizeof(tCardAccount));
	ret=DB_t_account_read_by_cardno_and_purseno(trans.cardno,trans.purseno,&tCardAccount);
	if(ret)
	{
		if(DB_NOTFOUND==ret)
			return ERRINFO(E_CARDNO_PURSENO_NOACCNO,trans.cardno,trans.purseno);
		else 
			return E_DB_ACCOUNT_R;
	}
	if(tCardAccount.status[0]!=STATUS_NORMAL)
	{
		return ERRINFO(E_CARDACC_LOGOUT,tCardAccount.accno);
	}

	if(dealtype=='1')
	{
		if(amtcmp(cardaccdiff.totallossamt,0)==0)
		{
			ERRTIP("平账金额为0不能平账");
			return E_COMMON_ERR;
		}
		if(amtcmp(cardaccdiff.totallossamt,0)>0)
		{
			pAccTrans->trans.transtype=TRANSTYPE_MORE_CARDBALINCOME;			
			trans.transamt=cardaccdiff.totallossamt;
		}
		else
		{
			pAccTrans->trans.transtype=TRANSTYPE_LESS_CARDBAL;			
			trans.transamt=-cardaccdiff.totallossamt;
		}
		trans.inputamt=trans.transamt;
		des2src(trans.cardaccno,tCardAccount.accno);
		//考虑消费流水丢失的情况,走长款处理
		trans.fundtype=0;
		des2src(trans.cardaccno,tCardAccount.accno);
			
		ret=pAccTrans->DoTransByTransType();
		if(ret)
			return ret;
		ret=pAccTrans->doTransEnd();
		if(ret)
			return ret;	
		sprintf(szMsg,"平账成功,%s",pAccTrans->remark.c_str());
	}
	if(dealtype=='2')
	{
		trans.transcode=TC_CARDFROZE;
		ret=DoFrozeCard(trans.cardno);
		if(ret)
			return ret;
		sprintf(szMsg,"冻结卡成功");
	}
	T_t_transdtl transdtl;
	memset(&transdtl,0,sizeof(transdtl));

	des2src(transdtl.transdate,trans.transdate);
	des2src(transdtl.transtime,trans.transtime);
	strcpy(transdtl.accdate,trans.sysdate);
	strcpy(transdtl.acctime,trans.systime);
	transdtl.termid=trans.termid;
	transdtl.termseqno=trans.termseqno;
	transdtl.transcode=trans.transcode;
	transdtl.paytype=trans.fundtype;
	des2src(transdtl.voucherno,trans.voucherno);
	transdtl.cardno=trans.cardno;
	transdtl.purseno=trans.purseno;
	transdtl.cardbefbal=trans.cardbefbal;	
	transdtl.cardcnt=trans.cardcnt;
	transdtl.cardaftbal=trans.cardaftbal;		
	transdtl.managefee=trans.totalfeeamt;
	transdtl.amount=trans.totaltransamt;
	transdtl.custid=tCardAccount.custid;
	des2src(transdtl.custname,tCardAccount.accname);
	des2src(transdtl.opercode,trans.opercode);
	transdtl.status[0]=DTLSTATUS_SUCCESS;
	transdtl.showcardno=atol(tCard.showcardno);
	ret=DB_t_transdtl_add(&transdtl);
	if(ret)
	{
	  if(DB_REPEAT==ret)
		return E_DB_TRANSDTL_E;
	  else
		return E_DB_TRANSDTL_I;
	}	
	return 0;
}
