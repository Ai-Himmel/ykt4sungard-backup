/* --------------------------------------------
 * 创建日期: 2008-06-02
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能: 已开户客户信息查询
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "busqc.h"
ESQL #include <string>
ESQL #include <sstream>
ESQL using namespace std;
EXEC SQL INCLUDE SQLCA;


int F846602(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 custid=0;
	char	 stuempno[31]="";
	sqlint32 custtype=0;
	char	 custname[61]="";
	char	 areacode[3]="";
	char	 deptcode[31]="";
	char	 deptfullname[1001]="";
	char 	 indate[9]="";
	char 	 outdate[9]="";
	char	 specialtycode[31]="";
	char	 classcode[31]="";
	char	 idtype[2]="";
	char	 idno[61]="";
	char	 sex[2]="";
	char	 country[4]="";
	char	 nation[3]="";
	char	 email[61]="";
	char	 tel[31]="";
	char	 mobile[31]="";
	char	 addr[241]="";
	char	 zipcode[7]="";
	char	 custattr[11]="";
	char	 opendate[9]="";
	char	 batchno[31]="";
	sqlint32 cardno=0;
	sqlint32 cardtype=0;
	sqlint32 feetype=0;
	char	 showcardno[11]="";
	char	 cardphyid[17]="";
	char	 cardstatus[11]="";
	char	 expiredate[9]="";
	char	 lossdate[9]="";
	char	 frozedate[9]="";
	char 	 baddate[9]="";
	char 	 badtype[2]="";
	char	 accno[21]="";
	sqlint32 purseno=0;
	double balance=0;
	double availbal=0;
	double frozebal=0;
	double subsidybal=0;
	double foregift=0;
	double singlemaxamt=0;
	double daycostmaxamt=0;
	sqlint32 lastcardcnt=0;
	double lastcardbal=0;
	char	 lasttransdate[31]="";
	sqlint32 subsidyno=0;
	sqlint16 indicator=0;
	char 	h_sqlcmd[2048]="";
	EXEC SQL END DECLARE SECTION;
	
	int ret = 0;
	int row = 0;
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,
	F_LVOL1,F_SPAGER,F_LSAFE_LEVEL2,
		F_SALL_NAME,F_SBRANCH_CODE0,F_SCERT_NO,
		F_VSVARSTR0,F_SCERT_NO2,F_SCARD1,
		F_SMARKET_CODE2,F_SEMAIL2,F_SMARKET_CODE,
		F_SNATION_CODE,F_SCUST_TYPE2,F_SEMAIL,
		F_SPHONE,F_SPHONE2,F_SCUSTTYPES,
		F_SPOST_CODE,F_SSERIAL1,F_SDATE1,
		F_SCUST_LIMIT,F_LVOL0,F_LSAFE_LEVEL,
		F_LVOL5,F_SORDER0,F_SSTATION1,
		F_SSERIAL0,F_SDATE0,F_SDATE1,F_SDATE2,F_SDATE3,F_STIME3,
		F_SBANK_ACC,F_LVOL3,F_DAMT0,
		F_DAMT1,F_DAMT2,F_DAMT3,
		F_DAMT4,F_DAMT5,F_LVOL6,F_DAMT11,F_DAMT12,
		F_SCUST_LIMIT2,F_LVOL10,F_LVOL11,F_LVOL12,
		F_STIME2,F_SSTATUS1,0);
	char renewcardflag=rPack->sstat_type[0];
	custid=rPack->lvol1;
	des2src(stuempno,rPack->spager);
	custtype=rPack->lsafe_level2;
	des2src(custname,rPack->sall_name);
	des2src(areacode,rPack->sbranch_code0);
	des2src(deptcode,rPack->scert_no);
	des2src(deptfullname,rPack->vsvarstr0);
	des2src(specialtycode,rPack->scert_no2);
	des2src(classcode,rPack->scard1);
	des2src(idtype,rPack->smarket_code);
	des2src(idno,rPack->semail2);
	des2src(sex,rPack->smarket_code2);
	des2src(country,rPack->snation_code);
	des2src(nation,rPack->scust_type2);
	des2src(email,rPack->semail);
	des2src(tel,rPack->sphone);
	des2src(mobile,rPack->sphone2);
	des2src(addr,rPack->scusttypes);
	des2src(zipcode,rPack->spost_code);
	des2src(custattr,rPack->sserial1);
	des2src(opendate,rPack->sdate1);
	des2src(batchno,rPack->scust_limit);
	cardno=rPack->lvol0;
	cardtype=rPack->lsafe_level;
	feetype=rPack->lvol5;
	des2src(showcardno,rPack->sorder0);
	des2src(cardphyid,rPack->sstation1);
	des2src(cardstatus,rPack->sserial0);
//	des2src(expiredate,rPack->sdate2);
//	des2src(lossdate,rPack->sdate3);
	des2src(accno,rPack->sbank_acc);
	des2src(badtype,rPack->sstatus1);
//	purseno=rPack->lvol3;
//	balance=rPack->damt0;
//	availbal=rPack->damt1;
//	frozebal=rPack->damt2;
//	subsidybal=rPack->damt3;
//	foregift=rPack->damt4;
//	lastcardbal=rPack->damt5;
//	lastcardcnt=rPack->lvol6;
//	des2src(lasttransdate,rPack->scust_limit2);
	subsidyno=rPack->lvol10;
	stringstream sql;

	sql<<"SELECT ";
	sql<<"a.custid,";
	sql<<"a.stuempno,";
	sql<<"a.custtype,";
	sql<<"a.custname,";
	sql<<"a.areacode,";
	sql<<"a.deptcode,";
	sql<<"a.deptfullname,";
	sql<<"a.indate,";
	sql<<"a.outdate,";
	sql<<"a.specialtycode,";
	sql<<"a.classcode,";
	sql<<"a.idtype,";
	sql<<"a.idno,";
	sql<<"a.sex,";
	sql<<"a.country,";
	sql<<"a.nation,";
	sql<<"a.email,";
	sql<<"a.tel,";
	sql<<"a.mobile,";
	sql<<"a.addr,";
	sql<<"a.zipcode,";
	sql<<"a.custattr,";
	sql<<"c.opendate,";
	sql<<"a.batchno,";
	sql<<"b.cardno,";
	sql<<"b.cardtype,";
	sql<<"b.feetype,";
	sql<<"b.showcardno,";
	sql<<"b.cardphyid,";
	sql<<"b.status||b.lossflag||b.frozeflag||b.badflag,";
	sql<<"b.expiredate,";
	sql<<"b.lossdate,";
	sql<<"b.frozedate,";
	sql<<"b.baddate,";
	sql<<"b.badtype,";
	sql<<"c.accno,";
	sql<<"c.purseno,";
	sql<<"c.balance,";
	sql<<"c.availbal,";
	sql<<"c.frozebal,";
	sql<<"c.subsidybal,";
	sql<<"c.foregift,";
	sql<<"c.singlemaxamt,";	
	sql<<"c.daycostmaxamt,";
	sql<<"c.lastcardcnt,";
	sql<<"c.lastcardbal,";
	sql<<"c.lasttransdate,";
	sql<<"c.subsidyno ";
	sql<<" FROM  ykt_cur.t_card b left join ykt_cur.t_customer a on ( b.custid=a.custid) left join  ykt_cur.t_account c on (b.cardno=c.cardno) ";
	sql<<" WHERE 1=1 ";
//	if('1'==renewcardflag)
//	{
//		sql<<" and b.cardtype in (select cardtype  from ykt_cur.t_cardtype where renewable='1') ";
//		sql<<" and b.status='1' and substr(b.cardstatus,2,1)='1' or substr(b.cardstatus,5,1)='1' ";
//	}
	if('1'==renewcardflag)
	{
		sql<<" and b.cardtype in (select cardtype  from ykt_cur.t_cardtype where renewable='1') ";
		sql<<" and b.status='1' and (b.lossflag='1' or b.badflag='1') ";
	}
	if(custid)
		sql<<" and a.custid="<<custid;
	if(strlen(stuempno))
		sql<<" and a.stuempno like '"<<stuempno<<"'";
	if(custtype)
		sql<<" and a.custtype="<<custtype;
	if(strlen(custname))
		sql<<" and a.custname like '"<<custname<<"'";
	if(strlen(areacode))
		sql<<" and a.areacode = '"<<areacode<<"'";
	if(strlen(deptcode))
		sql<<" and a.deptcode like '"<<deptcode<<"'";
	if(strlen(deptfullname))
		sql<<" and a.deptfullname like '"<<deptfullname<<"'";
	if(strlen(specialtycode))
		sql<<" and a.specialtycode like '"<<specialtycode<<"'";
	if(strlen(classcode))
		sql<<" and a.classcode like '"<<classcode<<"'";
	if(strlen(idtype))
		sql<<" and a.idtype = '"<<idtype<<"'";
	if(strlen(idno))
		sql<<" and a.idno like '"<<idno<<"'";
	if(strlen(sex))
		sql<<" and a.sex = '"<<sex<<"'";
	if(strlen(country))
		sql<<" and a.country = '"<<country<<"'";
	if(strlen(nation))
		sql<<" and a.nation = '"<<nation<<"'";
	if(strlen(email))
		sql<<" and a.email like '"<<email<<"'";
	if(strlen(tel))
		sql<<" and a.tel like '"<<tel<<"'";
	if(strlen(mobile))
		sql<<" and a.mobile like '"<<mobile<<"'";
	if(strlen(addr))
		sql<<" and a.addr like '"<<addr<<"'";
	if(strlen(zipcode))
		sql<<" and a.zipcode like '"<<zipcode<<"'";
	if(strlen(custattr))
		sql<<" and a.custattr = '"<<custattr<<"'";
	if(strlen(opendate))
		sql<<" and c.opendate like '"<<opendate<<"'";
	if(strlen(batchno))
		sql<<" and a.batchno like '"<<batchno<<"'";
	if(cardno)
		sql<<" and b.cardno="<<cardno;
	if(cardtype)
		sql<<" and b.cardtype="<<cardtype;
	if(feetype)
		sql<<" and b.feetype="<<feetype;
	if(strlen(showcardno))
		sql<<" and b.showcardno like '"<<showcardno<<"'";
	if(strlen(cardphyid))
		sql<<" and b.cardphyid like '"<<cardphyid<<"'";
	if(strlen(cardstatus))
	{
		sql<<" and b.status||b.lossflag||b.frozeflag||b.badflag = '"<<cardstatus<<"'";
	}
	else
	{
		//如果卡号或物理卡号都为空,则只查询状态为非注销的卡
		if(0==cardno)
			sql<<" and b.status= '1'";
	}
	if(strlen(badtype))
	{
		sql<<" and b.badtype = '"<<badtype<<"'";
	}
	if(strlen(expiredate))
		sql<<" and b.expiredate = '"<<expiredate<<"'";
	if(strlen(lossdate))
		sql<<" and b.lossdate = '"<<lossdate<<"'";
	if(strlen(accno))
		sql<<" and c.accno = '"<<accno<<"'";
	strcpy(h_sqlcmd,sql.str().c_str());
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		writelog(LOG_ERR,"sql:%s",h_sqlcmd);
		CHECK_DB_ERR;
		return E_DB_PREPARE;
	}
	EXEC SQL DECLARE customer_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_DECLARE;
	}
	EXEC SQL  OPEN customer_cur;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_OPEN;
	}
	while(1)
	{
		custid=0;
		stuempno[0]=0;
		custtype=0;
		custname[0]=0;
		areacode[0]=0;
		deptcode[0]=0;
		deptfullname[0]=0;
		indate[0]=0;
		outdate[0]=0;
		specialtycode[0]=0;
		classcode[0]=0;
		idtype[0]=0;
		idno[0]=0;
		sex[0]=0;
		country[0]=0;
		nation[0]=0;
		email[0]=0;
		tel[0]=0;
		mobile[0]=0;
		addr[0]=0;
		zipcode[0]=0;
		custattr[0]=0;
		opendate[0]=0;
		batchno[0]=0;
		cardno=0;
		cardtype=0;
		feetype=0;
		showcardno[0]=0;
		cardphyid[0]=0;
		cardstatus[0]=0;
		expiredate[0]=0;
		lossdate[0]=0;
		frozedate[0]=0;
		baddate[0]=0;
		badtype[0]=0;
		accno[0]=0;
		purseno=0;
		balance=0;
		availbal=0;
		frozebal=0;
		subsidybal=0;
		foregift=0;
		singlemaxamt=0;
		daycostmaxamt=0;
		lastcardcnt=0;
		lastcardbal=0;
		lasttransdate[0]=0;
		subsidyno=0;
		EXEC SQL FETCH customer_cur INTO
		:custid:indicator,
		:stuempno:indicator,
		:custtype:indicator,
		:custname:indicator,
		:areacode:indicator,
		:deptcode:indicator,
		:deptfullname:indicator,
		:indate:indicator,
		:outdate:indicator,
		:specialtycode:indicator,
		:classcode:indicator,
		:idtype:indicator,
		:idno:indicator,
		:sex:indicator,
		:country:indicator,
		:nation:indicator,
		:email:indicator,
		:tel:indicator,
		:mobile:indicator,
		:addr:indicator,
		:zipcode:indicator,
		:custattr:indicator,
		:opendate:indicator,
		:batchno:indicator,
		:cardno:indicator,
		:cardtype:indicator,
		:feetype:indicator,
		:showcardno:indicator,
		:cardphyid:indicator,
		:cardstatus:indicator,
		:expiredate:indicator,
		:lossdate:indicator,
		:frozedate:indicator,
		:baddate:indicator,
		:badtype:indicator,
		:accno:indicator,
		:purseno:indicator,
		:balance:indicator,
		:availbal:indicator,
		:frozebal:indicator,
		:subsidybal:indicator,
		:foregift:indicator,
		:singlemaxamt:indicator,
		:daycostmaxamt:indicator,
		:lastcardcnt:indicator,
		:lastcardbal:indicator,
		:lasttransdate:indicator,
		:subsidyno:indicator;
		ret=SQLCODE;
		if(ret)
		{
		  CHECK_DB_ERR;
		  EXEC SQL CLOSE customer_cur;
		  if(DB_NOTFOUND==ret)
		  {
			if(row)
			  break;
			else
			  return E_DB_CUSTOMER_N;
		  }
		  else
			return E_DB_CUSTOMER_R;
		}
		row++;
		outPack->lvol1=custid;
		des2src(outPack->spager,stuempno);
		outPack->lsafe_level2=custtype;
		des2src(outPack->sall_name,custname);
		des2src(outPack->sbranch_code0,areacode);
		des2src(outPack->scert_no,deptcode);
		des2src(outPack->vsvarstr0,deptfullname);
		des2src(outPack->sdate0,indate);
//		des2src(outPack->sdate1,outdate);
		des2src(outPack->scert_no2,specialtycode);
		des2src(outPack->scard1,classcode);
		des2src(outPack->smarket_code,idtype);
		des2src(outPack->semail2,idno);
		des2src(outPack->smarket_code2,sex);
		des2src(outPack->snation_code,country);
		des2src(outPack->scust_type2,nation);
		des2src(outPack->semail,email);
		des2src(outPack->sphone,tel);
		des2src(outPack->sphone2,mobile);
		des2src(outPack->scusttypes,addr);
		des2src(outPack->spost_code,zipcode);
		des2src(outPack->sserial1,custattr);
		des2src(outPack->sdate1,opendate);
		des2src(outPack->scust_limit,batchno);
		outPack->lvol0=cardno;
		outPack->lsafe_level=cardtype;
		outPack->lvol5=feetype;
		des2src(outPack->sorder0,showcardno);
		des2src(outPack->sstation1,cardphyid);
		des2src(outPack->sserial0,cardstatus);
		des2src(outPack->sdate2,expiredate);
		des2src(outPack->sdate3,lossdate);
		des2src(outPack->stime3,frozedate);
		des2src(outPack->stime2,baddate);
		des2src(outPack->sstatus1,badtype);
		des2src(outPack->sbank_acc,accno);
		outPack->lvol3=purseno;
		outPack->lvol10=subsidyno;
		outPack->damt0=balance;
		outPack->damt1=availbal;
		outPack->damt2=frozebal;
		outPack->damt3=subsidybal;
		outPack->damt4=foregift;
		outPack->damt5=lastcardbal;
		outPack->lvol6=lastcardcnt;
		outPack->damt11=singlemaxamt;
		outPack->damt12=daycostmaxamt;
		outPack->lvol11=D4U5(singlemaxamt*100,0);
		outPack->lvol12=D4U5(daycostmaxamt*100,0);
		des2src(outPack->scust_limit2,lasttransdate);
		PutRow(handle,outPack,pRetCode,szMsg);
		if(row%9==0)
		   AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
}

