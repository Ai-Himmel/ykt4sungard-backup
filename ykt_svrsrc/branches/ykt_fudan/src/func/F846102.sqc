/* --------------------------------------------
 * 创建日期: 2008-12-5
 * 程序作者: 王彦兵
 * 版本信息: 1.0.0.0
 * 程序功能: 卡片领入
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/
#include <string.h>
#include <stdio.h>
#include "pubfunc.h"
#include "pubdb.h"
#include "pubdef.h"
#include "errdef.h"
#include "dbfunc.h"
#include "fdsqc.h"
#include "dbfunc_foo.h"

EXEC SQL INCLUDE SQLCA;

//检查范围是否
int CheckRange(int cardtype,char*  startno,char* endno)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 hi_cardtype=0;
	char	 hi_startno[11]="";
	char	 hi_endno[11]="";
	sqlint32  ho_showcardno_cnt=0;
	EXEC SQL END DECLARE SECTION;

	hi_cardtype=cardtype;
	des2src(hi_startno,startno);
	des2src(hi_endno,endno);
	EXEC SQL
	SELECT count(showcardno) INTO :ho_showcardno_cnt
	FROM ykt_cur.t_pif_cardbook
	WHERE cardtype=:hi_cardtype and showcardno>= :hi_startno and showcardno<= :hi_endno;
	if(SQLCODE)
	{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			return E_DB_CARDBOOK_R;
	}
	if(!ho_showcardno_cnt)
			return 0;
	return DB_EXIST;
}

int CheckCardtype(int cardtype,char *pShowNo)
{
	switch(cardtype)
	{	
		case CT_NORMAL:
			{
				if(strncmp(pShowNo,"1",1) && strncmp(pShowNo,"2",1))
					return E_CARDTYPE_SHOWNO;
				break;
			}
		case CT_TEMP:
			{
				if(strncmp(pShowNo,"7",1) )
					return E_CARDTYPE_SHOWNO;
				break;
			}
		case CT_TEMP_NAME:
			{
				if(strncmp(pShowNo,"42",2) )
					return E_CARDTYPE_SHOWNO;
				break;
			}
		case CT_TEMP_NONAME:
			{
				if(strncmp(pShowNo,"40",2))
					return E_CARDTYPE_SHOWNO;
				break;
			}
		case CT_VIP :
			{
				if(strncmp(pShowNo,"41",2))
					return E_CARDTYPE_SHOWNO;
				break;
			}
		defualt:
			return E_CARDTYPE;			
	
	}
	return 0;
}

int F846102(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	int ret=0;
	char startno[11] = "";
	char endno[11] = "";
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);
	memset(&aPack,0,sizeof aPack);
	SetCol(handle,F_VSMESS,0);

	if(strlen(rPack->scust_no)!=10 || strlen(rPack->scust_no2) !=10)
	{
		writelog(LOG_ERR,"start showcardno[%s],end showcardno[%s]",rPack->scust_no,rPack->scust_no2);
		return  E_INPUT_SHOWCARDNO;
	}
	des2src(startno,rPack->scust_no);
	des2src(endno,rPack->scust_no2);
	
	int getCnt=rPack->lvol1;
	int cardtype=rPack->lvol0;
	double i_startno=atof(startno);
	double i_endno=atof(endno);
	if(i_endno<1)
		return E_ENDNO_RANGE;
	if(i_startno>i_endno)
		return E_STARTNO_GT_ENDNO;

	if(amtcmp(i_endno-i_startno,10000)>0)
		return E_GETCARDCNT_TOOMUCH;
	int total_cnt=i_endno-i_startno+1;

	if(total_cnt != getCnt)
		return E_CARDNO_NOTCONTINUE;
	
	ret=CheckRange(cardtype,startno,endno);
	if(ret)
	{
		writelog(LOG_INFO,"CheckRange ret[%d]",ret);
		if(DB_EXIST==ret)
		{
			if(1==total_cnt)
				return E_CARDUSESTATUS_GET;
			else
				return E_RANGE_EXIST_SHOWCARDNO;
		}
		else
			return ret;
	}

	ret = CheckCardtype(cardtype, startno);
	if(ret)
		return ret;

	//检查操作员
	T_t_pif_operator tOper;
	memset(&tOper,0,sizeof(tOper));

	ret=DB_t_pif_operator_read_by_oper_code(rPack->sorder1,&tOper);
	if(ret)
	{
		if(DB_NOTFOUND==ret)
			return E_DB_OPERATOR_N;
		else
			return E_DB_OPERATOR_R;
	}
	if(!strcmp(tOper.status,OPERATOR_UNREG))
		return E_OPERLOGON_UNREG;
	
	T_t_pif_cardbook tCardbook;
	memset(&tCardbook,0,sizeof(tCardbook));
	getsysdatetime(tCardbook.batchno);
//	writelog(LOG_DEBUG,"batchno: [%s]",tCardbook.batchno);
	tCardbook.cardtype=cardtype;	
	tCardbook.usestatus[0]=CARDUSESTATUS_UNUSED;
	des2src(tCardbook.opercode,tOper.oper_code);
	getsysdate(tCardbook.getdate);

	int i = 0;
	for(;i<total_cnt;i++)
	{
			sprintf(tCardbook.showcardno,"%10.0f",i_startno+i);
			ret=DB_t_pif_cardbook_add(&tCardbook);
			if(ret)
			{
			    if(DB_REPEAT==ret)
			        return E_DB_CARDBOOK_E;
			    else
			        return E_DB_CARDBOOK_I;
			}
	}
	T_t_pif_carddtl carddtl;
	memset(&carddtl,0,sizeof(carddtl));

	getsysdate(carddtl.accdate);
	getsystime(carddtl.acctime);

	carddtl.termid=rPack->lvol6;												//上传工作站标识
	double seqno = 0;
	ret = getNewUniqNo(KEYTYPE_T_PIF_CARDDTL,&seqno);						//获取流水号
	if(ret)
	{
		writelog(LOG_ERR,"getNewUniqNo[KEYTYPE_T_PIF_CARDDTL] ");
		return ret;
	}
	carddtl.termseqno = D2I(seqno);
	des2src(carddtl.opercode,tCardbook.opercode);
	des2src(carddtl.branchno,tCardbook.batchno);
	carddtl.cardtype=tCardbook.cardtype;
	carddtl.usetype[0]=CARDUSETYPE_GET;
	carddtl.inoutflag=INOUTFLAG_IN;
	carddtl.transcnt=total_cnt;
	strcpy(carddtl.summary,"卡片领入");	
	if(total_cnt==1)
		des2src(carddtl.showcardno,tCardbook.showcardno);	
	ret=DB_t_pif_carddtl_add(&carddtl);
	if(ret)
	{
		if(DB_REPEAT==ret)
			return E_DB_CARDDTL_E;
		else
			return E_DB_CARDDTL_I;
	}
	sprintf(outPack->vsmess,"操作员%s领入数量%d,起始号码%s,结束号码%s",tCardbook.opercode,total_cnt,startno,endno);
	PutRow(handle,outPack,pRetCode,szMsg);
	return 0;
}
