/* --------------------------------------------
 * 程序名称: F841605.sqc
 * 创建日期: Sep 29 2004
 * 程序作者: auto creat by wen jian
 * 版本信息: 1.0.0.0
 * 程序功能: 查询客户信息
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "fdsqc.h"

EXEC SQL INCLUDE SQLCA;

int F841605(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{

	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32	cut_id=0;                     	//客户号
	sqlint32	cut_type=0;                   	//客户类别
	sqlint32	 fee_type=0;				//收费类别
	sqlint32	cut_state=0;                  	//客户状态
	char    	cut_name[150+1]="";            	//客户名称
	sqlint32	area=0;                       	//客户所在区域
	char    	stuemp_no[20+1]="";           	//联系人学号或员工号
	char    	classdept_no[10+1]="";        	//联系人班级或部门号
	char    	classdept_name[150+1]="";      	//联系人班级或部门名称
	char    	class_no[10+1]="";      	//班级
	char		s_code[101] = "";
	char    	man[20+1]="";                 	//联系人姓名
	char    	sex[1+1]="";                  	//联系人性别
	sqlint32	nation=0;                     	//联系人民族
	char    	man_id[50+1]="";              	//联系人身份证号
	char    	tel[20+1]="";                 	//联系电话
	char    	address[150+1]="";            	//联系地址
	char    	reg_time[26+1]="";            	//注册时间
	char    	can_time[26+1]="";            	//预计注销时间
	char    	comments[150+1]="";           	//备注
	char 	batch_no[14+1]="";			//批次号
	char		man_idtype[4]="";			//证件类型
	char       grade[17]="";					//年级
	char 	country[4]="";				//国籍
	char 	dept_full_name[512]="";		//部门名称全名
	char 	enableid[2]="";				//身份禁用标志
	char 	school_code[4+1]="";			//学校代码
	char		is_issue_card[60+1]="";		//是否已经发行卡片
	sqlint16	indicator=0;
	char    	h_sqlcmd[1024]="";
	EXEC SQL END DECLARE SECTION;

	int    ret=0;
	int    row=0;
	int    first=0;
	int start_no=0;
	int end_no=0;
	char sqltmp[500]="";
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	ResetNormalCPack(&aPack,0,1);
	cut_id=rPack->lvol1;
	cut_type=rPack->lvol3;
	fee_type=rPack->lvol5;
	cut_state=rPack->lvol2;
	start_no=rPack->lvol11;
	end_no=rPack->lvol12;
	des2src(cut_name,rPack->sname);
	area=rPack->lvol0;
	des2src(stuemp_no,rPack->scust_auth2);
	des2src(classdept_no,rPack->scust_no);
	des2src(classdept_name,rPack->scard1);
	des2src(man,rPack->sname2);
	des2src(sex,rPack->smarket_code);
	nation=rPack->lvol4;
	des2src(man_id,rPack->scert_no);
	des2src(tel,rPack->sphone);
	des2src(address,rPack->scusttypes);
	des2src(batch_no,rPack->scust_limit);
	des2src(class_no,rPack->sorder0);
	des2src(man_idtype,rPack->sroom_no);
	des2src(grade,rPack->sstation1);
	des2src(country,rPack->snation_code);
	des2src(enableid,rPack->sstatus1);	
	des2src(school_code,rPack->sbranch_code0);
	strcpy(h_sqlcmd,"select  distinct cut_id, cut_type,fee_type, cut_state, cut_name,  \
		area, stuemp_no, classdept_no, classdept_name, class_no,man, sex,  \
		nation, man_id, tel, address, reg_time, can_time, a.comments,s_code, \
		man_idtype,grade,country,enableid,school_code,   \
		dept_fullname,  \
		(case when c.card_id is null then '未发卡' else '已发卡' end) is_issue_card \
		from ykt_cur.t_cif_customer a \
		left join	\ 
            	ykt_cur.t_pif_card c \
            	on a.CUT_ID=c.COSUMER_ID \
		left join  \
		(select distinct dept_code,dept_name_full dept_fullname  \
				from ykt_cur.t_cif_dept ) e \
				ON a.CLASSDEPT_NO=e.dept_code \
		where cut_type<>1");
	if(cut_id!=0)
	{
		sprintf(sqltmp," and cut_id =%d ",cut_id);
		strcat(h_sqlcmd,sqltmp);
	}
	if(cut_type!=0)
	{
		sprintf(sqltmp," and cut_type =%d ",cut_type);
		strcat(h_sqlcmd,sqltmp);
	}
	if(fee_type!=0)
	{
		sprintf(sqltmp," and fee_type =%d ",fee_type);
		strcat(h_sqlcmd,sqltmp);
	}
	if(cut_state!=0)
	{

		sprintf(sqltmp," and cut_state =%d ",cut_state);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(cut_name))
	{
		sprintf(sqltmp," and cut_name like '%%%s%%' ",cut_name);
		strcat(h_sqlcmd,sqltmp);
	}
	if(area!=0)
	{
		sprintf(sqltmp," and area =%d ",area);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(stuemp_no))
	{

		sprintf(sqltmp," and stuemp_no like '%%%s%%' ",stuemp_no);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(classdept_no))
	{
		sprintf(sqltmp," and classdept_no like '%%%s%%' ",classdept_no);
		strcat(h_sqlcmd,sqltmp);

	}
	if(strlen(classdept_name))
	{
		sprintf(sqltmp," and classdept_name like '%%%s%%' ",classdept_name);
		strcat(h_sqlcmd,sqltmp);

	}
	if(strlen(class_no))
	{
		sprintf(sqltmp," and class_no like '%%%s%%' ",class_no);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(man))
	{
		sprintf(sqltmp," and man like '%%%s%%' ",man);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(sex))
	{

		sprintf(sqltmp," and sex like '%%%s%%' ",sex);
		strcat(h_sqlcmd,sqltmp);
	}
	if(nation!=0)
	{
		sprintf(sqltmp," and nation =%d ",nation);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(man_id))
	{
		sprintf(sqltmp," and man_id like '%%%s%%' ",man_id);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(tel))
	{
		sprintf(sqltmp," and tel like '%%%s%%' ",tel);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(address))
	{
		sprintf(sqltmp," and address like '%%%s%%' ",address);
		strcat(h_sqlcmd,sqltmp);

	}
	if(strlen(batch_no))
	{

		sprintf(sqltmp," and batch_no like '%%%s%%' ",batch_no);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(man_idtype))
	{

		sprintf(sqltmp," and man_idtype like '%%%s%%' ",man_idtype);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(grade))
	{

		sprintf(sqltmp," and grade like '%%%s%%' ",grade);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(country))
	{

		sprintf(sqltmp," and country like '%%%s%%' ",country);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(enableid))
	{

		sprintf(sqltmp," and enableid = '%s' ",enableid);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(school_code))
	{
		sprintf(sqltmp," and school_code = '%s' ",school_code);
		strcat(h_sqlcmd,sqltmp);
	}
	if(start_no>0)
	{
		sprintf(sqltmp," and cut_id >= %d ",start_no);
		strcat(h_sqlcmd,sqltmp);
	}
	if(end_no>0)
	{
		sprintf(sqltmp," and cut_id <= %d ",end_no);
		strcat(h_sqlcmd,sqltmp);
	}
	//strcat(h_sqlcmd," start with dept_code='1' connect by PRIOR dept_code=parentdept_code");
	//printf("h_sqlcmd=[%s] \n",h_sqlcmd);
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		*pRetCode=E_DB_CUSTOMER_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  DECLARE customer_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		*pRetCode=E_DB_CUSTOMER_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  OPEN customer_cur;
	if(SQLCODE)
	{
		*pRetCode=E_DB_CUSTOMER_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	SetCol(handle,0);
	SetCol(handle,F_LVOL1,F_LVOL3,F_LVOL5,F_LVOL2,F_SNAME,F_LVOL0,
		F_SCUST_AUTH2,F_SCUST_NO,F_SCARD1,F_SNAME2
		,F_SMARKET_CODE,F_LVOL4,F_SPHONE,F_SCUSTTYPES,
		F_SPAGER,F_SPHONE3,F_SSECTYPES,F_SORDER0,F_SCUST_NO2,
		F_SCERT_NO,F_SROOM_NO,F_SSTATION1,F_SSTATUS1,F_VSVARSTR0,F_SNATION_CODE,F_SBRANCH_CODE0,F_SBANKNAME,0);
	while(1)
	{
		cut_id=0;
		cut_type=0;
		fee_type=0;
		cut_state=0;
		memset(cut_name,0,sizeof(cut_name));
		area=0;
		memset(stuemp_no,0,sizeof(stuemp_no));
		memset(classdept_no,0,sizeof(classdept_no));
		memset(classdept_name,0,sizeof(classdept_name));
		memset(class_no,0,sizeof(class_no));
		memset(man,0,sizeof(man));
		memset(sex,0,sizeof(sex));
		nation=0;
		memset(man_id,0,sizeof(man_id));
		memset(tel,0,sizeof(tel));
		memset(address,0,sizeof(address));
		memset(reg_time,0,sizeof(reg_time));
		memset(can_time,0,sizeof(can_time));
		memset(comments,0,sizeof(comments));
		memset(s_code,0,sizeof(s_code));
		memset(man_idtype,0,sizeof(man_idtype));
		memset(grade,0,sizeof(grade));
		memset(country,0,sizeof(country));
		memset(enableid,0,sizeof(enableid));
		memset(school_code,0,sizeof(school_code));
		memset(is_issue_card,0,sizeof is_issue_card);

		EXEC SQL  FETCH customer_cur INTO
		:cut_id:indicator,
		:cut_type:indicator,
		:fee_type:indicator,
		:cut_state:indicator,
		:cut_name:indicator,
		:area:indicator,
		:stuemp_no:indicator,
		:classdept_no:indicator,
		:classdept_name:indicator,
		:class_no:indicator,
		:man:indicator,
		:sex:indicator,
		:nation:indicator,
		:man_id:indicator,
		:tel:indicator,
		:address:indicator,
		:reg_time:indicator,
		:can_time:indicator,
		:comments:indicator,
		:s_code:indicator,
		:man_idtype:indicator,
		:grade:indicator,
		:country:indicator,
		:enableid:indicator,
		:school_code:indicator,
		:dept_full_name:indicator,
		:is_issue_card:indicator;

		ret=SQLCODE;
		if(ret)
		{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			EXEC SQL  CLOSE customer_cur;
			if(DB_NOTFOUND==ret)
			{
				if(row)
					break;
				else
					*pRetCode=E_DB_CUSTOMER_N;
			}
			else
				*pRetCode=E_DB_CUSTOMER_R;
			goto L_RETU;
		}

		out_pack->lvol1=cut_id;
		out_pack->lvol3=cut_type;
		out_pack->lvol5=fee_type;
		out_pack->lvol2=cut_state;
		des2src(out_pack->sname,cut_name);
		out_pack->lvol0=area;
		des2src(out_pack->scust_auth2,stuemp_no);
		des2src(out_pack->scust_no,classdept_no);
		des2src(out_pack->scard1,classdept_name);
		des2src(out_pack->sorder0,class_no);
		des2src(out_pack->sname2,man);
		des2src(out_pack->smarket_code,sex);
		out_pack->lvol4=nation;
		sprintf(out_pack->sstat_type2,"%d",nation);
		des2src(out_pack->scert_no,man_id);
		des2src(out_pack->sphone,tel);
		des2src(out_pack->scusttypes,address);
		des2src(out_pack->spager,reg_time);
		des2src(out_pack->sphone3,can_time);
		des2src(out_pack->ssectypes,comments);
		des2src(out_pack->scust_no2,s_code);
		des2src(out_pack->sroom_no,man_idtype);
		des2src(out_pack->sstation1,grade);
		des2src(out_pack->sstatus1,enableid);
		des2src(out_pack->snation_code,country);
		des2src(out_pack->sbranch_code0,school_code);
		des2src(out_pack->sbankname,is_issue_card);
		
		trim(classdept_no);
		//GetDeptFullNameByDeptcode(classdept_no,dept_full_name);
		des2src(out_pack->vsvarstr0,dept_full_name);
		row++;
		PutRow(handle,out_pack,pRetCode,szMsg);
		if(row%15==0)
			AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
L_RETU:
	return -1;
}
