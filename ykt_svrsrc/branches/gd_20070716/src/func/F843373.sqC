/* --------------------------------------------
 * 程序名称: F843373.sqc
 * 创建日期: Nov 12 2004
 * 程序作者: auto creat by wen jian
 * 版本信息: 1.0.0.0
 * 程序功能: insert t_cif_cuttypefee
 * --------------------------------------------
 * 修改日期: 2008-09-01
 * 修改人员: LEEXY(李晓阳)
 * 修改描述: 添加新增与学校部门对应编号
 * 版本信息: 1.0.0.1
 * 备注信息: 
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "fdsqc.h"

EXEC SQL INCLUDE SQLCA;

int F843373(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
		sqlint32	cut_type=0;                   	//客户类别代码
		char    	type_name[150+1]="";           	//客户类别名称
		char    	is_outfee[1+1]="";            	//是否交搭伙费
		char       iscomments[200]="";      //与学校对接的代码
		double  	ratio=0;                      	//搭伙费费率
		sqlint32	validdate=0;                  	//正式卡有效期
		double  	deposit_fee=0;                	//押金金额
		double  	cost_fee=0;                   	//卡成本费
		double  	in_fee=0;                     	//手续金额
		sqlint32	is_firstcostfee=0;            	//第一次是否收取卡成本费
		sqlint32	is_returncostfee=0;           	//是否退卡成本费
		double  	max_bala=0;                   	//
		char   isarea[10]=""; //所属校区
	EXEC SQL END DECLARE SECTION;

	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	ResetNormalCPack(&aPack,0,1);
#ifdef DEBUG
	writelog(LOG_DEBUG,"cut_type       :lvol0          [%d]",rPack->lvol0);
	writelog(LOG_DEBUG,"type_name      :scard0         [%s]",rPack->scard0);
	writelog(LOG_DEBUG,"is_outfee      :smain_flag     [%s]",rPack->smain_flag);
	writelog(LOG_DEBUG,"iscomments      :sbank_code     [%s]",rPack->sbank_code);
	writelog(LOG_DEBUG,"ratio          :damt0          [%lf]",rPack->damt0);
	writelog(LOG_DEBUG,"validdate      :lvol1          [%d]",rPack->lvol1);
	writelog(LOG_DEBUG,"deposit_fee    :damt1          [%lf]",rPack->damt1);
	writelog(LOG_DEBUG,"cost_fee       :damt2          [%lf]",rPack->damt2);
	writelog(LOG_DEBUG,"in_fee         :damt3          [%lf]",rPack->damt3);
	writelog(LOG_DEBUG,"is_firstcostfee:lvol2          [%d]",rPack->lvol2);
	writelog(LOG_DEBUG,"is_returncostfee:lvol3          [%d]",rPack->lvol3);
	writelog(LOG_DEBUG,"max_bala       :damt4          [%lf]",rPack->damt4);
	writelog(LOG_DEBUG,"isarea       :sphone          [%lf]",rPack->sphone);
#endif

	cut_type=rPack->lvol0;
	Strncpy_t(type_name,rPack->scard0,sizeof(type_name));
	Strncpy_t(is_outfee,rPack->smain_flag,sizeof(is_outfee));
	Strncpy_t(iscomments,rPack->sbank_code,sizeof(iscomments));
	ratio=rPack->damt0;
	validdate=rPack->lvol1;
	deposit_fee=rPack->damt1;
	cost_fee=rPack->damt2;
	in_fee=rPack->damt3;
	is_firstcostfee=rPack->lvol2;
	is_returncostfee=rPack->lvol3;
	max_bala=rPack->damt4;
	Strncpy_t(isarea,rPack->sphone,sizeof(isarea));
      
	EXEC SQL INSERT INTO ykt_cur.t_cif_cuttypefee (
 cut_type,type_name,is_outfee,comments,ratio,validdate,deposit_fee,cost_fee,in_fee,is_firstcostfee,is_returncostfee,max_bala,area)
	VALUES(:cut_type,:type_name,:is_outfee,:iscomments,:ratio,:validdate,:deposit_fee,:cost_fee,:in_fee,:is_firstcostfee,:is_returncostfee,:max_bala,:isarea);
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		*pRetCode=E_DB_CUTTYPEFEE_I;
		goto L_RETU;
	}
	SetCol(handle,0);
	PutRow(handle,out_pack,pRetCode,szMsg);
	return 0;
L_RETU:
	return -1;
}
