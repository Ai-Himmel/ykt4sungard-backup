[COMMON]
// ID : 定义本业务控制中心的ID，在通讯平台上注册特定功能号：APPPORT+ID
ID=1
// BASEFUNCNO: 本业务控制中心注册通讯的公共功能号
BASEFUNCNO=600

// MQNAME: 当为了使用MQ模式的时候，定义MQ命名，在同机下的不同KSMBCC不能使用相同的命名。若不使用，请别定义MQNAME
MQNAME=.\bccmq

// 定义外挂数据接收预处理模块，没有则无预处理
RDPPFILE=

// 定义外部请求分析外挂RA分析器名，没有则使用纯功能号分析规则
RAXFILE=

// BCC选择BU组的策略：缺省为1
// 0 - 当RAXFILE定义了有外挂RA分析器，则当RA分析器不能选出合适的BU组，即为无法服务
// 1 - 当无RA分析器或RA分析器不能选出合适的BU组，那么就由BCC从中选出合适的BU组来提供服务
// 2 - 当无RA分析器或RA分析器无法选择合适的BU组，那么BCC自动从第一个提供本功能的BU组来提供服务
BUSELECT=1

// 是否将所有进出数据都记录下来的开关；0-关闭；1－全跟踪；2－后续包不跟踪
DEBUG=2

// 由BCC进行过期文件的删除工作
// 过期文件的维护参数：
// 需要过期维护的文件，不要超过1024字节长，注意一定要用*.XXX来表示的
// 用分割符';'分割；在>后面有两种方式定义过期方法:d - 以日为单位; s- 以秒为单位
ODFILES=bulog/*.log>d10;BUWDLOG/*.log>d10;forward/*.ksf>s180

// FUNCSTAT: BU业务功能处理统计 REQ/ASW信息统计控制，缺省为0－关闭；1－打开(addr为MAC)；2-打开(addr为IP)
FUNCSTAT=2

// V2.60 - DRTPGROUP: 通讯平台成组容错开关，对外调和推送有关。0-无成组, 1-6: 不同的选择策略
DRTPGROUP=1

SERVERCOUNT=1
// 定义DRTP的信息:<IP地址>:<PORT连接端口号>:<NODE节点编号>
SERVER1=127.0.0.1:4000:7100
//SERVER2=127.0.0.1:2010:300
//SERVER3=127.0.0.1:2020:300

//SERVER2=192.168.0.121:2000:400

// 2008-7-22 10:39:07 - 是否动态关闭公共服务功能号，配置项为：[空或指定BU组ID]:[0或待处理请求队列号(1或2或3)]:[服务关闭请求阀值]
// 本特性是为了当关注的待处理请求在队列中的(累计)个数超过指定阀值，则公共服务功能号(BASEFUNCNO)会在通讯平台上注销；
// 直到累计数为0，且关注的指定BU组中的有可用BU，则重新打开。缺省为- :0:0 即关闭本动态公共服务功能号选项，压力测试的时候请关闭。
//DYNASERVICE=:1:10

// 过期文件的维护参数：
// 需要过期维护的文件，不要超过1024字节长，注意一定要用*.XXX来表示的
// 用分割符';'分割；在>后面有两种方式定义过期方法:d - 以日为单位; s- 以秒为单位
//ODFILES=bulog/*.log>d10;BUWDLOG/*.log>d10;forward/*.ksf>s180
//ODFILES=bulog/*.log>d10

FREETIME=1000

// 在屏幕上显示的最小日志信息号
LOGSHOW=1
// 后续查询数据存放文件目录：如果定义一定要一个绝对路径，以便多业务控制中心共享这些文件
FORWARD_PATH=forward/

// 后续查询数据生成后，多久不取则为无效处理，用秒计
FORWARD_CLEAR=1800   

// KLG文件存放的路径，空则缺省为当前目录下的LOG目录
KLGPATH=

//PUSHSUPPORT=0

// V2.80 - 调整推送线程的处理占用资源，即推送线程的循环轮询间隔时间，毫秒计(1-1000)
//PUSHFREE=1

// V2.50 - 该版本后支持多数据包推送，当MULTIPUSH>0则表示1类推送模式下最长推送数据包长度，除了单cpack包没有这个限制
MULTIPUSH=4096

// V2.74 - DIRECTPM0: 是否直接将PM0的消息直接推送出去: 0(缺省)-照旧通过推送线程完成; 1-直接发送,不记录结果; 2-直接发送，并记录推送结果
//                      注意：如果接收方严格检查排序，则不能打开本开关, 即必须为0
DIRECTPM0=0

// V2.73 - RECVPUSH: 接收推送消息后处理模式: 0(缺省)-支持提供给BU服务; 1-支持并记录到日志文件; 2-仅记录到文件中，抛弃
RECVPUSH=0

// PFSWITCH: 是否启动自动推送文件的日切，缺省为1; 0则表示关闭切换，推送文件以启动日期为准
PFSWITCH=1
// 消息推送记录库存放的路径
//  空则为./pdbfs/
PUSHDBFS_PATH=

// 推送消息后，多少时间（秒）内应该能够能够接收到确认数据，否则，retry to send for to-ack record or fail completely
PATIME=8

//MAXPDFLEN: 推送数据文件最大长度控制
MAXPDFLEN=2048000000  

MAXANSLEN=8000

// BUPORT: 定义提供给BU（业务处理单元）的连接端口号
BUPORT=3721

// REQTIMEOUT：在请求队列中挂了多久，还没有被处理，则排除其等待 毫秒计  0-不排除；[10000 - 120000]
REQTIMEOUT=10000

// 清除过期的日志文件和推送数据文件, LOGOVERDUE用于定义过期天数
LOGOVERDUE=3

// TOTALSHMLEN=100, 定义KSBCC控制的共享内存块的总长度，单位为MB
// 这些共享内存块的创建是通过BU来控制的（尤其用WriteAppInfo启动的时候，收到WriteAppInfo命令的BU）
TOTALSHMLEN=100

// 需要跟踪的功能清单文件
//FLOGFILE=flog.txt

// 监控功能的首功能号，目前暂时提供连续的4个监控功能
MONITOR0=900800

//DEFAULT=KSFIX_BU
// BU清单表的起始，后面即为BU组的ID
BEGIN=BU0

[BU0]
// 定义这类BU将配置多少个
UNITS=4

// 如果需要为本组BU启动一个程序，则用STARTPROG定义启动程序的命令行，启动的目录则为后面的PATH定义 V2.72
STARTPROG=

// 如果希望在DRTP连接建立之前，程序启动的时候，就先启动指定个本组BU中的进程，则用BEGINSTART指定 V2.72
BEGINSTART=2
// 系统中目前由于对各功能分了三个优先级，每个优先级处理模式可以不同，可以采用FIFO或LIFO，0表示用LIFO，1表示用FIFO
FIFOPROC1=1
FIFOPROC2=0
FIFOPROC3=0
// NOVBUWARN: 定义在多少时间内没有等待处理（空闲）的BU，则向前端发送信息提示，缺省为3000毫秒
NOVBUWARN=30000

// 本BU组的处理超时时间：缺省为COMMON段中的设置值
REQTIMEOUT=30000

// 本BU组设定所有功能最大处理时间(即提交请求后，处理过程中，准许BU没有向BCC发送命令的间隔时间，以秒计)，
// 如果超过本设置，那么就KILL掉该BU，防止BU业务处理中的死锁; 0-不控制
MAXRUNTIME=180

// WRITEAPPINFO=1时候，KSBCC向第一个启动的BU发起一个WRITEAPPINFO的命令
WRITEAPPINFO=0
// 如果业务处理单元程序与本程序安装在同一台机器，则配置下面一行，本控制中心将会自动启动UNITS定义的BU数
// 如果非本机上运行，不作自动启动和监控，则为空即可
PROG=./ykt_bu

// BU运行时候的参数
ARGV=bu0/ksbu.ini
// BU程序运行目录，用于ksbcc自动启动这些bu程序
PATH=./
// BDFILE: 本处理中心能够处理的功能号及其优先级等的定义文件
BDFILE=function0.lst
// NEXT: 定义下一类BU。当为END，则结束。
NEXT=BU1 //BU1


[BU1]
// 定义这类BU将配置多少个
UNITS=10

// 如果需要为本组BU启动一个程序，则用STARTPROG定义启动程序的命令行，启动的目录则为后面的PATH定义 V2.72
STARTPROG=

// 如果希望在DRTP连接建立之前，程序启动的时候，就先启动指定个本组BU中的进程，则用BEGINSTART指定 V2.72
BEGINSTART=2
// 系统中目前由于对各功能分了三个优先级，每个优先级处理模式可以不同，可以采用FIFO或LIFO，0表示用LIFO，1表示用FIFO
FIFOPROC1=1
FIFOPROC2=0
FIFOPROC3=0
// NOVBUWARN: 定义在多少时间内没有等待处理（空闲）的BU，则向前端发送信息提示，缺省为3000毫秒
NOVBUWARN=30000

// 本BU组的处理超时时间：缺省为COMMON段中的设置值
REQTIMEOUT=30000

// 本BU组设定所有功能最大处理时间(即提交请求后，处理过程中，准许BU没有向BCC发送命令的间隔时间，以秒计)，
// 如果超过本设置，那么就KILL掉该BU，防止BU业务处理中的死锁; 0-不控制
MAXRUNTIME=180

// WRITEAPPINFO=1时候，KSBCC向第一个启动的BU发起一个WRITEAPPINFO的命令
WRITEAPPINFO=0
// 如果业务处理单元程序与本程序安装在同一台机器，则配置下面一行，本控制中心将会自动启动UNITS定义的BU数
// 如果非本机上运行，不作自动启动和监控，则为空即可
PROG=./ykt_bu

// BU运行时候的参数
ARGV=bu1/ksbu.ini
// BU程序运行目录，用于ksbcc自动启动这些bu程序
PATH=./
// BDFILE: 本处理中心能够处理的功能号及其优先级等的定义文件
BDFILE=function1.lst
// NEXT: 定义下一类BU。当为END，则结束。
NEXT=END //BU1

[TESTBU]
// 定义这类BU将配置多少个
UNITS=1
// 系统中目前由于对各功能分了三个优先级，每个优先级处理模式可以不同，可以采用FIFO或LIFO，0表示用LIFO，1表示用FIFO
FIFOPROC1=1
FIFOPROC2=0
FIFOPROC3=0
// NOVBUWARN: 定义在多少时间内没有等待处理（空闲）的BU，则向前端发送信息提示，缺省为3000毫秒
NOVBUWARN=30000
// WRITEAPPINFO=1时候，KSBCC向第一个启动的BU发起一个WRITEAPPINFO的命令
WRITEAPPINFO=1
MAXRUNTIME=20
// 如果业务处理单元程序与本程序安装在同一台机器，则配置下面一行，本控制中心将会自动启动UNITS定义的BU数
// 如果非本机上运行，不作自动启动和监控，则为空即可
PROG=
// BU运行时候的参数
ARGV=
// BU程序运行目录，用于ksbcc自动启动这些bu程序
PATH=
// BDFILE: 本处理中心能够处理的功能号及其优先级等的定义文件
BDFILE=function1.lst
NEXT=END

