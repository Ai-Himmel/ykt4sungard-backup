/* --------------------------------------------
 * 创建日期: 2008-06-29
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能:区域查询
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "busqc.h"
ESQL #include "acctrans.h"
ESQL #include <string>
ESQL #include <sstream>
ESQL using namespace std;
EXEC SQL INCLUDE SQLCA;

int F820114(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char	 areacode[4]="";
	char	 fareacode[4]="";
	sqlint32	 arealevel=0;
	char	 areaname[61]="";
	char	 addr[241]="";
	char	 remark[241]="";
	char     h_sqlcmd[1024]="";
	sqlint16 indicator=0;
	EXEC SQL END DECLARE SECTION;
	
	int ret = 0;
	int row = 0;

	CAccTrans *pAccTrans=CAccTrans::getInstance();
	des2src(pAccTrans->trans.opercode,rPack->semp);
	pAccTrans->trans.transcode=MAKETRANSCODEQRY(TCM_AREA);	
	ret=pAccTrans->InitTrans();
	if(ret)
		return ret;

	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,0);
	SetCol(handle,F_LVOL0,F_LVOL1,F_SCARD0,F_LVOL2,F_SCUSTTYPES,F_SSECTYPES,0);
	if(rPack->lvol0)
		sprintf(areacode,"%d",rPack->lvol0);
	arealevel=rPack->lvol2;
	des2src(areaname,rPack->scard0);
		
	stringstream sql;
	sql<<"SELECT ";
	sql<<"areacode,";
	sql<<"fareacode,";
	sql<<"areaname,";
	sql<<"arealevel,";
	sql<<"addr, ";
	sql<<"remark ";
	sql<<" FROM ykt_cur.t_area ";
	sql<<" WHERE 1=1 ";
	if(strlen(areacode))
		sql<<" and areacode = '"<<areacode<<"'";
	if(strlen(areaname))
		sql<<" and areaname like '"<<areaname<<"'";
	sql<<" order by areacode";
	strcpy(h_sqlcmd,sql.str().c_str());
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_PREPARE;
	}
	EXEC SQL DECLARE area_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_DECLARE;
	}
	EXEC SQL  OPEN area_cur;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_OPEN;
	}
	while(1)
	{
		areacode[0]=0;
		fareacode[0]=0;
		areaname[0]=0;
		arealevel=0;
		addr[0]=0;
		remark[0]=0;
		EXEC SQL FETCH area_cur INTO
		:areacode:indicator,
		:fareacode:indicator,
		:areaname:indicator,
		:arealevel:indicator,
		:addr:indicator,
		:remark:indicator;
		ret=SQLCODE;
		if(ret)
		{
		  CHECK_DB_ERR;
		  EXEC SQL CLOSE area_cur;
		  if(DB_NOTFOUND==ret)
		  {
			if(row)
			  break;
			else
			  return E_DB_AREA_N;
		  }
		  else
			return E_DB_AREA_R;
		}
		row++;
		outPack->lvol0=atoi(areacode);
		outPack->lvol1=atoi(fareacode);
		des2src(outPack->scard0,areaname);
		outPack->lvol2=arealevel;
		des2src(outPack->scusttypes,addr);
		des2src(outPack->ssectypes,remark);
		
		PutRow(handle,outPack,pRetCode,szMsg);
		if(row%9==0)
		  AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
}
