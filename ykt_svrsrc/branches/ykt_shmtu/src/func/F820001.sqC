/* --------------------------------------------
 * 程序名称: F820001.sqc
 * 创建日期: Sep 25 2004
 * 程序作者: 耿刚
 * 版本信息: 1.0.0.0
 * 程序功能: 子系统预注册
 * --------------------------------------------
 * 修改日期:
 * 修改人员: geng_gang
 * 修改描述: 加初始密钥产生规则/加同时注册设备
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "fdsqc.h"

EXEC SQL INCLUDE SQLCA;

int andDevice(const ST_PACK *rPack,int Dev_id,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
		sqlint32	device_id=0;                  	//设备标识
		char    	device_name[150+1]="";         	//设备名称
		char    	dev999_id[8+1]="";            	//三九设备注册号
		char    	devphy999_id[8+1]="";         	//设备物理ID
		sqlint32	dev999_no=0;                  	//机号
		char    	devtype[4+1]="";              	//机型代码
		char    	devversion[8+1]="";           	//设备版本号
		char    	cardstr[2+1]="";              	//卡片结构
		char    	cardtype[64+1]="";            	//卡类
		sqlint32	portcount=0;                  	//服务器端口总数
		sqlint32  	fdev_id=0;           	//上级设备ID
		sqlint32	portno=0;                     	//服务器端口号
		sqlint32	state_id=0;                   	//设备状态
		sqlint32	joinmode=0;                   	//链路模式
		char    	comadd[16+1]="";              	//通信地址
		char    	port[6+1]="";                 	//通讯端口
		sqlint32	baudrate=0;                   	//波特率
		sqlint32	comtype=0;                    	//数据通讯方式
		char    	bsheetvdate[12+1]="";         	//黑名单有效期
		char    	bsheetver[12+1]="";           	//黑名单版本号
		sqlint32	lasttraserno=0;               	//终端交易流水号期末值
		char    	lasttradate[20+1]="";         	//终端交易时间期末值
		sqlint32	lastshutserno=0;              	//终端轧帐流水号期末值
		char    	lastshutdate[20+1]="";        	//终端轧帐时间期末值
		char    	syspwd[6+1]="";               	//系统员密码
		char    	admpwd[6+1]="";               	//管理员密码
		sqlint32	pwdonoff=0;                   	//密码开关
		char    	puserno[3+1]="";              	//钱包代码
		char    	cardset[64+1]="";             	//终端机适用用户卡类别
		char    	funonoff[2+1]="";             	//收费机增强功能开关
		sqlint32	cardusenum=0;                 	//卡的最大使用次数
		sqlint32	maxdeposit=0;                 	//钱包最高存款限额
		sqlint32	mindeposit=0;                 	//钱包最低剩余款限额
		sqlint32	ration=0;                     	//定值收费方式使用的定值额
		sqlint32	maxtrade=0;                   	//每次交易最高额
		char    	shuttimes[64+1]="";           	//扎帐时间点
		char    	card65pwd[64+1]="";           	//三九65类卡密钥
		char    	authpwd[64+1]="";             	//设备授权密钥
		sqlint32	ftflag=0;                     	//防火防盗状态
		sqlint32	phytype=0;                    	//设备物理型号
		sqlint32	web_level=0;                  	//网络层号
		sqlint32	subsystem_id=0;               	//所属子系统
		sqlint32	area1=0;                       	//设备所在区域
		char    	init_key1[32+1]="";            	//读卡密钥
		char    	manager1[20+1]="";             	//负责人员工号
		char    	tel1[20+1]="";                 	//联系电话
		char    	address1[150+1]="";            	//地址
		char    	operate_time[26+1]="";        	//操作时间
		char    	comments1[150+1]="";           	//备注
	EXEC SQL END DECLARE SECTION;

	//int ret=0;

	device_id=Dev_id;
	des2src(device_name,rPack->scust_auth);
	des2src(devtype,DEVITYPE_SUBSYSTEM);
	state_id=DEVISTAT_REGIST;
	subsystem_id=Dev_id;
	area1=rPack->lvol3;
	des2src(comadd,rPack->scust_auth2);
	des2src(manager1,rPack->sname2);
	des2src(tel1,rPack->sphone);
	des2src(address1,rPack->scusttypes);
	getsysdatetime(operate_time);
	des2src(comments1,rPack->ssectypes);

	EXEC SQL INSERT INTO ykt_cur.t_pif_device (
 device_id,device_name,dev999_id,devphy999_id,dev999_no,devtype,devversion,cardstr,cardtype,portcount,fdev_id,portno,state_id,joinmode,comadd,port,baudrate,comtype,bsheetvdate,bsheetver,lasttraserno,lasttradate,lastshutserno,lastshutdate,syspwd,admpwd,pwdonoff,puserno,cardset,funonoff,cardusenum,maxdeposit,mindeposit,ration,maxtrade,shuttimes,card65pwd,authpwd,ftflag,phytype,web_level,subsystem_id,area,init_key,manager,tel,address,operate_time,comments)
	VALUES(:device_id,:device_name,:dev999_id,:devphy999_id,:dev999_no,:devtype,:devversion,:cardstr,:cardtype,:portcount,:fdev_id,:portno,:state_id,:joinmode,:comadd,:port,:baudrate,:comtype,:bsheetvdate,:bsheetver,:lasttraserno,:lasttradate,:lastshutserno,:lastshutdate,:syspwd,:admpwd,:pwdonoff,:puserno,:cardset,:funonoff,:cardusenum,:maxdeposit,:mindeposit,:ration,:maxtrade,:shuttimes,:card65pwd,:authpwd,:ftflag,:phytype,:web_level,:subsystem_id,:area1,:init_key1,:manager1,:tel1,:address1,:operate_time,:comments1);
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_DEVICE_I;
	}
	return 0;
}

int F820001(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
		sqlint32	system_id=0;                  	//子系统标识
		char    	system_name[150+1]="";         	//子系统名称
		sqlint32	system_type=0;                	//子系统类别
		sqlint32	state=0;                      	//子系统状态
		sqlint32	area=0;                       	//子系统所在区域
		sqlint32	server_id=0;                  	//工作站号（设备注册号）
		char    	ip[20+1]="";                  	//IP地址
		char    	mac_addr[20+1]="";            	//网卡物理地址
		char    	init_key[32+1]="";            	//初始密钥
		sqlint32	version=0;                    	//子系统版本号
		char    	manager[20+1]="";             	//负责人员工号
		char    	tel[20+1]="";                 	//联系电话
		char    	address[150+1]="";            	//联系地址
		char    	comments[150+1]="";           	//备注
		sqlint32	sport = 0;					//子系统端口号
		sqlint32   enc_type = 0;
		char		funclist[256] = "";				//
		sqlint16  idr;
		sqlint32	tmpint=0;
		char		cardverno[13]="";
	EXEC SQL END DECLARE SECTION;

	double dUniqno=0;
	int ret=0;
       char key[17] = "";
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	ResetNormalCPack(&aPack,0,1);
#ifdef DEBUG
	writelog(LOG_DEBUG,"system_name    :scust_auth     [%s]",rPack->scust_auth);
	writelog(LOG_DEBUG,"system_type    :lvol1          [%d]",rPack->lvol1);
	writelog(LOG_DEBUG,"area           :lvol3          [%d]",rPack->lvol3);
	writelog(LOG_DEBUG,"server_id      :lvol4          [%d]",rPack->lvol4);
	writelog(LOG_DEBUG,"ip             :scust_auth2    [%s]",rPack->scust_auth2);
	writelog(LOG_DEBUG,"mac_addr       :sname          [%s]",rPack->sname);
	writelog(LOG_DEBUG,"version        :lvol5          [%d]",rPack->lvol5);
	writelog(LOG_DEBUG,"manager        :sname2         [%s]",rPack->sname2);
	writelog(LOG_DEBUG,"tel            :sphone         [%s]",rPack->sphone);
	writelog(LOG_DEBUG,"address        :scusttypes     [%s]",rPack->scusttypes);
	writelog(LOG_DEBUG,"comments       :ssectypes      [%s]",rPack->ssectypes);
	writelog(LOG_DEBUG,"port		 :lvol6   [%d]",rPack->lvol6);
	writelog(LOG_DEBUG,"enc_type   :lovl7  [%d]",rPack->lvol7);
	writelog(LOG_DEBUG,"funclist      :vsvarstr0[%s]",rPack->vsvarstr0);
#endif


	des2src(system_name,rPack->scust_auth);
	system_type=rPack->lvol1;
	state=SUBSYSSTAT_LOGOUT;
	area=rPack->lvol3;
	//server_id=rPack->lvol4;
	des2src(ip,rPack->scust_auth2);
	des2src(mac_addr,rPack->sname);
	version=rPack->lvol5;
	des2src(manager,rPack->sname2);
	des2src(tel,rPack->sphone);
	des2src(address,rPack->scusttypes);
	des2src(comments,rPack->ssectypes);
	sport = rPack->lvol6;
	enc_type = rPack->lvol7;
	des2src(funclist,rPack->vsvarstr0);

	

	//子系统名称不能重复
#ifdef ESQL_DB2	
	EXEC SQL select system_id into :tmpint:idr
	from ykt_cur.t_pif_subsystem
	where (state<>:state) and (system_name=:system_name)
	fetch first 1 rows only;
#else
	EXEC SQL select system_id into :tmpint:idr
	from ykt_cur.t_pif_subsystem
	where (state<>:state) and (system_name=:system_name) and rownum=1;
#endif
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		if(DB_NOTFOUND!=SQLCODE)
		{
			*pRetCode=E_DB_SUBSYSTEM_R;
			goto L_RETU;
		}
	}
	else
	{
		*pRetCode=E_SYSNAME_SAME;
		goto L_RETU;
	}

	SQLCODE=0;

	//如果同一IP的子系统已经注册,则不需再重复注册
#ifdef ESQL_DB2	
	EXEC SQL select system_id into :system_id:idr
	from ykt_cur.t_pif_subsystem
	where (state<>:state) and (ip=:ip or mac_addr=:mac_addr)
	fetch first 1 rows only;
#else
	EXEC SQL select system_id into :system_id:idr
	from ykt_cur.t_pif_subsystem
	where (state<>:state) and (ip=:ip or mac_addr=:mac_addr) and rownum=1;
#endif
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		if(DB_NOTFOUND!=SQLCODE)
		{
			*pRetCode=E_DB_SUBSYSTEM_R;
			goto L_RETU;
		}
	}
	else
	{
		*pRetCode=E_SUBSYSTEM_RELOGIN;
		goto L_RETU;
	}
	SQLCODE=0;
	//生成初始密钥
	memset(key,0,sizeof(key));
	sprintf(key,"%d",system_id);
	GetInitKey(init_key, key);
	//插入子系统记录
	ret=getNewUniqNo(KEYTYPE_DEVICE, &dUniqno);
	if(ret)
	{
		*pRetCode = ret;
		writelog(LOG_ERR,"getNewUniqNo err[%d]",ret);
		goto L_RETU;
	}
	system_id=D2I(dUniqno);
	server_id=D2I(dUniqno);
	state=SUBSYSSTAT_PREREGIST;

	strcpy(cardverno,"000000000000");
	EXEC SQL INSERT INTO ykt_cur.t_pif_subsystem (
	 system_id,system_name,system_type,state,area,server_id,ip,mac_addr,init_key,version,manager,tel,address,comments
	 ,port,enc_type,func_list,cardverno)
	VALUES(:system_id,:system_name,:system_type,:state,:area,:server_id,:ip,:mac_addr,:init_key,:version,:manager,:tel,:address,:comments
	,:sport,:enc_type,:funclist,:cardverno);
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		*pRetCode=E_DB_SUBSYSTEM_I;
		goto L_RETU;
	}
	//得到子系统标识,并在设备注册表中插入改设备信息
	ret=andDevice(rPack,system_id,pRetCode,szMsg);
	if(ret)
	{
		*pRetCode=ret;
		goto L_RETU;
	}
	//完成提交
	SetCol(handle,0);
	PutRow(handle,out_pack,pRetCode,szMsg);
	return 0;
L_RETU:
	return -1;
}

