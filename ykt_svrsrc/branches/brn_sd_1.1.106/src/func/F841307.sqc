/* --------------------------------------------
 * 程序名称: F841307.sqc
 * 创建日期: Sep 29 2004
 * 程序作者: auto creat by wen jian
 * 版本信息: 1.0.0.0
 * 程序功能: query t_cit_student
 * --------------------------------------------
 * 修改日期: 
 * 修改人员: 
 * 修改描述: 
 * 版本信息: 
 * 备注信息: 
 * --------------------------------------------*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "cpack.h"
#include "errdef.h"
#include "pubdef.h"
#include "pubdb.h"
#include "pubfunc.h"
#include "dbfunc.h"
#include "fdsqc.h"

EXEC SQL INCLUDE SQLCA;

int F841307(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char    	student_no[20+1]="";          	//学号
	sqlint32	study_state=0;                	//学生状态
	sqlint32	study_type=0;                 	//学生类别
	char    	student_name[150+1]="";        	//姓名
	char    	sex[1+1]="";                  	//性别
	sqlint32	polity=0;                     	//政治面貌
	sqlint32	nation=0;                     	//民族
	char    	idcard[20+1]="";              	//身份证号
	char    	dept_no[10+1]="";             	//院系代码
	char    	dept_code[10+1]="";           	//专业代码
	char    	register_date[10+1]="";       	//入学日期
	char    	grade[8+1]="";                	//年级
	sqlint32	study_time=0;                 	//学制
	char    	tel[20+1]="";                 	//联系电话
	char    	address[150+1]="";            	//联系地址
	char    	reg_time[26+1]="";            	//注册时间
	char    	comments[150+1]="";           	//备注
	sqlint16	indicator=0;
	char    	h_sqlcmd[1024]="";
	EXEC SQL END DECLARE SECTION;

	int    ret=0;
	int    row=0;
	int    first=0;
	char sqltmp[500]="";
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

#ifdef DEBUG
	writelog(LOG_DEBUG,"student_no     :scust_auth     [%s]",rPack->scust_auth);
	writelog(LOG_DEBUG,"study_state    :lvol4          [%d]",rPack->lvol4);
	writelog(LOG_DEBUG,"study_type     :lvol1          [%d]",rPack->lvol1);
	writelog(LOG_DEBUG,"student_name   :sname2         [%s]",rPack->sname2);
	writelog(LOG_DEBUG,"sex            :scust_type     [%s]",rPack->scust_type);
	writelog(LOG_DEBUG,"polity         :lvol2          [%d]",rPack->lvol2);
	writelog(LOG_DEBUG,"nation         :lvol3          [%d]",rPack->lvol3);
	writelog(LOG_DEBUG,"idcard         :scust_limit    [%s]",rPack->scust_limit);
	writelog(LOG_DEBUG,"dept_no        :sstation0      [%s]",rPack->sstation0);
	writelog(LOG_DEBUG,"dept_code      :sstation1      [%s]",rPack->sstation1);
	writelog(LOG_DEBUG,"register_date  :scust_auth2    [%s]",rPack->scust_auth2);
	writelog(LOG_DEBUG,"grade          :sorder2        [%s]",rPack->sorder2);
	writelog(LOG_DEBUG,"study_time     :lvol0          [%d]",rPack->lvol0);
	writelog(LOG_DEBUG,"tel            :sphone         [%s]",rPack->sphone);
	writelog(LOG_DEBUG,"address        :scusttypes     [%s]",rPack->scusttypes);
	writelog(LOG_DEBUG,"reg_time       :sphone3        [%s]",rPack->sphone3);
#endif

	ResetNormalCPack(&aPack,0,1);
	Strncpy_t(student_no,rPack->scust_auth,sizeof(student_no));
	study_state=rPack->lvol4;
	study_type=rPack->lvol1;
	Strncpy_t(student_name,rPack->sname2,sizeof(student_name));
	Strncpy_t(sex,rPack->scust_type,sizeof(sex));
	polity=rPack->lvol2;
	nation=rPack->lvol3;
	Strncpy_t(idcard,rPack->scust_limit,sizeof(idcard));
	Strncpy_t(dept_no,rPack->sstation0,sizeof(dept_no));
	Strncpy_t(dept_code,rPack->sstation1,sizeof(dept_code));
	Strncpy_t(register_date,rPack->scust_auth2,sizeof(register_date));
	Strncpy_t(grade,rPack->sorder2,sizeof(grade));
	study_time=rPack->lvol0;
	Strncpy_t(tel,rPack->sphone,sizeof(tel));
	Strncpy_t(address,rPack->scusttypes,sizeof(address));
	Strncpy_t(reg_time,rPack->sphone3,sizeof(reg_time));

	strcpy(h_sqlcmd,"select  student_no, study_state, study_type, student_name, sex, polity, nation, idcard, dept_no, dept_code, register_date, grade, study_time, tel, address, reg_time, comments  from ykt_cur.t_cit_student ");
	if(strlen(student_no))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  student_no like '%%%s%%' ",student_no);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and student_no like '%%%s%%' ",student_no);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(study_state!=0)
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  study_state =%d ",study_state);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and study_state =%d ",study_state);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(study_type!=0)
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  study_type =%d ",study_type);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and study_type =%d ",study_type);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(student_name))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  student_name like '%%%s%%' ",student_name);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and student_name like '%%%s%%' ",student_name);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(sex))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  sex like '%%%s%%' ",sex);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and sex like '%%%s%%' ",sex);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(polity!=0)
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  polity =%d ",polity);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and polity =%d ",polity);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(nation!=0)
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  nation =%d ",nation);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and nation =%d ",nation);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(idcard))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  idcard like '%%%s%%' ",idcard);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and idcard like '%%%s%%' ",idcard);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(dept_no))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  dept_no like '%%%s%%' ",dept_no);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and dept_no like '%%%s%%' ",dept_no);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(dept_code))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  dept_code like '%%%s%%' ",dept_code);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and dept_code like '%%%s%%' ",dept_code);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(register_date))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  register_date like '%%%s%%' ",register_date);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and register_date like '%%%s%%' ",register_date);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(grade))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  grade like '%%%s%%' ",grade);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and grade like '%%%s%%' ",grade);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(study_time!=0)
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  study_time =%d ",study_time);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and study_time =%d ",study_time);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(tel))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  tel like '%%%s%%' ",tel);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and tel like '%%%s%%' ",tel);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(address))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  address like '%%%s%%' ",address);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and address like '%%%s%%' ",address);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(reg_time))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  reg_time like '%%%s%%' ",reg_time);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and reg_time like '%%%s%%' ",reg_time);
			strcat(h_sqlcmd,sqltmp);
		}
	}

	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		*pRetCode=E_DB_STUDENT_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  DECLARE student_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		*pRetCode=E_DB_STUDENT_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  OPEN student_cur;
	if(SQLCODE)
	{
		*pRetCode=E_DB_STUDENT_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	SetCol(handle,0);
	SetCol(handle,F_SCUST_AUTH,F_LVOL2,F_LVOL4,F_SNAME,F_SCUST_TYPE,F_LVOL1,F_LVOL3,F_SCUST_LIMIT,F_SSTATION0,F_SSTATION1,F_SCUST_AUTH2,F_SORDER2,F_LVOL0,F_SPHONE,F_SCUSTTYPES,F_SCUST_LIMIT2,F_SSECTYPES,0);
	while(1)
	{
		memset(student_no,0,sizeof(student_no));
		study_state=0;
		study_type=0;
		memset(student_name,0,sizeof(student_name));
		memset(sex,0,sizeof(sex));
		polity=0;
		nation=0;
		memset(idcard,0,sizeof(idcard));
		memset(dept_no,0,sizeof(dept_no));
		memset(dept_code,0,sizeof(dept_code));
		memset(register_date,0,sizeof(register_date));
		memset(grade,0,sizeof(grade));
		study_time=0;
		memset(tel,0,sizeof(tel));
		memset(address,0,sizeof(address));
		memset(reg_time,0,sizeof(reg_time));
		memset(comments,0,sizeof(comments));

		EXEC SQL  FETCH student_cur INTO 
		:student_no:indicator,
		:study_state:indicator,
		:study_type:indicator,
		:student_name:indicator,
		:sex:indicator,
		:polity:indicator,
		:nation:indicator,
		:idcard:indicator,
		:dept_no:indicator,
		:dept_code:indicator,
		:register_date:indicator,
		:grade:indicator,
		:study_time:indicator,
		:tel:indicator,
		:address:indicator,
		:reg_time:indicator,
		:comments:indicator;
		ret=SQLCODE;
		if(ret)
		{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			EXEC SQL  CLOSE student_cur;
			if(DB_NOTFOUND==ret)
			{
				if(row)
					break;
				else
					*pRetCode=E_DB_STUDENT_N;
			}
			else
				*pRetCode=E_DB_STUDENT_R;
			goto L_RETU;
		}

		Strncpy_t(out_pack->scust_auth,student_no,sizeof(out_pack->scust_auth));
		out_pack->lvol2=study_state;
		out_pack->lvol4=study_type;
		Strncpy_t(out_pack->sname,student_name,sizeof(out_pack->sname));
		Strncpy_t(out_pack->scust_type,sex,sizeof(out_pack->scust_type));
		out_pack->lvol1=polity;
		out_pack->lvol3=nation;
		Strncpy_t(out_pack->scust_limit,idcard,sizeof(out_pack->scust_limit));
		Strncpy_t(out_pack->sstation0,dept_no,sizeof(out_pack->sstation0));
		Strncpy_t(out_pack->sstation1,dept_code,sizeof(out_pack->sstation1));
		Strncpy_t(out_pack->scust_auth2,register_date,sizeof(out_pack->scust_auth2));
		Strncpy_t(out_pack->sorder2,grade,sizeof(out_pack->sorder2));
		out_pack->lvol0=study_time;
		Strncpy_t(out_pack->sphone,tel,sizeof(out_pack->sphone));
		Strncpy_t(out_pack->scusttypes,address,sizeof(out_pack->scusttypes));
		Strncpy_t(out_pack->scust_limit2,reg_time,sizeof(out_pack->scust_limit2));
		Strncpy_t(out_pack->ssectypes,comments,sizeof(out_pack->ssectypes));
		row++;
		PutRow(handle,out_pack,pRetCode,szMsg);
		if(row%15==0)
			AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
L_RETU:
	return -1;
}
