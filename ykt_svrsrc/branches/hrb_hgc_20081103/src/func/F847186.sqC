/* --------------------------------------------
 * 创建日期: 2009-12-01
 * 程序作者: 
 * 版本信息: 1.0.0.0
 * 程序功能: 
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
//ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "busqc.h"
ESQL #include <string>
ESQL #include <sstream>
ESQL using namespace std;
EXEC SQL INCLUDE SQLCA;

int F847186(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	////////////////////////////////////////////////////////////////////////////////
	EXEC SQL BEGIN DECLARE SECTION;
	char	   transdate[9]="";//交易日期
	char       transtime[7]="";//交易时间
	sqlint32 	   cutid=0;//客户号
	char	   cutname[61]="";//客户姓名
	char	   stutempno[20]="";//学工号
	char	   cooldate[9]="";//采集日期
	char	   cooltime[7]="";//敛扇缡奔
	char	   accdate[9]="";//入账日期
	char	   acctime[7]="";//入账时间
	char       device_name[150]="";//设备名称
	double 	   amount=0;//交易金额
	double 	   cardbftbal=0;//入卡金额
	double 	   cardaftbal=0;//出卡金额
	char       devphyid[20]="";//设备物理号
	sqlint32   devid   =0;
	sqlint32   devseqno=0;//流水号
	sqlint32   shipid=0;//商户号
	char       status[2]="";//状态
	sqlint32   errcode=0; //错误码
	char       errmsg[240]="";//错误信息
	sqlint16 indicator=0;
	sqlint32   cardno=0;  //交易卡号
	sqlint32  cardcnt=0;//次数
	sqlint32 transcode=0; //交易码
	sqlint32 purseno=0;
	sqlint32  sysid=0;
	sqlint32 transmark=0;
	char trqudatebg[9]=""; //查询发生开始日期
	char trqudateed[9]="";//查询发生结束日期
	char accqudatebg[9]=""; //查询计帐开始日期
	char accqudateed[9]="";//查询计帐结束日期
	char h_sqlcmd[2048]="";
	EXEC SQL END DECLARE SECTION;
	
	int ret = 0;
	int row = 0;
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);
	T_t_extposdtl extposdtl;
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,F_LVOL3,F_SPHONE3,F_SNOTE,F_SDATE0,F_STIME0,F_SDATE1,F_STIME1,F_LVOL0,F_SCUST_LIMIT,F_SALL_NAME,
								F_LVOL1,F_DAMT0,F_DAMT1,F_DAMT2,F_LVOL5,F_LVOL7,F_LVOL2,F_LVOL8,F_LVOL9,
								F_LVOL6,F_SDATE2,F_STIME2,F_LVOL10,F_VSVARSTR0,F_LCERT_CODE,0);
    des2src(stutempno,rPack->scust_limit);
	cutid=rPack->lvol0;
	cardno=rPack->lvol1;
	shipid=rPack->lvol2;
	devid=rPack->lvol3;
	transcode=rPack->lcert_code;
	des2src(trqudatebg,rPack->sdate0);
	des2src(trqudateed,rPack->sdate1);
    des2src(accqudatebg,rPack->sdate2);
	des2src(accqudateed,rPack->sdate3);
	des2src(status,rPack->sstation0);
	stringstream sql;
	sql<<"SELECT ";
	sql<<"d.device_id,";
	sql<<"a.DEVPHYID,";
	sql<<"d.DEVICE_NAME,";
	sql<<"a.TRANSDATE,";
	sql<<"a.TRANSTIME,";
	sql<<"a.ACCDATE,";
	sql<<"a.ACCTIME,";
	sql<<"b.CUT_ID,";
	sql<<"b.STUEMP_NO,";
	sql<<"b.CUT_NAME,";
	sql<<"a.cardno,";
	sql<<"a.AMOUNT,";
	sql<<"a.CARDBEFBAL,";
	sql<<"a.CARDAFTBAL, ";
	sql<<"a.CARDCNT, "; 
	sql<<"a.PURSENO, "; 
	sql<<"a.COLDATE, ";
	sql<<"a.COLTIME, ";   
	sql<<"d.device_id, ";
	sql<<"a.DEVSEQNO, ";
	sql<<"a.SHOPID, ";
	sql<<"a.SYSID, ";   
	sql<<"a.TRANSMARK,  ";
	sql<<"a.TRANSCODE , ";
	sql<<"a.ERRCODE,  ";
	sql<<"a.ERRMSG  ";	   
	sql<<" FROM ykt_cur.T_EXTPOSDTL a,ykt_cur.t_cif_customer b, ykt_cur.t_pif_card c, t_pif_device d";
	sql<<" WHERE a.cardno=c.CARD_ID and b.CUT_ID=c.cosumer_id and a.devphyid=d.devphy999_id";
	if(strlen(stutempno))
			sql<<" and b.STUEMP_NO='"<<stutempno<<"'";
	if(cutid)
			sql<<" and b.CUT_ID ="<<cutid;
	if(cardno)
			sql<<" and a.CARDNO ="<<cardno;
	if(shipid)
			sql<<" and a.SHOPID ="<<shipid;
	if (devid)
		sql<<" and d.device_id ="<<devid;
	if (transcode)
		sql<<" and a.transcode ="<<transcode;
	if(strlen(trqudatebg))
			sql<<" and a.TRANSDATE >= '"<<trqudatebg<<"'";
	if(strlen(trqudateed))
			sql<<" and a.TRANSDATE <= '"<<trqudateed<<"'";
	if(strlen(accqudatebg))
			sql<<" and a.ACCDATE >= '"<<accqudatebg<<"'";
	if(strlen(accqudateed))
			sql<<" and a.ACCDATE <= '"<<accqudateed<<"'";
	if(strlen(status))
			sql<<" and a.status = '"<<status<<"'";
	sql<<" order by a.DEVSEQNO";
	strcpy(h_sqlcmd,sql.str().c_str());
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	writelog(LOG_ERR,"GetLogicDate  err ret[%s]",h_sqlcmd);
	if(SQLCODE)
	{
			CHECK_DB_ERR;
			return E_DB_PREPARE;
	}
	EXEC SQL DECLARE EXTPOSDTL_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
			CHECK_DB_ERR;
			return E_DB_CURSOR_DECLARE;
	}
	EXEC SQL	OPEN EXTPOSDTL_cur;
	if(SQLCODE)
	{
			CHECK_DB_ERR;
			return E_DB_CURSOR_OPEN;
	}
//	writelog(LOG_ERR,"GetLogicDate  err ret[%s]",h_sqlcmd);
	while(1)
	{       devid=0;//设备id
            memset(devphyid,0,sizeof(devphyid));//设备物理号
            memset(device_name,0,sizeof(device_name));//设备名称
	        memset(transdate,0,sizeof(transdate));//交易日期
	        memset(transtime,0,sizeof(transtime));//交易时间
	        memset(accdate,0,sizeof(accdate));//入账日期
    	    memset(acctime,0,sizeof(acctime));//入账时间
   	        cutid=0;//客户号
   	        memset(stutempno,0,sizeof(stutempno));//学工号
	        memset(cutname,0,sizeof(cutname));;//客户姓名
	        cardno=0;
    	    amount=0;//交易金额
   	        cardbftbal=0;//入卡金额
 	        cardaftbal=0;//出卡金额
 	        cardcnt=0;
			purseno=0;
			memset(cooldate,0,sizeof(cooldate));//采集日期
	        memset(cooltime,0,sizeof(cooltime));//敛扇缡奔
	        devid=0;
	        devseqno=0;//流水号
	        shipid=0;//商户号
	        sysid=0;
			transmark=0;
			transcode=0;
	        errcode=0; //错误码
            memset(errmsg,0,sizeof(errmsg));//错误信息
            
			EXEC SQL FETCH EXTPOSDTL_cur INTO
			:devid:indicator,
			:devphyid:indicator,
			:device_name:indicator,
			:transdate:indicator,
			:transtime:indicator,
			:accdate:indicator,
			:acctime:indicator,
			:cutid:indicator,
			:stutempno:indicator,
			:cutname:indicator,
			:cardno:indicator,
			:amount:indicator,
			:cardbftbal:indicator,
			:cardaftbal:indicator,
			:cardcnt:indicator,
			:purseno:indicator,
			:cooldate:indicator,
			:cooltime:indicator,
			:devid:indicator,
			:devseqno:indicator,
			:shipid:indicator,
	        :sysid:indicator,
		    :transmark:indicator,
			:transcode:indicator,
	        :errcode:indicator,
            :errmsg:indicator;  
			ret=SQLCODE;
			if(ret)
			{
				CHECK_DB_ERR;
				EXEC SQL CLOSE EXTPOSDTL_cur;
				if(DB_NOTFOUND==ret)
				{
					if(row)
						break;
					else
						return E_DB_EXTPOSDTL_N;
				}
				else
					return E_DB_EXTPOSDTL_R;
			}
			row++;
			 outPack->lvol3=devid;
 	    	 des2src(outPack->sphone3,devphyid);
			 des2src(outPack->snote,device_name);	 
             des2src(outPack->sdate0,transdate);
	         des2src(outPack->stime0,transtime);
			 des2src(outPack->sdate1,accdate);
	         des2src(outPack->stime1,acctime);
			 outPack->lvol0=cutid;	 
			 des2src(outPack->scust_limit,stutempno);
	         des2src(outPack->sall_name,cutname);
			 outPack->lvol1=cardno;
             outPack->damt0=cardbftbal;
			 outPack->damt1=amount;     
			 outPack->damt2=cardaftbal;
			 outPack->lvol5=cardcnt;
			 outPack->lvol6=purseno;
			 des2src(outPack->sdate2,cooldate);
	         des2src(outPack->stime2,cooltime);
			 outPack->lvol7=devseqno;
			 outPack->lvol2=shipid;
			 outPack->lvol8=sysid;
			 outPack->lvol9=transmark;
	//		 writelog(LOG_ERR,"999999999[%d]",transmark);
			 outPack->lcert_code=transcode;
			 outPack->lvol10=errcode;
			 des2src(outPack->vsvarstr0,errmsg);
	    	 PutRow(handle,outPack,pRetCode,szMsg);
			if(row%9==0)
				AnswerDataPart(handle,*pRetCode,szMsg); 
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
	
}
