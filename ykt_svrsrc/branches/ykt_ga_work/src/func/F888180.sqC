/* --------------------------------------------
 * 程序名称: F888180.sqc
 * 创建日期: 2009-06-21
 * 程序作者: XiaoYang.Lee
 * 版本信息: 1.0.0.0
 * 程序功能: 维护门禁组与大楼绑定
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "fdsqc.h"
ESQL #include "dbfunc_foo.h"
EXEC SQL INCLUDE SQLCA;

static int do_query(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg);

static int do_delete(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg);

static int do_update(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg);

static int do_insert(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg);


static int do_query(TRUSERID * handle, int iRequest, ST_PACK * rPack, int * pRetCode, char * szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char build_no[51]="";
	char build_names[151]="";
	sqlint32 ban_group_no=0;
	char remarks[150]="";
	char device_group_names[150]="";
	sqlint16 indr=0;
	char h_sql_cmd[1024]="";
	EXEC SQL END DECLARE SECTION;
	int ret;
	int counts=0;
	ST_CPACK aPack;
	ST_PACK *out_pack=&(aPack.pack);
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,0);
	SetCol(handle,F_SCERT_NO,F_SCUSTTYPES,F_LVOL0,F_SSECTYPES,F_VSVARSTR0,0);
	
	char temp_sql[512]="";
	
	sprintf(h_sql_cmd,"select a.BUILD_ID,a.BUILD_NAME,a.BAN_GROUP_ID,b.group_name,a.REMARKS from ykt_cur.t_cif_GateBan_BuildID a left join t_door_group b on a.BAN_GROUP_ID=b.group_id where 1=1");

	if(strlen(rPack->scusttypes))
	{
		memset(temp_sql,0,sizeof(temp_sql));
		sprintf(temp_sql," and BUILD_NAME like '%%%s%%'",rPack->scusttypes);
		strcat(h_sql_cmd,temp_sql);
	}

	if(strlen(rPack->scert_no))
	{
		memset(temp_sql,0,sizeof(temp_sql));
		sprintf(temp_sql," and BUILD_ID='%s' and rownum=1",rPack->scert_no);
		strcat(h_sql_cmd,temp_sql);
	}
	
	EXEC SQL PREPARE smst FROM :h_sql_cmd;
	if(SQLCODE)
	{
		*pRetCode=E_GATEBAN_INTERFACE_SQL_ERR ;
		CHECK_DB_ERR;
		return -1;
	}
	
	EXEC SQL DECLARE DS CURSOR FOR smst;
	if(SQLCODE)
	{
		*pRetCode =E_GATEBAN_INTERFACE_CURSOR_ERR;
		CHECK_DB_ERR;
		return -1;
	}

	EXEC SQL OPEN DS;
	if(SQLCODE)
	{
		*pRetCode=E_GATEBAN_INTERFACE_CURSOR_ERR;
		CHECK_DB_ERR;
		EXEC SQL CLOSE DS;
		return -1;
	}

	while(1)
	{
		memset(build_no,0,sizeof(build_no));
		memset(build_names,0,sizeof(build_names));
		ban_group_no=0;
		memset(remarks,0,sizeof(remarks));
		memset(device_group_names,0,sizeof(device_group_names));

		EXEC SQL FETCH DS INTO
			:build_no:indr,
			:build_names:indr,
			:ban_group_no:indr,
			:device_group_names:indr,
			:remarks:indr;
		if(SQLCODE)
		{
			ret=SQLCODE;
			EXEC SQL CLOSE DS;
			if(ret==DB_NOTFOUND)
			{
				if(counts)
					break;
				else
					{
						*pRetCode=E_GATEBAN_INTERFACE_QUERY_ISEMPTY;
						return E_GATEBAN_INTERFACE_QUERY_ISEMPTY;
					}
					
			}
			*pRetCode=E_GATEBAN_INTERFACE_READ_CURSOR_ERR;
			CHECK_DB_ERR;
			return -1;
		}
		strcpy(out_pack->scert_no,build_no);
		strcpy(out_pack->scusttypes,build_names);
		out_pack->lvol0=ban_group_no;
		strcpy(out_pack->ssectypes,device_group_names);
		strcpy(out_pack->vsvarstr0,remarks);
		counts++;
		PutRow(handle,out_pack,pRetCode,szMsg);		
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
}

static int do_delete(TRUSERID * handle, int iRequest, ST_PACK * rPack, int * pRetCode, char * szMsg)
{
	int ret;
	char build_id[51]="";
	strcpy(build_id,rPack->scert_no);
	ret=DB_t_cif_gateban_buildid_del_by_build_id(build_id);
	if(ret)
		*pRetCode=E_GATEBAN_INTERFACE_DELETE_ERR;
	return ret;
}

static int do_update(TRUSERID * handle, int iRequest, ST_PACK * rPack, int * pRetCode, char * szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char build_no[52]="";
	sqlint32 ban_group_id=0;
	char build_name[201+1]="";
	char remarks[256+1]="";
	EXEC SQL END DECLARE SECTION;
	int ret;
	strcpy(build_no,rPack->scert_no);
	ban_group_id=rPack->lvol0;
	strcpy(build_name,rPack->scusttypes);
	strcpy(remarks,rPack->vsvarstr0);
	EXEC SQL UPDATE YKT_CUR.t_cif_gateban_buildid SET ban_group_id=:ban_group_id,build_name=:build_name,remarks=:remarks WHERE build_id=:build_no;
	if(SQLCODE)
	{
		ret=SQLCODE;
		*pRetCode=E_GATEBAN_INTERFACE_UPDATE_ERR;
		sprintf(szMsg,"ret =[%d]",ret);
	}
	return ret;
}

static int do_insert(TRUSERID * handle, int iRequest, ST_PACK * rPack, int * pRetCode, char * szMsg)
{
	T_t_cif_gateban_buildid oper_by_gateban;
	int ret=0;
	strcpy(oper_by_gateban.build_id,rPack->scert_no);
	oper_by_gateban.ban_group_id=rPack->lvol0;
	strcpy(oper_by_gateban.build_name,rPack->scusttypes);
	strcpy(oper_by_gateban.remarks,rPack->vsvarstr0);
	ret=DB_t_cif_gateban_buildid_add(&oper_by_gateban);
	if(ret)
		*pRetCode=E_GATEBAN_INTERFACE_INSERT_ERR;
	return ret;
}

int F888180(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	int ret=0;
	char status[3]="";
	strcpy(status,rPack->sstatus0);
	if(status[0]=='Q')
	{
		ret = do_query(handle,iRequest,rPack,pRetCode,szMsg);
	}
	else if(status[0]=='D')
	{
		ret = do_delete(handle,iRequest,rPack,pRetCode,szMsg);
	}
	else if(status[0]=='U')
	{
		ret = do_update(handle,iRequest,rPack,pRetCode,szMsg);
	}
	else if(status[0]=='I')
	{
		ret = do_insert(handle,iRequest,rPack,pRetCode,szMsg);
	}
	else
	{
		*pRetCode=E_GATEBAN_INTERFACE_OPER_ERR;
		return -1;
	}
	return ret;
}
