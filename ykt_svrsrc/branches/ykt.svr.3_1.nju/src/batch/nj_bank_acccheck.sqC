/* --------------------------------------------
 * 程序名称: load_acccheck.sqc
 * 创建日期: 2009/07/31
 * 程序作者: 王彦兵
 * 版本信息: 1.0.0.0
 * 程序功能:  圈存对账
 * --------------------------------------------*/
#define _IN_SQC_
ESQL #include <stdio.h>
ESQL #include <string.h>
ESQL #include "pubdef.h"
ESQL #include "errdef.h"
ESQL #include "pubfunc.h"
ESQL #include "pubdb.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "cpack.h"
ESQL #include "busqc.h"
ESQL #include <iostream>
ESQL #include <sstream>
using namespace std;
EXEC SQL INCLUDE SQLCA;	
int startaccchk(char *chkacc_date)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char	hi_transdate[9]=""; 		  
	EXEC SQL END DECLARE SECTION;
	
	//查当前流水表
	des2src(hi_transdate,chkacc_date);
	char transdtlname[61]={0};
	int	ret=GetTransdtlTableName(chkacc_date,transdtlname);
	if(ret)
	{
		return ret;
	}
	int effectrows=0;
	stringstream sql;
	SQLCODE=0;
	sql<<"insert into ykt_cur.t_bankchkdtl(transdate,refno,stuempno,bankcardno,amount,chkstatus,chkflag)"; 
	sql<<"	select accdate,refno,stuempno,extdata,amount,2,0 ";
	sql<<"	from ykt_cur."<<transdtlname<<" where accdate='"<<chkacc_date<<"'";
	sql<<"	and status ='3'  and transcode=3170 ";
	sql<<"	and refno not in ";
	sql<<"	(select refno from ykt_cur.t_bankchkdtl ";
	sql<<"	where transdate='"<<chkacc_date<<"')";
	ret=dynamic_execute_sql(sql.str().c_str(),&effectrows);
	if(ret)
	{
		if(ret!=DB_NOTFOUND)
		{
			writelog(LOG_ERR,"exec sql:%s retcode=%d",sql.str().c_str(),ret);
			return ret;
		}
	}
	writelog(LOG_INFO,"exec sql:%s effectrows=%d",sql.str().c_str(),effectrows);
	SQLCODE=0;
	sql.str(""); 
	sql<<"	update ykt_cur.t_bankchkdtl set ";
	sql<<"	chkstatus =1 ";
	sql<<"	where  transdate='"<<chkacc_date<<"'";
	sql<<"	and refno not in ";
	sql<<"	(select refno from ykt_cur."<<transdtlname;
	sql<<"	 where accdate='"<<chkacc_date<<"' and status ='3' and transcode=3170)";
	effectrows=0;
	ret=dynamic_execute_sql(sql.str().c_str(),&effectrows);
	if(ret)
	{
		if(ret!=DB_NOTFOUND)
		{
			writelog(LOG_ERR,"exec sql:%s retcode=%d",sql.str().c_str(),ret);
			return ret;
		}
	}
	writelog(LOG_INFO,"exec sql:%s effectrows=%d",sql.str().c_str(),effectrows);
	SQLCODE=0;
	EXEC SQL 
		update  ykt_cur.T_BANKCHKDATE 	
		set chkflag=1
		where chkdate=:hi_transdate;
	if(SQLCODE)
	{
		return E_DB_BANK_CHKDATE_U;
	}
}
int bank_accchk(char *checkdate,char *filepath)
{
   	EXEC SQL BEGIN DECLARE SECTION;
    char    	chkacc_date[9]="";           
	sqlint16	indicator=0;
    EXEC SQL END DECLARE SECTION;		

	int ret = 0;
	FILE *fp = NULL;
	char sBuffer[1024];
	char tx_date[9]="";
	char bankno[21]="";
	char sBankrefno[20] = "";
	char sSerialNo[20]="";
	int serial_no=0;
	double  amount=0;
	char sAmount[20]="";
	char stuempno[31]="";
	char *phead;
	char *ptail;
	int rows=0;
	char *endstr = "交易汇总";

	T_t_bankchkdtl  tbankchkdtl;
	T_t_bankchkdate  tbankchkdate;
	
	des2src(chkacc_date,checkdate);
	
	SQLCODE=0;	
	EXEC SQL 
			delete from ykt_cur.t_bankchkdtl  where transdate=:chkacc_date;
	if(SQLCODE!=0&&SQLCODE!=DB_NOTFOUND)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_BANK_CHKDATE_D;
	}

	memset(&tbankchkdate,0,sizeof tbankchkdate);
	des2src(tbankchkdate.chkdate,chkacc_date);
	SQLCODE=0;
	ret=DB_t_bankchkdate_add(&tbankchkdate);
	if(ret!=0&&ret!=DB_REPEAT)
	{
		return E_DB_BANK_CHKDATE_I;
	}
		
	if((fp = fopen(filepath, "rb")) == NULL)
	{
		writelog(LOG_ERR, "open filename[%s] error", filepath);
		return E_TRANS_UNKNOW_ERROR;
	}
	while(1)
	{
		if(fgets(sBuffer, sizeof(sBuffer), fp) == NULL)
			break;
		printf("line [%s]\n",sBuffer);

		if(strncmp(sBuffer,endstr,strlen(endstr))==0)
			break;

		if(strchr(sBuffer,'|') == NULL)
			continue;
		
		serial_no=0;		
		amount=0;			
		memset(tx_date,0,sizeof(tx_date));
		memset(bankno,0,sizeof(bankno));
		memset(sBankrefno,0,sizeof sBankrefno);
		memset(sSerialNo,0,sizeof(sSerialNo));
		memset(sAmount,0,sizeof(sAmount));
		memset(stuempno,0,sizeof stuempno);

		phead=sBuffer;
		ptail=strchr(phead,'|');					//银行流水号
		if(NULL==ptail)
		{
			fclose(fp);
			return -1;
		}
		memcpy(sBankrefno,phead,ptail-phead);
		trim(sBankrefno);
		//printf("银行流水号号[%s]\n",sBankrefno);

		phead=ptail+1;
		ptail=strchr(phead,'|');					//银行卡号
		if(NULL==ptail)
		{
			fclose(fp);
			return -1;
		}
		memcpy(bankno,phead,ptail-phead);
		//printf("银行卡号[%s]\n",bankno);

		phead=ptail+1;
		ptail=strchr(phead,'|');					// 参考号
		if(NULL==ptail)
		{
			fclose(fp);
			return -1;
		}
		memcpy(sSerialNo,phead,ptail-phead);
		serial_no=atol(sSerialNo);
		//printf("参考号[%d]\n",serial_no);

		
		phead=ptail+1;
		ptail=strchr(phead,'|');					// 学工号
		if(NULL==ptail)
		{
			fclose(fp);
			return -1;
		}
		memcpy(stuempno,phead,ptail-phead);
		trim(stuempno);
		//printf("学工号[%s]\n",stuempno);

		phead=ptail+1;
		ptail=strchr(phead,'|');					// 金额
		if(NULL==ptail)
		{
			fclose(fp);
			return -1;
		}
		memcpy(sAmount,phead,ptail-phead);
		amount=atof(sAmount);
		//printf("金额[%f]\n",amount);

		phead=ptail+1;
		ptail=strchr(phead,'|');					// 日期
		if(NULL==ptail)
		{
			fclose(fp);
			return -1;
		}
		memcpy(tx_date,phead,ptail-phead);
		//printf("日期[%s]\n",tx_date);

		memset(&tbankchkdtl,0,sizeof(tbankchkdtl));
		des2src(tbankchkdtl.transdate,tx_date);										//日期
		sprintf(tbankchkdtl.refno,"%8s%06d",tbankchkdtl.transdate,serial_no);		//参考号
		des2src(tbankchkdtl.bankcardno,bankno);										// 银行卡号
		des2src(tbankchkdtl.stuempno,stuempno);										//学工号
		tbankchkdtl.amount=amount;													//交易金额
		SQLCODE=0;
		ret=DB_t_bankchkdtl_add(&tbankchkdtl);
		if(ret!=0&&ret!=DB_REPEAT)
		{
			fclose(fp);
			return E_DB_BANK_CHKACC_I;
		}		
	}
	fclose(fp);
	ret=db_commit();
	if(ret)
		return E_DB_COMMIT;
	ret=startaccchk(checkdate);
	if(ret)
	{
		db_rollback();
		return ret;
	}
	ret=db_commit();
	if(ret)
		return E_DB_COMMIT;
	return 0;
}

int main(int argc,char *argv[])
{
	int ret=0;
	int cnt=0;
	char *p = NULL;
	char dbname[256]="";
	char dbuser[256]="";
	char dbpwd[256]="";
	char chkdate[9] = "";
	char sysdate[9]="";
	char filepath[256]="";


	openlog("COL_SERI",LOG_PID|LOG_CONS|LOG_NDELAY,LOG_LOCAL4);
	//打开数据库连接
	p=getenv("YKT_DBNAME");
	if(p==NULL)
	{
		perror("get ENV VAR YKT_DBNAME ERR\n");
		writelog(LOG_ERR,"get ENV VAR YKT_DBNAME ERR");
		exit(1);
	}
	des2src(dbname,p);
	p=getenv("YKT_USER");
	if(p==NULL)
	{
		perror("get ENV VAR YKT_USER ERR\n");
		writelog(LOG_ERR,"get ENV VAR YKT_USER ERR");
		exit(2);
	}
	des2src(dbuser,p);
	p=getenv("YKT_PWD");
	if(p==NULL)
	{
		perror("get ENV VAR YKT_PWD ERR\n");
		writelog(LOG_ERR,"get ENV VAR YKT_PWD ERR");
		exit(3);
	}
	des2src(dbpwd,p);

	while(1)
	{
		ret=db_connect(dbname,dbuser,dbpwd);
		if(ret)
		{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			writelog(LOG_ERR,"connect to database err dbname[%s]",dbname);
			sleep(10);
			if(cnt<=3)
			{
				cnt++;
				continue;
			}
			else
			{
				printf("连接数据库失败!\n");
		      		return(-100);
			}
	   	}
		else
		{
			printf("连接数据库成功!\n");
			break;
		}
	}

	getsysdate(sysdate);
	
	if(argc !=3)
	{
		printf("格式错误\n");
		printf("usage:	load_acccheck checkdate chkfilepath\n");
		goto L_RET;
	}
	else
	{
		if(IsInvalidDateTime(argv[1],"YYYYMMDD"))
		{	
			printf("日期格式输入错误,有效格式为:	YYYYMMDD\n ");
			goto L_RET;
		}
		if(strncmp(argv[1],sysdate,8)>0)
		{
			printf("对账日期[%s]比当前日期[%s]大",argv[1],sysdate);
			goto L_RET;
		}
		des2src(chkdate, argv[1]);

		des2src(filepath, argv[2]);
	}
	
	printf("圈存对账参数:时间[%s]，文件路径[%s]\n",chkdate,filepath);
	ret=bank_accchk(chkdate,filepath);
	if(ret)
	{
		printf("bank_accchk ret[%d]",ret);
		goto L_RET;
	}

	printf("圈存对账执行成功!\n");
L_RET:
	db_disconnect();
	closelog();
	return 0;
}
