/* --------------------------------------------
 * 创建日期: 2008-09-16
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能: 操作员现金报表查询
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "acctrans.h"
ESQL #include "busqc.h"
ESQL #include <string>
ESQL #include <sstream>
ESQL using namespace std;
EXEC SQL INCLUDE SQLCA;

int F846703(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
		EXEC SQL BEGIN DECLARE SECTION;
		char		 accdate[9]="";//业务日期
		sqlint32 branchno=0;//网点号
		char		 opercode[9]="";//操作员号
		char    subjno[21]="";//科目号
		sqlint32 transtype=0;//交易类型
		char		 summary[61]="";//摘要
		sqlint32 transcnt=0;//交易次数
		double inamt=0;//收入
		double outamt=0;//支出
		double amount=0;//结存金额
		char    branchname[241]="";//网点名
		char    opername[61]="";//科目号
		sqlint16 indicator=0;
		char		 h_sqlcmd[2048]="";
		EXEC SQL END DECLARE SECTION;
		
		int ret = 0;
		int row = 0;
		char lastopercode[9]="";
		char lastsubjno[21]="";
		ST_CPACK aPack;
		ST_PACK *outPack = &(aPack.pack);
		ResetNormalCPack(&aPack,0,1);
		SetCol(handle,F_SDATE3,F_LBANK_ACC_TYPE2,F_SEMP_NO,F_SALL_NAME,F_VSVARSTR2,
									F_SCUST_AUTH,F_SNOTE,
									F_LVOL0,F_DAMT1,F_DAMT2,0);
		char		 accdate1[9]="";//业务日期
		char		 accdate2[9]="";//业务日期
		des2src(accdate1,rPack->sdate1);
		des2src(accdate2,rPack->sdate2);
		branchno=rPack->lbank_acc_type2;
		des2src(opercode,rPack->semp_no);
		des2src(summary,rPack->snote);
		transtype=rPack->lbank_acc_type;
		int subjtype=rPack->lvol1;
		CAccTrans *pAccTrans=CAccTrans::getInstance();
		
		stringstream sql;
		sql<<"SELECT ";
		sql<<"t.accdate,";
		sql<<"t.branchno,";
		sql<<"t.opercode,";
		sql<<"t.subjno,";
		sql<<"t.transtype,";
		sql<<"t.summary,";
		sql<<"t.transcnt,";
		sql<<"t.inamt,";
		sql<<"t.outamt,";
		sql<<"t.amount,";
		sql<<"a.branchname,";
		sql<<"b.opername ";
		sql<<" FROM ykt_cur.t_rptopercash t,ykt_cur.t_branch a,ykt_cur.t_operator b ";
		sql<<" WHERE t.branchno=a.branchno and t.opercode = b.opercode ";
		if(strlen(accdate1))
				sql<<" and t.accdate >= '"<<accdate1<<"'";
		if(strlen(accdate2))
				sql<<" and t.accdate <= '"<<accdate2<<"'";
		if(strlen(accdate1)==0&&strlen(accdate2)==0)
				sql<<" and t.accdate = '"<<pAccTrans->sysPara.sSettleDate<<"'";
		if(branchno)
				sql<<" and t.branchno="<<branchno;
		if(strlen(opercode))
				sql<<" and t.opercode = '"<<opercode<<"'";
		if(strlen(summary))
				sql<<" and t.summary = '"<<summary<<"'";
		if(transtype)
				sql<<" and t.transtype = "<<transtype;		
		if(1==subjtype)
				sql<<" and t.subjno='1001' ";
		else if(2==subjtype)
				sql<<" and t.subjno like '1121%' ";
		sql<<" order by t.accdate,t.branchno,t.opercode,t.subjno,t.summary";
		strcpy(h_sqlcmd,sql.str().c_str());
		EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
		if(SQLCODE)
		{
				CHECK_DB_ERR;
				return E_DB_PREPARE;
		}
		EXEC SQL DECLARE rptopercashledger_cur CURSOR FOR query_stmt;
		if(SQLCODE)
		{
				CHECK_DB_ERR;
				return E_DB_CURSOR_DECLARE;
		}
		EXEC SQL	OPEN rptopercashledger_cur;
		if(SQLCODE)
		{
				CHECK_DB_ERR;
				return E_DB_CURSOR_OPEN;
		}
		while(1)
		{
				accdate[0]=0;
				branchno=0;
				opercode[0]=0;
				subjno[0]=0;
				transtype=0;
				summary[0]=0;
				transcnt=0;
				inamt=0;
				outamt=0;
				amount=0;
				branchname[0]=0;
				opername[0]=0;
				memset(outPack,0,sizeof(ST_PACK));
				EXEC SQL FETCH rptopercashledger_cur INTO
				:accdate:indicator,
				:branchno:indicator,
				:opercode:indicator,
				:subjno:indicator,
				:transtype:indicator,
				:summary:indicator,
				:transcnt:indicator,
				:inamt:indicator,
				:outamt:indicator,
				:amount:indicator,
				:branchname:indicator,
				:opername:indicator;
				ret=SQLCODE;
				if(ret)
				{
					CHECK_DB_ERR;
					EXEC SQL CLOSE rptopercashledger_cur;
					if(DB_NOTFOUND==ret)
					{
							break;
					}
					else
						return E_DB_RPTOPERCASHLEDGER_R;
				}
				row++;
				des2src(outPack->sdate3,accdate);
				outPack->lbank_acc_type2=branchno;
				des2src(outPack->semp_no,opercode);
				des2src(outPack->scust_auth,subjno);
				des2src(outPack->snote,summary);
				des2src(outPack->vsvarstr2,branchname);
				des2src(outPack->sall_name,opername);
				outPack->lvol0=transcnt;
				outPack->damt1=inamt;
				outPack->damt2=outamt;
				PutRow(handle,outPack,pRetCode,szMsg);
		}		
		return 0;
}
