/* --------------------------------------------
 * 程序名称: col_seri.sqc
 * 创建日期: 2008/08/11
 * 程序作者: 王彦兵
 * 版本信息: 1.0.0.0
 * 程序功能:  自动采集当天丢失流水
 * --------------------------------------------*/
#define _IN_SQC_
ESQL #include <stdio.h>
ESQL #include <string.h>
ESQL #include "pubdef.h"
ESQL #include "errdef.h"
ESQL #include "pubfunc.h"
ESQL #include "pubdb.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "fdsqc.h"

EXEC SQL INCLUDE SQLCA;	


int collect_serial(char *begindate,char *enddate)
{
        EXEC SQL BEGIN DECLARE SECTION;
              sqlint32   hi_seri=0;
		sqlint16   indr =0;
		char    	h_devicehpyid[8+1]="";
		char 	h_enddate[11] ="";
		char 	h_sqlcmd[1024]="";
        EXEC SQL END DECLARE SECTION;
		
	int ret = 0;
       T_t_tif_meslist tMesList;
	T_t_pif_device tDevice;
	int row =0;
	
//	getsysdate(h_sysdate);
	
	writelog(LOG_DEBUG,"采集设备丢失的流水");
	sprintf(h_sqlcmd,"select device_id,o.orn+t.S-1 serial \
  		from ( \
   			 select rownum orn \
      			 from YKT_CUR.T_PIF_ERRCODE \
      			where rownum <= 100) o \
    		join ( \
      			select s,e,tx_date,tx_time,device_id \
        		from ( \
          			select  \
          			sum(serial_no) over (PARTITION BY device_id order by device_id,serial_no rows between 1 preceding and 0 following )- serial_no+1 as S,  \
           			 serial_no-1 as E,tx_date,tx_time,device_id \
            			from YKT_CUR.T_TIF_RCVDTL  \
            		where  \
            		tx_date>='%s' and tx_date <= '%s' and serial_no<=999999) t \
       	 where E-S+1>0 and E-S+1<100 and s>1) t \
    		on o.orn<=e-s+1 \
  		order by device_id,o.orn+t.S-1",begindate,enddate);

	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if( SQLCODE )
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_CURSOR_DECLARE;
	}

	EXEC SQL DECLARE col_seri_cur CURSOR FOR query_stmt;
	if( SQLCODE )
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_CURSOR_DECLARE;
	}
	
	EXEC SQL OPEN col_seri_cur;
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_CURSOR_OPEN;
	}
	
	while(1)
	{
		hi_seri= 0;
		memset(h_devicehpyid,0,sizeof(h_devicehpyid));
		EXEC SQL FETCH col_seri_cur INTO :h_devicehpyid:indr,:hi_seri:indr;
		if(SQLCODE)
		{
			ret = SQLCODE;
			db_chk_err(__FILE__,__LINE__,&sqlca);
			EXEC SQL CLOSE col_seri_cur;
			if(DB_NOTFOUND==ret)
				break;
			else
				return E_DB_CURSOR_FETCH;
		}		

		memset(&tMesList,0,sizeof(tMesList));
		memset(&tDevice,0,sizeof tDevice);

		if(strlen(h_devicehpyid)==0)
		{
			writelog(LOG_ERR,"终端设备物理ID为空");
			continue;
		}

		if((ret = get_devinfo_by_phyid(h_devicehpyid,&tDevice)))
		{
			writelog(LOG_ERR,"查询设备表错误");
			continue;
		}
		
		AddXmlItemInt(tMesList.incontent,XML_KEY_STARTNUM,hi_seri);
		AddXmlItemInt(tMesList.incontent,XML_KEY_ENDNUM,hi_seri);
		
		tMesList.devid = tDevice.device_id;
		tMesList.funid = 930016;
		tMesList.level = 1;
		ret=AddMsgLst(&tMesList);
		if(ret)
		{
			writelog(LOG_ERR,"AddMsgLst err[%d]",ret);
			continue;
		}
				
		row++;
	}
	writelog(LOG_DEBUG,"collect serial rows:%d",row);
	return 0;
}

int main(int argc,char *argv[])
{
	int ret=0;
	char *p = NULL;
	char dbname[256]="";
	char dbuser[256]="";
	char dbpwd[256]="";
	char begindate[11] = "";
	char enddate[11] = "";
	int cnt = 0;


	openlog("COL_SERI",LOG_PID|LOG_CONS|LOG_NDELAY,LOG_LOCAL4);
	//打开数据库连接
	p=getenv("YKT_DBNAME");
	if(p==NULL)
	{
		perror("get ENV VAR YKT_DBNAME ERR\n");
		writelog(LOG_ERR,"get ENV VAR YKT_DBNAME ERR");
		exit(1);
	}
	des2src(dbname,p);
	p=getenv("YKT_USER");
	if(p==NULL)
	{
		perror("get ENV VAR YKT_USER ERR\n");
		writelog(LOG_ERR,"get ENV VAR YKT_USER ERR");
		exit(2);
	}
	des2src(dbuser,p);
	p=getenv("YKT_PWD");
	if(p==NULL)
	{
		perror("get ENV VAR YKT_PWD ERR\n");
		writelog(LOG_ERR,"get ENV VAR YKT_PWD ERR");
		exit(3);
	}
	des2src(dbpwd,p);

	while(1)
	{
		ret=db_connect(dbname,dbuser,dbpwd);
		if(ret)
		{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			writelog(LOG_ERR,"connect to database err dbname[%s]",dbname);
			sleep(10);
			if(cnt<=3)
			{
				cnt++;
				continue;
			}
			else
			{
				printf("连接数据库失败!\n");
		      		return(-100);
			}
	   	}
		else
		{
			printf("连接数据库成功!\n");
			break;
		}
	}

	if(argc <=1)
	{
		getsysdate(begindate);
		des2src(enddate, begindate);
	}
	else if (argc == 2)
	{
		des2src(begindate, argv[1]);
		des2src(enddate, argv[1]);
	}
	else if( argc ==3)
	{
		des2src(begindate, argv[1]);
		des2src(enddate, argv[2]);
	}
	else
	{
		printf("格式错误\n");
		printf("usage:	col_seri date	or col_seri begindate enddate");
		db_disconnect();
		closelog();
		return -1;
	}
	ret=collect_serial(begindate,enddate);
	if(ret)
	{
		writelog(LOG_ERR,"collect_serial ret[%d]",ret);
	}
	
	db_disconnect();
	closelog();
	return 0;
}
