/* --------------------------------------------
 * 创建日期: 2008-06-30
 * 程序作者:
 * 版本信息: 1.0.0.0
 * 程序功能: 一卡通旧卡转账交易接口
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "busqc.h"
ESQL #include "acctrans.h"
EXEC SQL INCLUDE SQLCA;

static int doCard(TRANS& trans,T_t_card& tCard)
{
	int ret=0;

	ret=DB_t_card_read_by_cardno(trans.cardno,&tCard);
	if(ret)
	{
		writelog(LOG_ERR,"cardno[%d]",trans.cardno);
		if(DB_NOTFOUND==ret)
			return E_NOTEXIST_CARDNO;
		else 
			return E_DB_CARD_R;
	}
	trans.cardtype=tCard.cardtype;
	trans.feetype=tCard.feetype;
	if(tCard.status[0]!=STATUS_NORMAL)
	{
		return ERRINFO(E_CARD_LOGOUT,trans.cardno);
	}	
	if('1'==tCard.lockflag[0])
	{
		ERRTIP("请将该卡注销");
		return ERRINFO(E_CARDNO_LOCKED,trans.cardno);
	}
	if('1'==tCard.frozeflag[0])
	{
		return ERRINFO(E_CARD_FREEZE,trans.cardno);
	}
	if('1'==tCard.lossflag[0])
	{
		return ERRINFO(E_CARD_LOST,trans.cardno);
	}	
	if('1'==tCard.badflag[0])
	{
		return ERRINFO(E_CARD_BADRECORD,trans.cardno);
	}	
	//比较卡物理ID是否相同
	if(strcmp(tCard.cardphyid,trans.cardphyid)!=0)
	{
		writelog(LOG_ERR,"db cardphyid[%s],input cardphyid[%s]",tCard.cardphyid,trans.cardphyid);
		return E_CARD_PHYNO_DIFFER;
	}
	//检查卡的有效期
	if(strcmp(tCard.expiredate,trans.transdate)<=0)
		return E_CARD_EXPIRED;
	return 0;
}

int F846329(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	int ret=0;
	CAccTrans *pAccTrans=CAccTrans::getInstance();
	des2src(pAccTrans->trans.opercode,rPack->semp);
	pAccTrans->trans.termid=rPack->lwithdraw_flag;
	pAccTrans->trans.transcode=TC_CARD2CARTRANS;
	if(0==rPack->lbank_acc_type)
	{
		ret=pAccTrans->InitTrans();
		if(ret)
			return ret;			
	}
	TRANS& trans=pAccTrans->trans;
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);	

	ResetNormalCPack(&aPack,0,1);

		
	SetCol(handle,0);

	trans.cardflag=1;
	trans.usecardflag=1;	
	trans.cardno=rPack->lvol0;	
	trans.purseno=PURSE_NO_ONE;
	trans.dpscnt=rPack->lvol6+1;
	trans.cardbefbal=rPack->lvol7/100.0;
	trans.cardaftbal=trans.cardbefbal;
	des2src(trans.cardphyid,rPack->sstation1);
	des2src(trans.voucherno,rPack->scust_auth);
	trans.inputamt=rPack->lsafe_level/100.0;
	trans.unusedamt = trans.inputamt;
	T_t_card tCard;
	memset(&tCard,0,sizeof(tCard));
	ret=doCard(trans,tCard);
	if(ret)
	{
		return ret;
	}
	trans.feetype=tCard.feetype;
	trans.cardtype=tCard.cardtype;
	T_t_account tCardAccount;	
	memset(&tCardAccount,0,sizeof(tCardAccount));
	ret=DB_t_account_read_by_accno(tCard.accno,&tCardAccount);
	if(ret)
	{
		if(DB_NOTFOUND==ret)
			return ERRINFO(E_NOTEXIST_CARDACCNO,tCard.accno);
		else 
			return E_DB_ACCOUNT_R;
	}
	if(tCardAccount.status[0]!=STATUS_NORMAL)
	{
		return ERRINFO(E_CARDACC_LOGOUT,tCardAccount.accno);
	}
	double CardMaxBal=0;
	ret=GetPurseMaxBal(PURSE_NO_ONE,CardMaxBal);
	if(ret)
		return ret;
	if(amtcmp(trans.inputamt+trans.cardbefbal,CardMaxBal)>=0)
		return ERRINFO(E_AMT_EXCEED_MAX,CardMaxBal);
	trans.custid=tCard.custid;
    des2src(trans.cardaccno,tCardAccount.accno);
	if(0==rPack->lbank_acc_type)
	{
		ret=pAccTrans->doMainTrans();
		if(ret)
			return ret;
		ret=pAccTrans->doTransEnd();
		if(ret)
			return ret; 
		//业务结束后，回滚事务
		ret=db_rollback();
		if(ret)
		{
			writelog(LOG_ERR,"db_rollback error,error code=[%d]",ret);
			return E_DB_ROLLBACK;
		}
		//重新取流水号
		ret=pAccTrans->GetTermSeqno();
		if(ret)
		{
			writelog(LOG_ERR,"GetTermSeqno error,error code=[%d]",ret);
			return ret;
		}
	
		T_t_transdtl transdtl;
		memset(&transdtl,0,sizeof(transdtl));

		des2src(transdtl.transdate,trans.transdate);
		des2src(transdtl.transtime,trans.transtime);
		strcpy(transdtl.accdate,trans.accdate);
		strcpy(transdtl.acctime,trans.acctime);
		transdtl.termid=trans.termid;
		transdtl.termseqno=trans.termseqno;
		transdtl.transcode=trans.transcode;
		transdtl.paytype=trans.fundtype;
		des2src(transdtl.voucherno,trans.voucherno);
		transdtl.cardno=trans.cardno;
		transdtl.purseno=trans.purseno;
		transdtl.cardcnt=trans.dpscnt;
		transdtl.transflag = TF_PAY;
		transdtl.cardbefbal=trans.cardbefbal;
	    transdtl.amount=trans.totaltransamt;
		transdtl.managefee=trans.totalfeeamt;
		transdtl.cardaftbal=trans.cardaftbal;
		transdtl.custid=tCardAccount.custid;
		des2src(transdtl.custname,tCardAccount.accname);
		des2src(transdtl.opercode,trans.opercode);
	    des2src(transdtl.showcardno,tCard.showcardno);
		transdtl.status[0]=DTLSTATUS_FAIL;
		transdtl.exttype=EXTTYPE_OLDCARD;
		sprintf(transdtl.extdata,"%d",rPack->lvol1);
		GetStuempnoByCustid(transdtl.custid,transdtl.stuempno);
		ret=DB_t_transdtl_add(&transdtl);
		if(ret)
		{
		  if(DB_REPEAT==ret)
		    return E_DB_TRANSDTL_E;
		  else
		    return E_DB_TRANSDTL_I;
		}		
		SetCol(handle,F_LVOL0,F_LVOL8,F_SDATE0,
			F_SDATE3,F_SEMP,F_LWITHDRAW_FLAG,F_LSERIAL1,F_VSMESS,0);	
		outPack->lvol0=tCard.cardno;
		outPack->lvol8=D4U5(pAccTrans->trans.cardaftbal*100,0);
		des2src(outPack->sdate3,pAccTrans->trans.accdate);
		des2src(outPack->semp,trans.opercode);
		outPack->lwithdraw_flag=trans.termid;
		outPack->lserial1=trans.termseqno;
		des2src(outPack->vsmess,trans.remark);
		PutRow(handle,outPack,pRetCode,szMsg);
		writelog(LOG_INFO,"卡卡转账模拟入账成功");		
	}
	else
	{
		//正式入账
		T_t_transdtl transdtl;
		memset(&transdtl,0,sizeof(transdtl));
		pAccTrans->trans.termseqno=rPack->lserial1;
		ret=DB_t_transdtl_read_lock_by_c0_and_accdate_and_termid_and_termseqno(pAccTrans->trans.accdate,trans.termid,pAccTrans->trans.termseqno, &transdtl);
		if(ret)
		{
			writelog(LOG_ERR,"DB_t_transdtl_read_lock_by_c0_and_accdate_and_termid_and_termseqno error,error code=[%d],serial_no=[%d]",ret,rPack->lserial1);
			if(DB_NOTFOUND==ret)
				return E_DB_TRANSDTL_N;
			else
				return E_DB_TRANSDTL_R;
		}
		ret=pAccTrans->InitTrans();
		if(ret)
		{
			DB_t_transdtl_free_lock_by_c0();
			return ret;
		}
		des2src(trans.cardaccno,tCardAccount.accno);			//贷方帐户,持卡人账户
		trans.cardflag=1;
		trans.usecardflag=1;
		trans.feetype=tCard.feetype;
		trans.cardtype=tCard.cardtype;
		trans.cardbefbal=transdtl.cardbefbal;
		trans.dpscnt=transdtl.cardcnt;
		trans.cardaftbal=trans.cardbefbal;
/*		
		ret=UpdateCardBitmap(trans.cardno,trans.cardcnt,CARDBITMAPTYPE_INC,0);
		if(ret)
		{
			DB_t_transdtl_free_lock_by_c0();
			return ret;
		}
*/
		ret=pAccTrans->doMainTrans();
		if(ret)
		{
			DB_t_transdtl_free_lock_by_c0();
			return ret;
		}
		ret=pAccTrans->doTransEnd();
		if(ret)
		{
			DB_t_transdtl_free_lock_by_c0();
			return ret;
		}
		//结束填充流水数据
		transdtl.cardaftbal=trans.cardaftbal;
		transdtl.status[0]=DTLSTATUS_SUCCESS;
		ret=DB_t_transdtl_update_lock_by_c0(&transdtl);
		if(ret)
		{
			writelog(LOG_ERR,"DB_t_transdtl_update_lock_by_c0 error,error code=[%d]",ret);
			return E_DB_TRANSDTL_U;
		}
		SetCol(handle,F_LVOL0,F_LVOL8,F_SDATE0,
			F_SDATE3,F_SEMP,F_LWITHDRAW_FLAG,F_LSERIAL1,F_VSMESS,0);	
		outPack->lvol0=tCard.cardno;
		outPack->lvol8=D4U5(pAccTrans->trans.cardaftbal*100,0);
		des2src(outPack->sdate3,pAccTrans->trans.accdate);
		des2src(outPack->semp,trans.opercode);
		outPack->lwithdraw_flag=trans.termid;
		outPack->lserial1=trans.termseqno;
		sprintf(trans.remark,"%s卡余额%.2lf元",pAccTrans->remark.c_str(),pAccTrans->trans.cardaftbal);
		des2src(outPack->vsmess,trans.remark);
		PutRow(handle,outPack,pRetCode,szMsg);
		writelog(LOG_INFO,"卡卡转账成功");
	}
	return 0;
}
