/* --------------------------------------------
 * 创建日期: 2008-06-02
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能: 网络帐户已开户客户信息查询
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "busqc.h"
ESQL #include "acctrans.h"
ESQL #include <string>
ESQL #include <sstream>
ESQL using namespace std;
EXEC SQL INCLUDE SQLCA;


int F846603(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 custid=0;
	char	 stuempno[31]="";
	sqlint32 custtype=0;
	char	 custname[61]="";
	sqlint32 feetype=0;
	char	 areacode[3]="";
	char	 deptcode[31]="";
	char	 deptfullname[1001]="";
	char	 specialtycode[31]="";
	char	 classname[61]="";
	char	 idtype[2]="";
	char	 idno[61]="";
	char	 sex[2]="";
	char	 country[4]="";
	char	 nation[3]="";
	char	 email[61]="";
	char	 tel[31]="";
	char	 mobile[31]="";
	char	 addr[241]="";
	char	 zipcode[7]="";
	char	 custattr[11]="";
	char	 opendate[9]="";
	char	 accno[21]="";
	double   balance=0;
	double   availbal=0;
	double   frozebal=0;
	char	 lasttransdate[31]="";
	char	 stoppayflag[2]="";
	sqlint16 indicator=0;
	char 	h_sqlcmd[2048]="";
	EXEC SQL END DECLARE SECTION;
	
//	CAccTrans *pAccTrans=CAccTrans::getInstance();
//	pAccTrans->trans.transcode=TC_EACCQRY;	
//	pAccTrans->clear();
//	GetCpackDataString(rPack,pAccTrans->cpackdata);
//	int ret=pAccTrans->addOperDtl(rPack->semp);
//	if(ret)
//		return ret;
	int ret=0;
	int row = 0;
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,
	F_LVOL1,F_SPAGER,F_LSAFE_LEVEL2,
		F_SALL_NAME,F_SBRANCH_CODE0,F_SCERT_NO,
		F_VSVARSTR0,F_SCERT_NO2,F_SCARD1,
		F_SMARKET_CODE2,F_SEMAIL2,F_SMARKET_CODE,
		F_SNATION_CODE,F_SCUST_TYPE2,F_SEMAIL,
		F_SPHONE,F_SPHONE2,F_SCUSTTYPES,
		F_SPOST_CODE,F_SSERIAL1,F_SDATE1,
		F_SCUST_LIMIT,F_LVOL0,F_LSAFE_LEVEL,
		F_LVOL5,F_SORDER0,F_SSTATION0,
		F_SSERIAL0,F_SDATE2,F_SDATE3,
		F_SBANK_ACC,F_LVOL3,F_DAMT0,
		F_DAMT1,F_DAMT2,F_DAMT3,
		F_DAMT4,F_DAMT5,F_LVOL6,
		F_SCUST_LIMIT2,F_LVOL10,F_SCUST_TYPE,0);

	custid=rPack->lvol1;
	des2src(stuempno,rPack->spager);
	custtype=rPack->lsafe_level2;
	des2src(custname,rPack->sall_name);
	des2src(areacode,rPack->sbranch_code0);
	des2src(deptcode,rPack->scert_no);
	des2src(deptfullname,rPack->vsvarstr0);
	des2src(specialtycode,rPack->scert_no2);
	des2src(classname,rPack->scard1);
	des2src(idtype,rPack->smarket_code);
	des2src(idno,rPack->semail2);
	des2src(sex,rPack->smarket_code2);
	des2src(country,rPack->snation_code);
	des2src(nation,rPack->scust_type2);
	des2src(email,rPack->semail);
	des2src(tel,rPack->sphone);
	des2src(mobile,rPack->sphone2);
	des2src(addr,rPack->scusttypes);
	des2src(zipcode,rPack->spost_code);
	des2src(custattr,rPack->sserial1);
	des2src(opendate,rPack->sdate1);
	des2src(stoppayflag,rPack->scust_type);
	des2src(accno,rPack->sbank_acc);
	des2src(lasttransdate,rPack->scust_limit2);
	stringstream sql;

	sql<<"SELECT ";
	sql<<"a.custid,";
	sql<<"a.stuempno,";
	sql<<"a.custtype,";
	sql<<"a.feetype,";
	sql<<"a.custname,";
	sql<<"a.areacode,";
	sql<<"a.deptcode,";
	sql<<"d.deptfullname,";
	sql<<"a.specialtycode,";
	sql<<"a.classname,";
	sql<<"a.idtype,";
	sql<<"a.idno,";
	sql<<"a.sex,";
	sql<<"a.country,";
	sql<<"a.nation,";
	sql<<"a.email,";
	sql<<"a.tel,";
	sql<<"a.mobile,";
	sql<<"a.addr,";
	sql<<"a.zipcode,";
	sql<<"a.custattr,";
	sql<<"c.accno,";
	sql<<"c.opendate,";
	sql<<"c.stoppayflag,";
	sql<<"c.balance,";
	sql<<"c.availbal,";
	sql<<"c.frozebal,";
	sql<<"c.lasttransdate";
	sql<<" FROM ykt_cur.t_customer a inner join ykt_cur.t_netacc c on(a.custid=c.custid) left join ykt_cur.t_dept d on (a.deptcode=d.deptcode) ";
	sql<<" WHERE  a.status='1' and a.eaccflag='1' ";
	if(custid)
		sql<<" and a.custid="<<custid;
	if(strlen(stuempno))
		sql<<" and a.stuempno like '"<<stuempno<<"'";
	if(custtype)
		sql<<" and a.custtype="<<custtype;
	if(strlen(custname))
		sql<<" and a.custname like '"<<custname<<"'";
	if(feetype)
		sql<<" and a.feetype="<<feetype;
	if(strlen(areacode))
		sql<<" and a.areacode = '"<<areacode<<"'";
	if(strlen(deptcode))
		sql<<" and a.deptcode like '"<<deptcode<<"'";
	if(strlen(deptfullname))
		sql<<" and d.deptfullname like '"<<deptfullname<<"'";
	if(strlen(specialtycode))
		sql<<" and a.specialtycode like '"<<specialtycode<<"'";
	if(strlen(classname))
		sql<<" and a.classname like '"<<classname<<"'";
	if(strlen(idtype))
		sql<<" and a.idtype = '"<<idtype<<"'";
	if(strlen(idno))
		sql<<" and a.idno = '"<<idno<<"'";
	if(strlen(sex))
		sql<<" and a.sex = '"<<sex<<"'";
	if(strlen(country))
		sql<<" and a.country = '"<<country<<"'";
	if(strlen(nation))
		sql<<" and a.nation = '"<<nation<<"'";
	if(strlen(email))
		sql<<" and a.email like '"<<email<<"'";
	if(strlen(tel))
		sql<<" and a.tel like '"<<tel<<"'";
	if(strlen(mobile))
		sql<<" and a.mobile like '"<<mobile<<"'";
	if(strlen(addr))
		sql<<" and a.addr like '"<<addr<<"'";
	if(strlen(zipcode))
		sql<<" and a.zipcode like '"<<zipcode<<"'";
	if(strlen(custattr))
		sql<<" and a.custattr = '"<<custattr<<"'";
	if(strlen(opendate))
		sql<<" and c.opendate like '"<<opendate<<"'";
	if(strlen(accno))
		sql<<" and c.accno like '"<<accno<<"'";
	if(strlen(lasttransdate))
		sql<<" and c.lasttransdate = '"<<lasttransdate<<"'";
	if(strlen(stoppayflag))
		sql<<" and c.stoppayflag = '"<<stoppayflag<<"'";
	strcpy(h_sqlcmd,sql.str().c_str());
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		writelog(LOG_ERR,"sql:%s",h_sqlcmd);
		CHECK_DB_ERR;
		return E_DB_PREPARE;
	}
	EXEC SQL DECLARE customer_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_DECLARE;
	}
	EXEC SQL  OPEN customer_cur;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_OPEN;
	}
	while(1)
	{
		custid=0;
		stuempno[0]=0;
		custtype=0;
		feetype=0;
		custname[0]=0;
		areacode[0]=0;
		deptcode[0]=0;
		deptfullname[0]=0;
		specialtycode[0]=0;
		classname[0]=0;
		idtype[0]=0;
		idno[0]=0;
		sex[0]=0;
		country[0]=0;
		nation[0]=0;
		email[0]=0;
		tel[0]=0;
		mobile[0]=0;
		addr[0]=0;
		zipcode[0]=0;
		custattr[0]=0;
		accno[0]=0;
		opendate[0]=0;
		stoppayflag[0]=0;
		balance=0;
		availbal=0;
		frozebal=0;
		lasttransdate[0]=0;
		EXEC SQL FETCH customer_cur INTO
		:custid:indicator,
		:stuempno:indicator,
		:custtype:indicator,
		:feetype:indicator,
		:custname:indicator,
		:areacode:indicator,
		:deptcode:indicator,
		:deptfullname:indicator,
		:specialtycode:indicator,
		:classname:indicator,
		:idtype:indicator,
		:idno:indicator,
		:sex:indicator,
		:country:indicator,
		:nation:indicator,
		:email:indicator,
		:tel:indicator,
		:mobile:indicator,
		:addr:indicator,
		:zipcode:indicator,
		:custattr:indicator,
		:accno:indicator,
		:opendate:indicator,
		:stoppayflag:indicator,
		:balance:indicator,
		:availbal:indicator,
		:frozebal:indicator,
		:lasttransdate:indicator;
		ret=SQLCODE;
		if(ret)
		{
		  CHECK_DB_ERR;
		  EXEC SQL CLOSE customer_cur;
		  if(DB_NOTFOUND==ret)
		  {
			if(row)
			  break;
			else
			  return E_DB_CUSTOMER_N;
		  }
		  else
			return E_DB_CUSTOMER_R;
		}
		row++;
		outPack->lvol1=custid;
		des2src(outPack->spager,stuempno);
		outPack->lsafe_level2=custtype;
		outPack->lvol5=feetype;
		des2src(outPack->sall_name,custname);
		des2src(outPack->sbranch_code0,areacode);
		des2src(outPack->scert_no,deptcode);
		des2src(outPack->vsvarstr0,deptfullname);
		des2src(outPack->scert_no2,specialtycode);
		des2src(outPack->scard1,classname);
		des2src(outPack->smarket_code,idtype);
		des2src(outPack->semail2,idno);
		des2src(outPack->smarket_code2,sex);
		des2src(outPack->snation_code,country);
		des2src(outPack->scust_type2,nation);
		des2src(outPack->semail,email);
		des2src(outPack->sphone,tel);
		des2src(outPack->sphone2,mobile);
		des2src(outPack->scusttypes,addr);
		des2src(outPack->spost_code,zipcode);
		des2src(outPack->sserial1,custattr);
		des2src(outPack->sbank_acc,accno);
		des2src(outPack->sdate1,opendate);		
		des2src(outPack->scust_type,stoppayflag);		
		outPack->damt0=balance;
		outPack->damt1=availbal;
		outPack->damt2=frozebal;
		des2src(outPack->scust_limit2,lasttransdate);
		PutRow(handle,outPack,pRetCode,szMsg);
		if(row%9==0)
		   AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
}

