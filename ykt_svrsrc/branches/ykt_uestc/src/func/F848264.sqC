/* --------------------------------------------
 * 程序名称: F848264.sqc
 * 创建日期: 2007-04-03
 * 程序作者: 汤成
 * 版本信息: 1.0.0.0
 * 程序功能:门禁机操作员查询
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/
#define _IN_SQC_
ESQL #include <string.h>
ESQL #include <stdio.h>
ESQL #include "pubfunc.h"
ESQL #include "pubdb.h"
ESQL #include "pubdef.h"
ESQL #include "errdef.h"
ESQL #include "dbfunc.h"
ESQL #include "fdsqc.h"
ESQL #include "dbfunc_foo.h"

static int Read848264(TRUSERID *handle,int iRequest,ST_PACK *in_pack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 ho_devid;
	char ho_devname[151] = "";
	char ho_devphyid[9] = "";
	sqlint16 ho_indr = 1;
	char sqlcmd[1024] = "";
	EXEC SQL END DECLARE SECTION;
	char sqltmp[128];
	int rows;
	int ret;
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	if(strlen(in_pack->semp) < 1)
	{
		return E_INPUT_ERROR;
	}
	sprintf(sqlcmd,"SELECT D.DEVICE_ID,D.DEVICE_NAME ,D.devphy999_id  \
	FROM YKT_CUR.T_DOOR_OPER_RIGHT O,YKT_CUR.T_PIF_DEVICE D \
	WHERE D.DEVICE_ID=O.DEVICE_ID AND O.OPER_CODE='%s' AND D.STATE_ID<%d "
	,in_pack->semp,DEVISTAT_LOGOUT);

	if(strlen(in_pack->scust_auth) > 0)
	{
		sprintf(sqltmp," AND D.DEVICE_NAME LIKE '%s%%' ",in_pack->scust_auth);
		strcat(sqlcmd,sqltmp);
	}

	if(strlen(in_pack->sbank_pwd2)>0)
	{
		sprintf(sqltmp," AND D.DEVPHY999_ID LIKE '%%%s%%' ",in_pack->sbank_pwd2);
		strcat(sqlcmd,sqltmp);
	}
	if(strlen(in_pack->sbank_code) > 0)
	{
		sprintf(sqltmp," AND D.DEVTYPE='%s' ",in_pack->sbank_code);
		strcat(sqlcmd,sqltmp);
	}
	if(in_pack->lvol4 > 0)
	{
		sprintf(sqltmp," AND D.STATE_ID=%d ",in_pack->lvol4);
		strcat(sqlcmd,sqltmp);
	}
	if(in_pack->lbank_acc_type > 0)
	{
		sprintf(sqltmp," AND D.PHYTYPE=%d ",in_pack->lbank_acc_type);
		strcat(sqlcmd,sqltmp);
	}
	if(in_pack->lserial1 > 0)
	{
		sprintf(sqltmp," AND D.area=%d ",in_pack->lserial1);
		strcat(sqlcmd,sqltmp);
	}
	if(in_pack->lserial0 > 0)
	{
		sprintf(sqltmp," AND D.SUBSYSTEM_ID=%d ",in_pack->lserial0);
		strcat(sqlcmd,sqltmp);
	}
	strcat(sqlcmd," order by d.device_id");
	EXEC SQL PREPARE stmt FROM :sqlcmd;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_PREPARE;
	}
	EXEC SQL DECLARE cur CURSOR FOR stmt;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_DECLARE;
	}
	EXEC SQL OPEN cur;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_OPEN;
	}

	memset(&aPack,0,sizeof aPack);
	rows=0;
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,0);
	SetCol(handle,F_LVOL0,F_SCERT_NO,F_SBANK_PWD2,0);
	while(1)
	{
		memset(ho_devname,0,sizeof ho_devname);
		ho_devid = 0;
		memset(ho_devphyid,0,sizeof ho_devphyid);

		EXEC SQL FETCH cur INTO :ho_devid:ho_indr,:ho_devname:ho_indr,:ho_devphyid:ho_indr;
		if(SQLCODE)
		{
			ret = SQLCODE;
			CHECK_DB_ERR;
			EXEC SQL CLOSE cur;
			if(DB_NOTFOUND == ret)
			{
				if(rows > 0)
					break;
				return E_DB_DOOR_DEVICE_NO_RIGHT;
			}
			return E_DB_DOOR_OPER_RIGHT_R;
		}
		rows++;
		des2src(out_pack->scert_no,ho_devname);
		out_pack->lvol0 = ho_devid;
		des2src(out_pack->sbank_pwd2,ho_devphyid);
		PutRow(handle,out_pack,pRetCode,szMsg);
		if(rows % 20 == 0)
			AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
}

int F848264(TRUSERID *handle,int iRequest,ST_PACK *in_pack,int *pRetCode,char *szMsg)
{
	int ret = 0;
	ret = Read848264(handle,iRequest,in_pack,pRetCode,szMsg);
	if(ret)
	{
		*pRetCode=ret;
		return -1;
	}
	return 0;
}

