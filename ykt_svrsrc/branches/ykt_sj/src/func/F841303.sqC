/* --------------------------------------------
 * 程序名称: F841303.sqc
 * 创建日期: Sep 29 2004
 * 程序作者: auto creat by wen jian
 * 版本信息: 1.0.0.0
 * 程序功能: insert t_cit_student
 * --------------------------------------------
 * 修改日期: 
 * 修改人员: 
 * 修改描述: 
 * 版本信息: 
 * 备注信息: 
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "fdsqc.h"

EXEC SQL INCLUDE SQLCA;

int F841303(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char    	student_no[20+1]="";          	//学号
	sqlint32	study_state=0;                	//学生状态
	sqlint32	study_type=0;                 	//学生类别
	char    	student_name[150+1]="";        	//姓名
	char    	sex[1+1]="";                  	//性别
	sqlint32	polity=0;                     	//政治面貌
	sqlint32	nation=0;                     	//民族
	char    	idcard[20+1]="";              	//身份证号
	char    	dept_no[10+1]="";             	//院系代码
	char    	dept_code[10+1]="";           	//专业代码
	char    	register_date[10+1]="";       	//入学日期
	char    	grade[8+1]="";                	//年级
	sqlint32	study_time=0;                 	//学制
	char    	tel[20+1]="";                 	//联系电话
	char    	address[150+1]="";            	//联系地址
	char    	reg_time[26+1]="";            	//注册时间
	char    	comments[150+1]="";           	//备注
	EXEC SQL END DECLARE SECTION;

	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	ResetNormalCPack(&aPack,0,1);
#ifdef DEBUG
	writelog(LOG_DEBUG,"student_no     :scust_auth     [%s]",rPack->scust_auth);
	writelog(LOG_DEBUG,"study_type     :lvol1          [%d]",rPack->lvol1);
	writelog(LOG_DEBUG,"student_name   :sname          [%s]",rPack->sname);
	writelog(LOG_DEBUG,"sex            :scust_type     [%s]",rPack->scust_type);
	writelog(LOG_DEBUG,"polity         :lvol2          [%d]",rPack->lvol2);
	writelog(LOG_DEBUG,"nation         :lvol3          [%d]",rPack->lvol3);
	writelog(LOG_DEBUG,"idcard         :scust_limit    [%s]",rPack->scust_limit);
	writelog(LOG_DEBUG,"dept_no        :sstation0      [%s]",rPack->sstation0);
	writelog(LOG_DEBUG,"dept_code      :sstation1      [%s]",rPack->sstation1);
	writelog(LOG_DEBUG,"register_date  :scust_auth2    [%s]",rPack->scust_auth2);
	writelog(LOG_DEBUG,"grade          :sorder2        [%s]",rPack->sorder2);
	writelog(LOG_DEBUG,"study_time     :lvol0          [%d]",rPack->lvol0);
	writelog(LOG_DEBUG,"tel            :sphone         [%s]",rPack->sphone);
	writelog(LOG_DEBUG,"address        :scusttypes     [%s]",rPack->scusttypes);
	writelog(LOG_DEBUG,"comments       :ssectypes      [%s]",rPack->ssectypes);
#endif

	Strncpy_t(student_no,rPack->scust_auth,sizeof(student_no));
	study_state=STUSTAT_REGIST;
	study_type=rPack->lvol1;
	Strncpy_t(student_name,rPack->sname,sizeof(student_name));
	Strncpy_t(sex,rPack->scust_type,sizeof(sex));
	polity=rPack->lvol2;
	nation=rPack->lvol3;
	Strncpy_t(idcard,rPack->scust_limit,sizeof(idcard));
	Strncpy_t(dept_no,rPack->sstation0,sizeof(dept_no));
	Strncpy_t(dept_code,rPack->sstation1,sizeof(dept_code));
	Strncpy_t(register_date,rPack->scust_auth2,sizeof(register_date));
	Strncpy_t(grade,rPack->sorder2,sizeof(grade));
	study_time=rPack->lvol0;
	Strncpy_t(tel,rPack->sphone,sizeof(tel));
	Strncpy_t(address,rPack->scusttypes,sizeof(address));
	getsysdatetime(reg_time);
	Strncpy_t(comments,rPack->ssectypes,sizeof(comments));

	EXEC SQL INSERT INTO ykt_cur.t_cit_student (
 student_no,study_state,study_type,student_name,sex,polity,nation,idcard,dept_no,dept_code,register_date,grade,study_time,tel,address,reg_time,comments)
	VALUES(:student_no,:study_state,:study_type,:student_name,:sex,:polity,:nation,:idcard,:dept_no,:dept_code,:register_date,:grade,:study_time,:tel,:address,:reg_time,:comments);
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		*pRetCode=E_DB_STUDENT_I;
		goto L_RETU;
	}
	SetCol(handle,0);
	PutRow(handle,out_pack,pRetCode,szMsg);
	return 0;
L_RETU:
	return -1;
}
