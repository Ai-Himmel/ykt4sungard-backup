/* --------------------------------------------
 * 创建日期: 2009-12-23
 *     修改: xlh
 * 版本信息: 1.0.0.0
 * 程序功能: 写卡失败修卡功能查询
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "fdsqc.h"
EXEC SQL INCLUDE SQLCA;

int F846120(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
		sqlint32 	 h_tradecnt1=0;					//交易次数
		sqlint32 	 h_serial_type1=0;					//交易类型
		double 	 h_inbala1=0;					//入卡值
		double 	 h_amt1=0;						//交易金额
		double 	 h_boardfee1=0;					//打伙费
		double 	 h_out_bala1=0;					//出卡值
		sqlint32 	 h_tradecnt2=0;					//交易次数
		double 	 h_inbala2=0;					//入卡值
		double 	 h_amt2=0;						//交易金额
		double 	 h_out_bala2=0;					//出卡值
		sqlint16 	 ind=0;
		char		 h_sqlcmd[4096]="";
		char		 h_op_date1[9]="";
		char 	 h_op_time1[7] = "";
		char		 h_op_date2[9]="";
		char 	 h_op_time2[7] = "";
		char     stuemp_no[21]="";
		char     cut_name[61]="";
	EXEC SQL END DECLARE SECTION;

	int ret = 0;
	int row = 0;	
	int card_no = rPack->lvol0;
	char begin_date[9] = "";
	char end_date[9] = "";
	if(card_no <=0)
		return E_CARDNO_NOT_EXIST;
	
	if(strlen(rPack->sdate1) != 8)
		return E_INPUT_DATE;
	des2src(begin_date,rPack->sdate1);
    des2src(end_date,rPack->sdate2);
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);
	ResetNormalCPack(&aPack,0,1);

	SetCol(handle,F_LVOL0,F_LVOL1,F_LVOL2,F_LVOL3,F_DAMT1,F_DAMT2,F_DAMT3,F_DAMT4,F_DAMT5,F_DAMT6,F_DAMT7,F_SDATE1,F_STIME1,F_SDATE2,F_STIME2,F_SCUST_NO,F_SNAME,0);	
	
	sprintf(h_sqlcmd,"select t1.operate_date,t1.operate_time,t1.serial_type,t1.trade_count,t1.in_balance,t1.trade_fee,t1.boardfee,t1.out_balance,\
	t2.operate_date,t2.operate_time,t2.trade_count,t2.in_balance,t2.trade_fee,t2.out_balance,t3.stuemp_no,t3.cut_name from \
	(select row_number() over(order by operate_date,trade_count,operate_time) as a,tt.* from ( \
	select operate_date,operate_time,serial_type,trade_count,in_balance,trade_fee,boardfee,out_balance \
	  from  YKT_CUR.T_TIF_TRADESERIAL  where card_id  =%d and serial_state = 2 \
	  union all \
	  select operate_date,operate_time,serial_type,trade_count,in_balance,trade_fee,boardfee,out_balance \
	   from YKT_HIS.T_TIF_TRADESERIAL_HIS  where card_id  =%d and bak_date>='%s' and bak_date<='%s' and serial_state = 2 \
	)  tt )t1, \
	(select row_number() over(order by operate_date,trade_count,operate_time) as b,tt.* from ( \
	select operate_date,operate_time,trade_count,in_balance,trade_fee,out_balance \
	  from  YKT_CUR.T_TIF_TRADESERIAL  where card_id  =%d and serial_state = 2 \
	  union all \
	  select operate_date,operate_time,trade_count,in_balance,trade_fee,out_balance \
	   from YKT_HIS.T_TIF_TRADESERIAL_HIS  where card_id  =%d and bak_date>='%s' and bak_date<='%s' and serial_state = 2 )  tt )t2,\
	(select cu.stuemp_no,cu.cut_name from YKT_CUR.t_Cif_Customer cu, YKT_CUR.t_Pif_Card ca where cu.cut_id=ca.cosumer_id and ca.card_id=%d) t3 \
	where  a +1 = b and t1.in_balance < t1.out_balance and t1.in_balance >= t2.in_balance \
	and t1.trade_count = t2.trade_count",card_no,card_no,begin_date,end_date,card_no,card_no,begin_date,end_date,card_no);
    
    writelog(LOG_ERR,"Write h_sqlcmd err [%s]",h_sqlcmd);
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_PREPARE;
	}
	EXEC SQL DECLARE seri_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_DECLARE;
	}
	EXEC SQL OPEN seri_cur;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_OPEN;
	}
	while(1)
	{
		memset(h_op_date1,0,sizeof h_op_date1);
		memset(h_op_time1,0,sizeof h_op_time1);
		h_serial_type1=0;
		h_tradecnt1= 0;
		h_inbala1 =0;
		h_amt1=0;
		h_boardfee1 =0;
		h_out_bala1 =0;
		memset(h_op_date2,0,sizeof h_op_date2);
		memset(h_op_time2,0,sizeof h_op_time2);
		h_tradecnt2= 0;
		h_inbala2 =0;
		h_amt2=0;
		h_out_bala2 =0;
		EXEC SQL FETCH seri_cur INTO :h_op_date1:ind,:h_op_time1:ind,:h_serial_type1:ind,:h_tradecnt1:ind,:h_inbala1:ind,:h_amt1:ind,:h_boardfee1:ind,
			:h_out_bala1:ind,:h_op_date2:ind,:h_op_time2:ind,:h_tradecnt2:ind,:h_inbala2:ind,:h_amt2:ind,:h_out_bala2:ind,:stuemp_no:ind,:cut_name:ind;
		
		ret=SQLCODE;
		if(ret)
		{
			CHECK_DB_ERR;
			EXEC SQL CLOSE seri_cur;
			if(DB_NOTFOUND==ret)
			{
				if(row)
					break;
				else
					return E_DB_TRADESERIAL_N;
			}
			else
				return E_DB_TRADESERIAL_R;
		}
		row++;

		memset(&aPack,0,sizeof(aPack));
		outPack->lvol0 = card_no;
		des2src(outPack->sdate1,h_op_date1);
		des2src(outPack->stime1,h_op_time1);
		outPack->lvol3 = h_serial_type1;
		outPack->lvol1 = h_tradecnt1;
		outPack->damt1 = h_inbala1;
		outPack->damt2 = h_amt1;
		outPack->damt7 = h_boardfee1;
		outPack->damt3 = h_out_bala1;
		des2src(outPack->sdate2,h_op_date2);
		des2src(outPack->stime2,h_op_time2);
		outPack->lvol2 = h_tradecnt2;
		outPack->damt4 = h_inbala2;
		outPack->damt5 = h_amt2;
		outPack->damt6 = h_out_bala2;
		des2src(outPack->scust_no,stuemp_no);
		des2src(outPack->sname,cut_name);
		PutRow(handle,outPack,pRetCode,szMsg);
	}
	
	return 0;
}
