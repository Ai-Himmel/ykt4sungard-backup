/* --------------------------------------------
 * 程序名称: F847151.sqc
 * 创建日期: 9 17 2004
 * 程序作者: 杜叶飞
 * 版本信息: 1.0.0.0
 * 程序功能: 查询客户信息(现金充值与支取)
 * --------------------------------------------
 * 修改日期: 2004-10-12
 * 修改人员:	闻剑
 * 修改描述: 修改查询SQL
 * 版本信息: 1.0.0.1
 * 备注信息:
 * --------------------------------------------*/
#define _IN_SQC_
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "dbfunc.h"
ESQL #include "errdef.h"
ESQL #include "dictionary.h"
ESQL #include "fdsqc.h"
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <syslog.h>
ESQL #include <string.h>

EXEC SQL INCLUDE SQLCA;

int F847156(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
		char	 	ho_StuEmp_no[20+1] = "";		//学号 员工号
		char	  	ho_Cut_name[150+1] = "";		//姓名
		char	  	ho_man_id[20+1] = "";		//身份证号
		sqlint32  	ho_Cut_type = 0;				//客户类别
		sqlint32  	ho_fee_type = 0;				//收费类别
		sqlint32   ho_Cut_state = 0;			//客户状态
		sqlint32   ho_Cut_id = 0;				//客户号
		sqlint32   ho_Card_id = 0;				//卡标识
		char	  	ho_ClassDept_no[10+1] = "";	//院系或单位号
		char	  	ho_Reg_time[27+1] = "";		//注册时间
		char	  	ho_Tel[20+1] = "";			//联系电话
		char	  	ho_Sex[1+1] = "";			//性别
		char      	ho_Comments[150+1] = "";	//客户信息备注
		char	  	ho_Account_id[16+1] = "";	//帐号
		double	ho_Cur_Bala = 0.00;			//当前帐户总余额
		double	ho_Cur_FreeBala = 0.00;		//当前帐户可用余额
		double	ho_Cur_FrozeBala = 0.00;		//当前帐户冻结余额
		sqlint32	hi_Card_id = 0;

		char		h_stmt[2048] = "";			//临时存储SQL语句
		sqlint16   i = 0;
	EXEC SQL END DECLARE SECTION;

	int count = 0;
	int ret=0;
	char	h_temp[500] ="";						//临时存储数据

	ST_CPACK aPack;
	memset(&aPack, 0, sizeof(aPack));
	ST_PACK *pp = &(aPack.pack);

	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,0);

	hi_Card_id = rPack->lvol3;											//卡号
	if(hi_Card_id <1)
	{
		*pRetCode=E_INPUT_CARDNO_CANNOT_NULL;
		goto L_RETU;
	}

	/*if(1)
	{
		SetCol(handle, F_SCUST_AUTH,F_SNAME,F_SNAME2,F_SCUST_NO2,F_LVOL0,F_LVOL1,F_LVOL5,F_SCUST_NO
				  ,F_SCUST_AUTH2,F_SPHONE,F_SSTATION0,F_DAMT0,F_DAMT1,F_DAMT2,F_SPHONE2,F_LVOL2
				  ,F_LVOL3,F_SPHONE3,F_SCUST_TYPE,F_SHOLDER_TYPE2,F_SNOTE,0);
		
		des2src(pp->scust_auth, ho_StuEmp_no);	//学号或员工号
		des2src(pp->sname, ho_Cut_name);			//客户名称
		des2src(pp->sname2, ho_man_id); 		//身份证号
		pp->lvol0 = ho_Cut_type;					//客户类别
		pp->lvol5 = ho_fee_type;					//收费类别
		pp->lvol1 = ho_Cut_state;					//客户状态
		pp->lvol2 = ho_Cut_id;						//客户号
		pp->lvol3 = ho_Card_id; 				//关联卡号
		des2src(pp->scust_no, ho_ClassDept_no); //班级或部门名称
		des2src(pp->scust_auth2, ho_Reg_time);		//注册时间
		des2src(pp->sphone, ho_Tel);				//电话
		des2src(pp->scust_type, ho_Sex);			//性别
		des2src(pp->snote, ho_Comments);			//客户信息备注
		des2src(pp->sstation0, ho_Account_id);		//帐号
		pp->damt0 = ho_Cur_Bala;					//当前帐户总余额
		pp->damt1 = ho_Cur_FreeBala;				//当前帐户可用余额
		pp->damt2 = ho_Cur_FrozeBala;				//当前帐户冻结余额
		pp->lvol2 = ho_Cut_id;						//客户号
		
		PutRow(handle,pp,pRetCode,szMsg);
		return 0;
	}*/
	/*	准备查询语句	*/
	strcpy(h_stmt, "SELECT A.STUEMP_NO,A.CUT_NAME,A.MAN_ID,A.CUT_TYPE,A.FEE_TYPE,A.CUT_STATE,A.CUT_ID,A.CLASSDEPT_NO,A.REG_TIME,A.TEL,A.SEX,A.COMMENTS ");
	strcat(h_stmt, ",B.ACCOUNT_ID,B.CUR_BALA,B.CUR_FREEBALA,B.CUR_FROZEBALA,B.CARD_ID ");
	sprintf(h_temp," FROM YKT_CUR.T_CIF_CUSTOMER A ,YKT_CUR.T_AIF_ACCOUNT B, YKT_CUR.T_PIF_CARD  C WHERE A.CUT_ID = B.CUSTOMER_ID and  B.CARD_ID = C.CARD_ID   and B.CARD_ID = %d ",hi_Card_id);
	strcat(h_stmt,h_temp);

	EXEC SQL PREPARE query_stmt FROM :h_stmt;
	if (SQLCODE != 0)
	{
		*pRetCode = E_DB_CUSTOMER_QUERY_P;
		db_chk_err(__FILE__, __LINE__, &sqlca) ;
		goto L_RETU;
	}

	EXEC SQL  DECLARE S CURSOR FOR query_stmt;
	if (SQLCODE != 0)
	{
		*pRetCode = E_DB_CUSTOMER_QUERY_P;
		db_chk_err(__FILE__, __LINE__, &sqlca) ;
		goto L_RETU;
	}
	EXEC SQL OPEN S;
	if (SQLCODE != 0)
	{
		*pRetCode = E_DB_CUSTOMER_QUERY_P;
		db_chk_err(__FILE__, __LINE__, &sqlca) ;
		goto L_RETU;
	}
	SetCol(handle, F_SCUST_AUTH,F_SNAME,F_SNAME2,F_SCUST_NO2,F_LVOL0,F_LVOL1,F_LVOL5,F_SCUST_NO
				  ,F_SCUST_AUTH2,F_SPHONE,F_SSTATION0,F_DAMT0,F_DAMT1,F_DAMT2,F_SPHONE2,F_LVOL2
				  ,F_LVOL3,F_SPHONE3,F_SCUST_TYPE,F_SHOLDER_TYPE2,F_SNOTE,0);

	while(SQLCODE == 0)
	{
		ho_Card_id = 0;
		memset(ho_Account_id,0,sizeof(ho_Account_id));
		memset(ho_StuEmp_no,0,sizeof(ho_StuEmp_no));
		memset(ho_Cut_name,0,sizeof(ho_Cut_name));
		memset(ho_man_id,0,sizeof(ho_man_id));
		ho_Cut_type = 0;
		ho_fee_type=0;
		ho_Cut_state = 0;
		ho_Cut_id = 0;
		memset(ho_ClassDept_no,0,sizeof(ho_ClassDept_no));
		memset(ho_Reg_time,0,sizeof(ho_Reg_time));
		memset(ho_Tel,0,sizeof(ho_Tel));
		memset(ho_Sex,0,sizeof(ho_Sex));
		memset(ho_Comments,0,sizeof(ho_Comments));
		ho_Cur_Bala = 0.00;
		ho_Cur_FreeBala = 0.00;
		ho_Cur_FrozeBala = 0.00;

		EXEC SQL FETCH S INTO
			:ho_StuEmp_no:i,
			:ho_Cut_name:i,
			:ho_man_id:i,
			:ho_Cut_type:i,
			:ho_fee_type:i,
			:ho_Cut_state:i,
			:ho_Cut_id:i,
			:ho_ClassDept_no:i,
			:ho_Reg_time:i,
			:ho_Tel:i,
			:ho_Sex:i,
			:ho_Comments:i,
			:ho_Account_id:i,
			:ho_Cur_Bala:i,
			:ho_Cur_FreeBala:i,
			:ho_Cur_FrozeBala:i,
			:ho_Card_id:i;

		ret=SQLCODE;
		if(ret)
		{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			EXEC SQL  CLOSE S;
			if(DB_NOTFOUND==ret)
			{
				if(count)
					break;
				else
					*pRetCode=E_DB_CUSTOMER_N;
			}
			else
				*pRetCode=E_DB_CUSTOMER_R;
			goto L_RETU;
		}
		count++;
		des2src(pp->scust_auth, ho_StuEmp_no);	//学号或员工号
		des2src(pp->sname, ho_Cut_name);			//客户名称
		des2src(pp->sname2, ho_man_id);			//身份证号
		pp->lvol0 = ho_Cut_type;					//客户类别
		pp->lvol5 = ho_fee_type;					//收费类别
		pp->lvol1 = ho_Cut_state;					//客户状态
		pp->lvol2 = ho_Cut_id;						//客户号
		pp->lvol3 = ho_Card_id;					//关联卡号
		des2src(pp->scust_no, ho_ClassDept_no);	//班级或部门名称
		des2src(pp->scust_auth2, ho_Reg_time);		//注册时间
		des2src(pp->sphone, ho_Tel);				//电话
		des2src(pp->scust_type, ho_Sex);			//性别
		des2src(pp->snote, ho_Comments);			//客户信息备注
		des2src(pp->sstation0, ho_Account_id);		//帐号
		pp->damt0 = ho_Cur_Bala;					//当前帐户总余额
		pp->damt1 = ho_Cur_FreeBala;				//当前帐户可用余额
		pp->damt2 = ho_Cur_FrozeBala;				//当前帐户冻结余额

		PutRow(handle,pp,pRetCode,szMsg);
	}
	return 0;
L_RETU:
	return -1;
}




