/* ----------------------------------------------------------
 * 程序名称：F900121.sqc
 * 创建日期：2007-04-20
 * 程序作者：韩海东
 * 版本信息：1.0.0.0
 * 程序功能：查询科目交易情况表
 * ----------------------------------------------------------*/


#define _IN_SQC_                                  
ESQL #include <string.h>                               
ESQL #include <stdio.h>    
ESQL #include "errdef.h"  
ESQL #include "pubdb.h"  
ESQL #include "pubfunc.h"      
ESQL #include "fdsqc.h"                                


EXEC SQL INCLUDE SQLCA; 

typedef struct 
{
	const char *subno;
	int flag;
	double begin_total;
	double end_total;
	double debit_total;
	double credit_total;
	char *subject;
	char *subject1;
}subject_seq_t;

//static int g_subject_index = 0;

int F900121(TRUSERID *handle,int iRequest,ST_PACK *in_pack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char		hi_start[10+1]="";
	char		hi_end[10+1]="";
	char		hi_operator[10+1]="";
	char		ho_Sub_code[10+1]="";
	char		ho_Sub_name[150+1]="";
	char		ho_Trade_name[150+1]="";
	double	ho_bbala=0;
	double	ho_in_bala=0;
	double	ho_out_bala=0;
	double	ho_ebala=0;
	char		ho_spare1[10+1]="";
	char 		h_sqlcmd[10240]="";
	sqlint16	indication=0;
	EXEC SQL END DECLARE SECTION;

	int ret=0;
	int nrows = 0;
	int index=-1;
	char pre_subno[10] = "";
	
	T_t_tif_subject  t_tif_subject;
	subject_seq_t g_subject[]={
			{"1",0,0,0,0,0,"一、资产类","资产类总计"},
			{"2",0,0,0,0,0,"二、负债类","负债类总计"},
			{"5",0,0,0,0,0,"三、损益类","损益类总计"},
			{"0",0,0,0,0,0,NULL,NULL}
	};

	ST_CPACK aPack;                                 
	ST_PACK *out_pack = &(aPack.pack);  

	/* 准备处理结果中在ST_PACK中使用的字段 */
	Strncpy_t(hi_start, in_pack->sorder1, sizeof(hi_start));
	Strncpy_t(hi_end, in_pack->sorder2, sizeof(hi_end));
	Strncpy_t(hi_operator, in_pack->scust_no, sizeof(hi_operator));

	T_t_tif_subject_balance pt_tif_subject_balance;
	memset(&pt_tif_subject_balance,0,sizeof pt_tif_subject_balance);

	// 输入参数检查
	trim(hi_start);
	trim(hi_end);
	trim(hi_operator);
	if (!strlen(hi_start)) 
	{
		*pRetCode=E_INPUT_NOSTARTTIME;
		writelog(LOG_ERR,"Start date is null,hi_start[%s]errcode[%d]!",hi_start,E_INPUT_NOSTARTTIME);
		goto L_RETU;
	}

	if (!strlen (hi_end)) 
	{
		*pRetCode=E_INPUT_NOENDTIME;
		writelog(LOG_ERR,"End date is null,hi_end[%s]errcode[%d]!",hi_end,E_INPUT_NOENDTIME);
		goto L_RETU;
	}

	if (!strlen (hi_operator)) 
	{
		*pRetCode=E_INPUT_NOOPERATOR;
		writelog(LOG_ERR,"hi_operator,hi_operator[%s]errcode[%d]!",hi_operator,E_INPUT_NOOPERATOR);
		goto L_RETU;
	}

	//如果结果条数为0，则直接返回错误信息，因为在SQL语句中处理比较复杂
	//在此处判断
	ret=DB_t_tif_subject_balance_read_by_txdate_and_subno(hi_end,"101",&pt_tif_subject_balance);
	if(ret==DB_NOTFOUND)
	{
		*pRetCode=E_DB_T_REPORT_RICH_DEBT_N;
		goto L_RETU;
	}


#ifdef ESQL_DB2		
	sprintf(h_sqlcmd,"subno,subname,subtype,sum((case when txdate=%s  then 1 else 0 end)*bbala) bbala, \
		sum((case when txdate=%s then 1 else 0 end)*endbala) endbala, \
		sum(sum_trade) sum_trade \
	from     \
        	( \
	        	SELECT 	a.subno,a.subname,b.subtype,a.bbala,a.endbala, \
	    				((case when a.endbala_flag=1 then 1 else -1 end)*(a.dramnt-a.cramt)) sum_trade,txdate \
	            	FROM 	YKT_CUR.T_TIF_SUBJECT_BALANCE a,YKT_CUR.T_TIF_SUBJECT b \
	              where   	a.subno=b.subno and txdate>=%s and txdate<=%s \
                )  T \
		group by subno,subname,subtype \
		order by subno asc",hi_start,hi_end,hi_start,hi_end);
#else
	sprintf(h_sqlcmd,"select t.subno,subname,trademsg,bbala,in_fee,out_fee,ebala,spare1 from (  \
		select distinct S.subno,S.subname,  \
		    c.trademsg,s.spare1,isleaf,  \
			sum((case when outorin=1 then 1 else 0 end)*fee_change) in_fee,  \
			sum((case when outorin=2 then 1 else 0 end)*fee_change) out_fee  \
		  from (select father,subno,LPAD('++++',(LEVEL-1)*4)||subname subname,  \
		  subtype,level,spare1,CONNECT_BY_ISLEAF AS isleaf from YKT_CUR.T_TIF_SUBJECT   \
		  START WITH FATHER='0' CONNECT BY PRIOR SUBNO=FATHER  \
		  order by spare1) S  \
		    left join (select * from ykt_cur.t_tif_subject_dept where balance_date>=%s and balance_date<=%s) T  \
		    on S.subno = T.subno  \
			left join ykt_cur.t_pif_tradecode c  \
			on t.seri_type=c.tradecode  \
			group by rollup(s.subno,s.subname,s.spare1,isleaf,c.trademsg)  \
			having s.spare1 is not null and isleaf is not null and (isleaf <>0 or trademsg is null)  \
			) t  \
			left join   \
			(			 \
			  select root subno, \
	   			  sum((case when txdate=%s then 1 else 0 end)*bbala) bbala  \
			   , sum((case when txdate=%s then 1 else 0 end)*endbala) ebala  \
 			   from  \
			   (SELECT distinct txdate,subno,subname,subtype,bbala,endbala,father, dramnt,cramt, \
		  	   		   level  l,connect_by_root subno  root  \
		   			   FROM   \
		   			   (select b.subno,b.subname,b.subtype, a.dramnt,a.cramt,bbala,endbala,txdate,b.father  \
		   			   from ykt_cur.t_tif_subject_balance a  \
		   			   right join    ykt_cur.t_tif_subject b  \
		   			   on a.SUBNO=b.subno and a.TXDATE>=%s and a.txdate<=%s)  \
		   			   tt  \
		   			   CONNECT BY PRIOR subno=father) t \
		   			   group by root  \
			) d  \
			on t.subno=d.subno  and t.trademsg is null  \
			order by spare1,trademsg desc",hi_start,hi_end,hi_start,hi_end,hi_start,hi_end);
#endif

	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		*pRetCode=E_DB_T_REPORT_RICH_DEBT_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}

	EXEC SQL  DECLARE C1 CURSOR FOR query_stmt;	
	if(SQLCODE)
	{
		*pRetCode=E_DB_T_REPORT_RICH_DEBT_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		writelog(LOG_ALERT,"declare cursor err sqlcode[%d]",SQLCODE);
		goto L_RETU;
	}

	SetCol(handle,0); 
	SetCol(handle,F_SSERIAL0,F_SNOTE,F_SNOTE2,F_DAMT1,F_DAMT2,F_DAMT3,F_DAMT4,F_SSERIAL1,0);

	/* 执行SQL语句 */

	EXEC SQL OPEN C1;

	if(SQLCODE)
	{
		*pRetCode=E_DB_T_REPORT_RICH_DEBT_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		writelog(LOG_ALERT,"open cursor err sqlcode[%d]",SQLCODE);
		goto L_RETU;
	}	                                               
	memset(pre_subno,0,sizeof pre_subno);
	while(1)
	{
		// 初始化宿主变量 
		memset(ho_Sub_code , 0,sizeof(ho_Sub_code));
		memset(ho_Sub_name , 0, sizeof(ho_Sub_name));
		memset(ho_Trade_name,0,sizeof ho_Trade_name);
		ho_bbala= 0;
		ho_in_bala= 0;
		ho_out_bala= 0;
		ho_ebala= 0;
		memset(ho_spare1,0,sizeof ho_spare1);
		memset(&t_tif_subject,0,sizeof t_tif_subject);

		EXEC SQL FETCH C1 INTO 
			:ho_Sub_code:indication,
			:ho_Sub_name:indication,
			:ho_Trade_name:indication,
			:ho_bbala:indication,
			:ho_in_bala:indication,
			:ho_out_bala:indication,
			:ho_ebala:indication,
			:ho_spare1:indication;

		ret=SQLCODE;
		if (ret)    
		{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			EXEC SQL  CLOSE C1;
			if(DB_NOTFOUND==ret)
			{
				if(0==nrows)
				{
					*pRetCode=E_DB_T_REPORT_RICH_DEBT_N;
					writelog(LOG_DEBUG,"fetch t_tif_report_rich_debt no data [%d]",ret);
					goto L_RETU;
				}
				else
				{
					Strncpy_t(out_pack->snote, g_subject[2].subject1,sizeof(out_pack->snote));
					Strncpy_t(out_pack->sserial0, "", sizeof(out_pack->sserial0));
					Strncpy_t(out_pack->snote2,"",sizeof out_pack->snote2);
					out_pack->damt1=  g_subject[2].begin_total;
					out_pack->damt2 = g_subject[2].debit_total;
					out_pack->damt3 = g_subject[2].credit_total;
					out_pack->damt4 = g_subject[2].end_total;
					Strncpy_t(out_pack->sserial1,"",sizeof out_pack->sserial1);

					PutRow(handle,out_pack,pRetCode,szMsg);
					break;
				}
			}
			else
			{
				*pRetCode=E_DB_T_REPORT_RICH_DEBT_R;
				writelog(LOG_ALERT,"fetch t_tif_report_rich_debt err [%d]",ret);
				goto L_RETU;
			}
		}
		ret=DB_t_tif_subject_read_by_subno(ho_Sub_code,&t_tif_subject);
		if(ret)
		{
			goto L_RETU;
		}
		int i=0;
		if(strncmp(pre_subno,ho_Sub_code,1)!=0)
		{
			while(1)
			{
				if(strncmp(g_subject[i].subno,"0",1)==0) break;
				if(strncmp(g_subject[i].subno,ho_Sub_code,1)==0)
				{
					pre_subno[0] = ho_Sub_code[0];
					break;
				}
				i++;
			}
			if(index >= 0)
			{	//写三个类型科目的总计信息
				Strncpy_t(out_pack->snote, g_subject[index].subject1,sizeof(out_pack->snote));
				memset(out_pack->sserial0,0,sizeof out_pack->sserial0);
				memset(out_pack->snote2,0,sizeof out_pack->snote2);
				out_pack->damt1=  g_subject[index].begin_total;
				out_pack->damt2 = g_subject[index].debit_total;
				out_pack->damt3 = g_subject[index].credit_total;
				out_pack->damt4 = g_subject[index].end_total;
				memset(out_pack->sserial1,0,sizeof out_pack->sserial1);
				PutRow(handle,out_pack,pRetCode,szMsg);
			}
			index = i;
			//写三个类型科目的报表标题
			Strncpy_t(out_pack->sserial0, g_subject[index].subject,sizeof(out_pack->sserial0));
			memset(out_pack->snote,0,sizeof out_pack->snote);
			memset(out_pack->snote2,0,sizeof out_pack->snote2);
			out_pack->damt1=  0;
			out_pack->damt2 = 0;
			out_pack->damt3 = 0;
			out_pack->damt4 = 0;
			memset(out_pack->sserial1,0,sizeof out_pack->sserial1);
			PutRow(handle,out_pack,pRetCode,szMsg);
			//if(g_subject[i].subno[0]!='1')
			
		}
		trim(ho_Trade_name);
		//writelog(LOG_DEBUG,"subject[%s]",ho_Trade_name);
		if((index >= 0)&& (t_tif_subject.level==1)&&(strlen(ho_Trade_name)==0))
		{
			g_subject[index].begin_total=g_subject[index].begin_total+ho_bbala;
			g_subject[index].end_total=g_subject[index].end_total+ho_ebala;
			g_subject[index].credit_total=g_subject[index].credit_total+ho_out_bala;
			g_subject[index].debit_total=g_subject[index].debit_total+ho_in_bala;
		}
		
		// TODO: 判断没有对应的科目
	
		Strncpy_t(out_pack->sserial0, ho_Sub_code,sizeof(out_pack->sserial0));
		Strncpy_t(out_pack->snote, ho_Sub_name, sizeof(out_pack->snote));
		Strncpy_t(out_pack->snote2,ho_Trade_name,sizeof out_pack->snote2);
		out_pack->damt1= ho_bbala;
		out_pack->damt2 = ho_in_bala;
		out_pack->damt3 = ho_out_bala;
		out_pack->damt4 = ho_ebala;
		Strncpy_t(out_pack->sserial1,ho_spare1,sizeof out_pack->sserial1);

		PutRow(handle,out_pack,pRetCode,szMsg);
		
		nrows++;
	}

	EXEC SQL CLOSE C1;
	return 0;

	L_RETU:
		return *pRetCode;                                                                                                

}


