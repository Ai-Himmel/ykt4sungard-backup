/* --------------------------------------------
 * 创建日期: 2008-07-21
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能: 设备查询
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "acctrans.h"
ESQL #include "busqc.h"
ESQL #include <string>
ESQL #include <sstream>
ESQL using namespace std;
EXEC SQL INCLUDE SQLCA;


int F820105(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
#if 0
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32	deviceid=0;                  	//设备标识
	char    	devicename[150+1]="";         	//设备名称
	char    	devphyid[8+1]="";            	//三九设备注册号
	char    	devphyid[8+1]="";         	//设备物理ID
	sqlint32	deviceno=0;                  	//机号
	char    	devtype[4+1]="";              	//机型代码
	char    	devversion[8+1]="";           	//设备版本号
	char    	cardstr[2+1]="";              	//卡片结构
	char    	cardtype[64+1]="";            	//卡类
	sqlint32	svrportcnt=0;                  	//服务器端口总数
	char    	fdevphy_id[8+1]="";           	//上级设备物理ID
	sqlint32	fdevid=0;
	sqlint32	portno=0;                     	//服务器端口号
	sqlint32	status=0;                   	//设备状态
	sqlint32	commtype=0;                   	//链路模式
	char    	comadd[16+1]="";              	//通信地址
	char    	port[6+1]="";                 	//通讯端口
	sqlint32	baudrate=0;                   	//波特率
	sqlint32	comtype=0;                    	//数据通讯方式
	char    	bsheetvdate[12+1]="";         	//黑名单有效期
	char    	cardverno[12+1]="";           	//黑名单版本号
	sqlint32	lasttraserno=0;               	//终端交易流水号期末值
	char    	lasttradate[20+1]="";         	//终端交易时间期末值
	sqlint32	lastshutserno=0;              	//终端轧帐流水号期末值
	char    	lastshutdate[20+1]="";        	//终端轧帐时间期末值
	char    	syspwd[6+1]="";               	//系统员密码
	char    	admpwd[6+1]="";               	//管理员密码
	sqlint32	pwdonoff=0;                   	//密码开关
	char    	puserno[3+1]="";              	//钱包代码
	char    	cardset[64+1]="";             	//终端机适用用户卡类别
	char    	funonoff[2+1]="";             	//收费机增强功能开关
	sqlint32	cardusenum=0;                 	//卡的最大使用次数
	sqlint32	maxdeposit=0;                 	//钱包最高存款限额
	sqlint32	mindeposit=0;                 	//钱包最低剩余款限额
	sqlint32	ration=0;                     	//定值收费方式使用的定值额
	sqlint32	maxtrade=0;                   	//每次交易最高额
	char    	shuttimes[64+1]="";           	//扎帐时间点
	char    	card65pwd[64+1]="";           	//三九65类卡密钥
	char    	authpwd[64+1]="";             	//设备授权密钥
	sqlint32	ftflag=0;                     	//防火防盗状态
	sqlint32	phytype=0;                    	//设备物理型号
	sqlint32	web_level=0;                  	//网络层号
	sqlint32	sysid=0;               	//所属子系统
	sqlint32	area=0;                       	//设备所在区域
	char    	init_key[32+1]="";            	//读卡密钥
	char    	manager[20+1]="";             	//负责人员工号
	char    	tel[20+1]="";                 	//联系电话
	char    	addr[150+1]="";            	//地址
	char    	operate_time[26+1]="";        	//操作时间
	char    	comments[150+1]="";           	//备注
	sqlint32	feetype=0;                     	//收费方式
	sqlint32	is_feecode = 0;			// 是否支持科目收费
	sqlint32  	mode_code=0;			//工作模式
	sqlint32	open_time1=0;			//锁1开的时间
	sqlint32 	open_time2=0;			//锁2开的时间
	char 	is_alleyway[2]="";		//通道模式
	char 	is_save_data[2]="";		//是否储存数据
	char 	is_lcd_display[2]="";		//是否液晶显示
	sqlint32	dev_usage = 0;			// 设备用途
	sqlint16	indicator=0;
	char    	h_sqlcmd[1024]="";
	EXEC SQL END DECLARE SECTION;

	int    ret=0;
	int    row=0;
	int    first=0;
	char sqltmp[500]="";
	T_t_device tDevice;
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	ResetNormalCPack(&aPack,0,1);
	des2src(devicename,rPack->scert_no);
	des2src(devphyid,rPack->sbank_pwd);
	des2src(devphyid,rPack->sbank_pwd2);
	deviceno=rPack->lvol1;
	des2src(devtype,rPack->sbank_code);
	des2src(fdevphy_id,rPack->sdate1);
	status=rPack->lvol4;
	phytype=rPack->lbank_acc_type;
	sysid=rPack->lserial0;
	area=rPack->lserial1;
	des2src(manager,rPack->sname2);
	dev_usage = (int)rPack->damt5;

	sprintf(h_sqlcmd,"select  deviceid, devicename, devphyid, devphyid, deviceno, devtype,\
		   devversion, cardstr, cardtype, svrportcnt, fdeviceid, portno, status, commtype, comadd,\
		   port, baudrate, comtype, bsheetvdate, cardverno, lasttraserno, lasttradate, lastshutserno, \
		   lastshutdate, syspwd, admpwd, pwdonoff, puserno, cardset, funonoff, cardusenum, maxdeposit,\
		   mindeposit, ration, maxtrade, shuttimes, card65pwd, authpwd, ftflag, phytype, web_level,\
		   sysid, area, init_key, manager, tel, addr, operate_time, comments , feetype,\
		   is_fee_code,mode_code,open_time1,open_time2,is_alleyway,is_save_data,is_lcd_display \
		   ,dev_usage from ykt_cur.t_device where status<%d ",DEVRUNSTATUS_LOGOUT);
	if(strlen(devicename))
	{

		sprintf(sqltmp," and devicename like '%%%s%%' ",devicename);
		strcat(h_sqlcmd,sqltmp);

	}
	if(strlen(devphyid))
	{
		sprintf(sqltmp," and devphyid = '%s' ",devphyid);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(devphyid))
	{

		sprintf(sqltmp," and devphyid = '%s' ",devphyid);
		strcat(h_sqlcmd,sqltmp);
	}
	if(deviceno!=0)
	{

		sprintf(sqltmp," and deviceno =%d ",deviceno);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(devtype))
	{

		sprintf(sqltmp," and devtype = '%s' ",devtype);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(fdevphy_id))
	{
		memset(&tDevice,0,sizeof tDevice);
		ret = get_devinfo_by_phyid(fdevphy_id,&tDevice);
		if(!ret)
		{
			
			sprintf(sqltmp," and fdeviceid = %d ",tDevice.deviceid);
			strcat(h_sqlcmd,sqltmp);
		}
		
	}
	/*
	if(status!=0)
	{

		sprintf(sqltmp," and status =%d ",status);
		strcat(h_sqlcmd,sqltmp);
	}
	*/
	if(phytype!=0)
	{

		sprintf(sqltmp," and phytype =%d ",phytype);
		strcat(h_sqlcmd,sqltmp);
	}
	if(sysid!=0)
	{

		sprintf(sqltmp," and sysid =%d ",sysid);
		strcat(h_sqlcmd,sqltmp);
	}
	if(area!=0)
	{

		sprintf(sqltmp," and area =%d ",area);
		strcat(h_sqlcmd,sqltmp);
	}
	if(dev_usage > 0)
	{
		sprintf(sqltmp," and dev_usage=%d ",area);
		strcat(h_sqlcmd,sqltmp);
	}
	if(strlen(manager))
	{

		sprintf(sqltmp," and manager like '%%%s%%' ",manager);
		strcat(h_sqlcmd,sqltmp);
	}
	//不显示前置机的查询

	sprintf(sqltmp," and  DevType <>'%s' ",DEVITYPE_SUBSYSTEM);
	strcat(h_sqlcmd,sqltmp);

	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_DEVICE_R;
	}
	EXEC SQL  DECLARE device_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_DEVICE_R;
	}
	EXEC SQL  OPEN device_cur;
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_DEVICE_R;
	}
	SetCol(handle,0);
	SetCol(handle,F_LVOL0,F_SCERT_NO,F_SBANK_PWD,F_SBANK_PWD2,F_LVOL1,F_SBANK_CODE,F_SDATE0,
		   F_SCURRENCY_TYPE,F_SADDR,F_LVOL2,F_SDATE1,F_LVOL3,F_LVOL4,F_LVOL5,F_SSTATION0,
		   F_SBANK_CODE2,F_LVOL6,F_LVOL7,F_SSERIAL0,F_SSERIAL1,F_LVOL8,F_SCUST_AUTH2,F_LVOL9,
		   F_SNAME,F_SCHANGE_EMP,F_SCHECK_EMP,F_LVOL10,F_SBRANCH_CODE0,F_SADDR2,
		   F_SCURRENCY_TYPE2,F_LVOL11,F_LVOL12,F_LCERT_CODE,F_LSAFE_LEVEL,F_LSAFE_LEVEL2,
		   F_SALL_NAME,F_SBANKNAME,F_SBANKNAME2,F_LWITHDRAW_FLAG,F_LBANK_ACC_TYPE,
		   F_LBANK_ACC_TYPE2,F_LSERIAL0,F_LSERIAL1,F_SCUST_LIMIT,F_SNAME2,F_SPAGER,
		   F_SCUSTTYPES,F_SPHONE,F_SSECTYPES,F_DAMT0,F_DAMT1,F_DAMT2,F_DAMT3,F_DAMT4,
		   F_SSTATUS0,F_SSTATUS1,F_SSTATUS2,F_DAMT5,F_DAMT6,0);
	while(1)
	{
		deviceid=0;
		memset(devicename,0,sizeof(devicename));
		memset(devphyid,0,sizeof(devphyid));
		memset(devphyid,0,sizeof(devphyid));
		deviceno=0;
		memset(devtype,0,sizeof(devtype));
		memset(devversion,0,sizeof(devversion));
		memset(cardstr,0,sizeof(cardstr));
		memset(cardtype,0,sizeof(cardtype));
		svrportcnt=0;
		//memset(fdevphy_id,0,sizeof(fdevphy_id));
		fdevid = 0;
		portno=0;
		status=0;
		commtype=0;
		memset(comadd,0,sizeof(comadd));
		memset(port,0,sizeof(port));
		baudrate=0;
		comtype=0;
		memset(bsheetvdate,0,sizeof(bsheetvdate));
		memset(cardverno,0,sizeof(cardverno));
		lasttraserno=0;
		memset(lasttradate,0,sizeof(lasttradate));
		lastshutserno=0;
		memset(lastshutdate,0,sizeof(lastshutdate));
		memset(syspwd,0,sizeof(syspwd));
		memset(admpwd,0,sizeof(admpwd));
		pwdonoff=0;
		memset(puserno,0,sizeof(puserno));
		memset(cardset,0,sizeof(cardset));
		memset(funonoff,0,sizeof(funonoff));
		cardusenum=0;
		maxdeposit=0;
		mindeposit=0;
		ration=0;
		maxtrade=0;
		memset(shuttimes,0,sizeof(shuttimes));
		memset(card65pwd,0,sizeof(card65pwd));
		memset(authpwd,0,sizeof(authpwd));
		ftflag=0;
		phytype=0;
		web_level=0;
		sysid=0;
		area=0;
		memset(init_key,0,sizeof(init_key));
		memset(manager,0,sizeof(manager));
		memset(tel,0,sizeof(tel));
		memset(addr,0,sizeof(addr));
		memset(operate_time,0,sizeof(operate_time));
		memset(comments,0,sizeof(comments));
		feetype=0;
		is_feecode = 0;
		mode_code=0,
			open_time1=0,
			open_time2=0,
			memset(is_alleyway,0,sizeof(is_alleyway));
		memset(is_save_data,0,sizeof(is_save_data));
		memset(is_lcd_display,0,sizeof(is_lcd_display));
		dev_usage = 0;

		EXEC SQL  FETCH device_cur INTO
			:deviceid:indicator,
			:devicename:indicator,
			:devphyid:indicator,
			:devphyid:indicator,
			:deviceno:indicator,
			:devtype:indicator,
			:devversion:indicator,
			:cardstr:indicator,
			:cardtype:indicator,
			:svrportcnt:indicator,
			:fdevid:indicator,
			:portno:indicator,
			:status:indicator,
			:commtype:indicator,
			:comadd:indicator,
			:port:indicator,
			:baudrate:indicator,
			:comtype:indicator,
			:bsheetvdate:indicator,
			:cardverno:indicator,
			:lasttraserno:indicator,
			:lasttradate:indicator,
			:lastshutserno:indicator,
			:lastshutdate:indicator,
			:syspwd:indicator,
			:admpwd:indicator,
			:pwdonoff:indicator,
			:puserno:indicator,
			:cardset:indicator,
			:funonoff:indicator,
			:cardusenum:indicator,
			:maxdeposit:indicator,
			:mindeposit:indicator,
			:ration:indicator,
			:maxtrade:indicator,
			:shuttimes:indicator,
			:card65pwd:indicator,
			:authpwd:indicator,
			:ftflag:indicator,
			:phytype:indicator,
			:web_level:indicator,
			:sysid:indicator,
			:area:indicator,
			:init_key:indicator,
			:manager:indicator,
			:tel:indicator,
			:addr:indicator,
			:operate_time:indicator,
			:comments:indicator,
			:feetype:indicator,
			:is_feecode:indicator,
			:mode_code:indicator,
			:open_time1:indicator,
			:open_time2:indicator,
			:is_alleyway:indicator,
			:is_save_data:indicator,
			:is_lcd_display:indicator,
			:dev_usage:indicator;
		ret=SQLCODE;
		if(ret)
		{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			EXEC SQL  CLOSE device_cur;
			if(DB_NOTFOUND==ret)
			{
				if(row)
					break;
				else
					return E_DB_DEVICE_N;
			}
			else
				return E_DB_DEVICE_R;
		}

		out_pack->lvol0=deviceid;
		des2src(out_pack->scert_no,devicename);
		des2src(out_pack->sbank_pwd,devphyid);
		des2src(out_pack->sbank_pwd2,devphyid);
		out_pack->lvol1=deviceno;
		des2src(out_pack->sbank_code,devtype);
		des2src(out_pack->sdate0,devversion);
		des2src(out_pack->scurrency_type,cardstr);
		des2src(out_pack->saddr,cardtype);
		out_pack->lvol2=svrportcnt;
		//des2src(out_pack->sdate1,fdevphy_id);
		//sprintf(out_pack->sdate1,"%d",fdevid);
		out_pack->damt6 = fdevid;
		out_pack->lvol3=portno;
		out_pack->lvol4=status;
		out_pack->lvol5=commtype;
		des2src(out_pack->sstation0,comadd);
		des2src(out_pack->sbank_code2,port);
		out_pack->lvol6=baudrate;
		out_pack->lvol7=comtype;
		des2src(out_pack->sserial0,bsheetvdate);
		des2src(out_pack->sserial1,cardverno);
		out_pack->lvol8=lasttraserno;
		des2src(out_pack->scust_auth2,lasttradate);
		out_pack->lvol9=lastshutserno;
		des2src(out_pack->sname,lastshutdate);
		des2src(out_pack->schange_emp,syspwd);
		des2src(out_pack->scheck_emp,admpwd);
		out_pack->lvol10=pwdonoff;
		des2src(out_pack->sbranch_code0,puserno);
		des2src(out_pack->saddr2,cardset);
		des2src(out_pack->scurrency_type2,funonoff);
		out_pack->lvol11=cardusenum;
		out_pack->lvol12=maxdeposit;
		out_pack->lcert_code=mindeposit;
		out_pack->lsafe_level=ration;
		out_pack->lsafe_level2=maxtrade;
		des2src(out_pack->sall_name,shuttimes);
		des2src(out_pack->sbankname,card65pwd);
		des2src(out_pack->sbankname2,authpwd);
		out_pack->lwithdraw_flag=ftflag;
		out_pack->lbank_acc_type=phytype;
		out_pack->lbank_acc_type2=web_level;
		out_pack->lserial0=sysid;
		out_pack->lserial1=area;
		des2src(out_pack->scust_limit,init_key);
		des2src(out_pack->sname2,manager);
		des2src(out_pack->spager,tel);
		des2src(out_pack->scusttypes,addr);
		des2src(out_pack->sphone,operate_time);
		des2src(out_pack->ssectypes,comments);
		out_pack->damt0=(double)feetype;
		out_pack->damt4=(double)is_feecode;
		out_pack->damt1=mode_code;
		out_pack->damt2=open_time1;
		out_pack->damt3=open_time2;
		des2src(out_pack->sstatus0,is_alleyway);
		des2src(out_pack->sstatus1,is_save_data);
		des2src(out_pack->sstatus2,is_lcd_display);
		out_pack->damt5 = dev_usage;
		row++;
		PutRow(handle,out_pack,pRetCode,szMsg);
		if(row%9==0)
			AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
#endif
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 deviceid=0;
	char     devicename[61]="";
	char     devphyid[31]="";
	char     fdevphyid[31]="";
	char     devtypecode[31]="";
	char     devverno[31]="";
	char     cardphytype[3]="";
	sqlint32 svrportcnt=0;
	sqlint32 fdeviceid=0;
	char     runstatus[2]="";
	char     status[2]="";
	sqlint32 commtype=0;
	char     ip[16]="";
	sqlint32 portno=0;
	sqlint32 svrportno=0;
	sqlint32 deviceno=0;
	sqlint32 baudrate=0;
	char     cardverno[31]="";
	sqlint32 lastseqno=0;
	char     lasttranstime[31]="";
	sqlint32 purseno=0;
	sqlint32 maxamt=0;
	sqlint32 devphytype=0;
	sqlint32 sysid=0;
	char     areacode[4]="";
	char     doorlstver[31]="";
	sqlint32 devusage=0;
	sqlint16 indicator=0;
	char 	 batchno[31]="";
	char 	 remark[241]="";
	char     h_sqlcmd[2048]="";
	EXEC SQL END DECLARE SECTION;

	int ret=0;
	CAccTrans *pAccTrans=CAccTrans::getInstance();
	des2src(pAccTrans->trans.opercode,rPack->semp);
	pAccTrans->trans.transcode=MAKETRANSCODEQRY(TCM_DEVICE);	
	//ret=pAccTrans->InitTrans();
	//if(ret)
	//	return ret;			
	
	int row = 0;
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);
	ResetNormalCPack(&aPack,0,1);
//	SetCol(handle,F_LVOL0,F_SCERT_NO,F_SBANK_PWD,
//	              F_SSERIAL1,F_SDATE0,F_SADDR,
//	              F_LVOL2,F_DAMT6,F_SSTATUS2,
//	              F_SSTATUS1,F_LVOL5,F_SSTATION0,
//	              F_LVOL3,F_SBANK_CODE2,F_LVOL1,
//	              F_LVOL6,F_SSERIAL1,F_LVOL8,
//	              F_SCUST_AUTH2,F_SNAME2,F_SCHECK_EMP,
//	              F_SBRANCH_CODE0,F_LVOL2,F_LVOL5,
//	              F_LSERIAL0,F_LSERIAL1,F_SPAGER,
//	              F_SCUSTTYPES,/*doorlstver,*/F_DAMT5,
//	              0);
	SetCol(handle,0);
	SetCol(handle,F_LVOL0,F_SCERT_NO,F_SBANK_PWD,F_SBANK_PWD2,F_LVOL1,F_SBANK_CODE,F_SDATE0,
		   F_SCURRENCY_TYPE,F_SADDR,F_LVOL2,F_SDATE1,F_LVOL3,F_LVOL4,F_LVOL5,F_SSTATION0,
		   F_SBANK_CODE2,F_LVOL6,F_LVOL7,F_SSERIAL0,F_SSERIAL1,F_LVOL8,F_SCUST_AUTH,F_SCUST_AUTH2,F_LVOL9,
		   F_SNAME,F_SCHANGE_EMP,F_SCHECK_EMP,F_LVOL10,F_SBRANCH_CODE0,F_SADDR2,
		   F_SCURRENCY_TYPE2,F_LVOL11,F_LVOL12,F_LCERT_CODE,F_LSAFE_LEVEL,F_LSAFE_LEVEL2,
		   F_SALL_NAME,F_SBANKNAME,F_SBANKNAME2,F_LWITHDRAW_FLAG,F_LBANK_ACC_TYPE,
		   F_LBANK_ACC_TYPE2,F_LSERIAL0,F_LSERIAL1,F_SCUST_LIMIT,F_SNAME2,F_SPAGER,
		   F_SCUSTTYPES,F_SPHONE,F_SSECTYPES,F_DAMT0,F_DAMT1,F_DAMT2,F_DAMT3,F_DAMT4,
		   F_SSTATUS0,F_SSTATUS1,F_SSTATUS2,F_DAMT5,F_DAMT6,F_SPHONE3,F_VSVARSTR0,0);
	des2src(devicename,rPack->scert_no);
	
	//物理ID
	if(strlen(rPack->sphone3)>0)
		des2src(devphyid,rPack->sphone3);
	else
		des2src(devphyid,rPack->sbank_pwd2);
	
	deviceno=rPack->lvol1;
	des2src(devtypecode,rPack->sbank_code);
	des2src(fdevphyid,rPack->sphone2);
	if(rPack->lvol4)
		sprintf(runstatus,"%d",rPack->lvol4);
	devphytype=rPack->lbank_acc_type;
	sysid=rPack->lserial0;
	if(rPack->lserial1)
		sprintf(areacode,"%d",rPack->lserial1);
	devusage = (int)rPack->damt5;
	des2src(batchno,rPack->scust_auth);
//	des2src(devicename,rPack->scert_no);
//	des2src(devphyid,rPack->sbank_pwd);
//	des2src(devtypecode,rPack->sserial1);
//	des2src(devverno,rPack->sdate0);
//	des2src(cardphytype,rPack->saddr);
//	svrportcnt=rPack->lvol2;
//	fdeviceid=(int)rPack->damt6;
//	des2src(runstatus,rPack->sstatus2);
////	des2src(status,rPack->sstatus1);
//	commtype=rPack->lvol5;
//	des2src(ip,rPack->sstation0);
//	portno=rPack->lvol3;
//	svrportno=atoi(rPack->sbank_code2);
//	deviceno=rPack->lvol1;
//	baudrate=rPack->lvol6;
//	des2src(cardverno,rPack->sserial1);
//	lastseqno=rPack->lvol8;
//	des2src(lasttranstime,rPack->scust_auth2);
//	des2src(admin,rPack->sname2);
//	des2src(adminpwd,rPack->scheck_emp);
//	purseno=atoi(rPack->sbranch_code0);
//	devphytype=rPack->lvol5;
//	sysid=rPack->lserial0;
//	if(rPack->lserial1)
//		sprintf(areacode,"%d",rPack->lserial1);
//	des2src(tel,rPack->spager);
//	des2src(addr,rPack->scusttypes);
//	//des2src(doorlstver,rPack->);
//	devusage=rPack->damt5;

	stringstream sql;
	sql<<"SELECT ";
	sql<<"deviceid,";
	sql<<"devicename,";
	sql<<"devphyid,";
	sql<<"devtypecode,";
	sql<<"devverno,";
	sql<<"cardphytype,";
	sql<<"svrportcnt,";
	sql<<"fdeviceid,";
	sql<<"runstatus,";
	sql<<"status,";
	sql<<"commtype,";
	sql<<"ip,";
	sql<<"portno,";
	sql<<"svrportno,";
	sql<<"deviceno,";
	sql<<"baudrate,";
	sql<<"cardverno,";
	sql<<"lastseqno,";
	sql<<"lasttranstime,";
	sql<<"purseno,";
	sql<<"maxamt,";
	sql<<"devphytype,";
	sql<<"sysid,";
	sql<<"areacode,";
	sql<<"doorlstver,";
	sql<<"devusage, ";
	sql<<"batchno,";
	sql<<"remark ";
	sql<<" FROM ykt_cur.t_device ";
	sql<<" WHERE deviceid>1 and status='1' ";
	if(strlen(rPack->sserial0))
	    sql<<" and deviceid = "<<rPack->sserial0;
	if(strlen(fdevphyid))
	{
		sql<<" and fdeviceid = (select deviceid from ykt_cur.t_device where devphyid='"<<fdevphyid<<"') ";
	}
	if(strlen(devicename))
	    sql<<" and devicename like '"<<devicename<<"'";
	if(strlen(devphyid))
	    sql<<" and devphyid like '"<<devphyid<<"'";
	if(strlen(devtypecode))
	    sql<<" and devtypecode = '"<<devtypecode<<"'";
	if(strlen(devverno))
	    sql<<" and devverno = '"<<devverno<<"'";
	if(strlen(cardphytype))
	    sql<<" and cardphytype = '"<<cardphytype<<"'";
	if(svrportcnt)
	    sql<<" and svrportcnt="<<svrportcnt;
	if(fdeviceid)
	    sql<<" and fdeviceid="<<fdeviceid;
	if(strlen(runstatus))
	    sql<<" and runstatus = '"<<runstatus<<"'";
	if(strlen(status))
	    sql<<" and status = '"<<status<<"'";
	if(commtype)
	    sql<<" and commtype="<<commtype;
	if(strlen(ip))
	    sql<<" and ip like '"<<ip<<"'";
	if(portno)
	    sql<<" and portno="<<portno;
	if(svrportno)
	    sql<<" and svrportno="<<svrportno;
	if(deviceno)
	    sql<<" and deviceno="<<deviceno;
	if(baudrate)
	    sql<<" and baudrate="<<baudrate;
	if(strlen(cardverno))
	    sql<<" and cardverno like '"<<cardverno<<"'";
	if(lastseqno)
	    sql<<" and lastseqno="<<lastseqno;
	if(strlen(lasttranstime))
	    sql<<" and lasttranstime = '"<<lasttranstime<<"'";
	if(purseno)
	    sql<<" and purseno="<<purseno;
	if(devphytype)
	    sql<<" and devphytype="<<devphytype;
	if(sysid)
	    sql<<" and sysid="<<sysid;
	if(strlen(areacode))
	    sql<<" and areacode = '"<<areacode<<"'";
	if(strlen(doorlstver))
	    sql<<" and doorlstver = '"<<doorlstver<<"'";
	if(devusage)
	    sql<<" and devusage="<<devusage;
	if(strlen(batchno))
	    sql<<" and batchno like '"<<batchno<<"'";
	sql<<" order by deviceid";
	strcpy(h_sqlcmd,sql.str().c_str());
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
	    CHECK_DB_ERR;
	    return E_DB_PREPARE;
	}
	EXEC SQL DECLARE device_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
	    CHECK_DB_ERR;
	    return E_DB_CURSOR_DECLARE;
	}
	EXEC SQL  OPEN device_cur;
	if(SQLCODE)
	{
	    CHECK_DB_ERR;
	    return E_DB_CURSOR_OPEN;
	}
	while(1)
	{
	    deviceid=0;
	    devicename[0]=0;
	    devphyid[0]=0;
	    devtypecode[0]=0;
	    devverno[0]=0;
	    cardphytype[0]=0;
	    svrportcnt=0;
	    fdeviceid=0;
	    runstatus[0]=0;
	    status[0]=0;
	    commtype=0;
	    ip[0]=0;
	    portno=0;
	    svrportno=0;
	    deviceno=0;
	    baudrate=0;
	    cardverno[0]=0;
	    lastseqno=0;
	    lasttranstime[0]=0;
	    purseno=0;
	    maxamt=0;
	    devphytype=0;
	    sysid=0;
	    areacode[0]=0;
	    doorlstver[0]=0;
	    devusage=0;
		batchno[0]=0;
		remark[0]=0;
	    EXEC SQL FETCH device_cur INTO
	    :deviceid:indicator,
	    :devicename:indicator,
	    :devphyid:indicator,
	    :devtypecode:indicator,
	    :devverno:indicator,
	    :cardphytype:indicator,
	    :svrportcnt:indicator,
	    :fdeviceid:indicator,
	    :runstatus:indicator,
	    :status:indicator,
	    :commtype:indicator,
	    :ip:indicator,
	    :portno:indicator,
	    :svrportno:indicator,
	    :deviceno:indicator,
	    :baudrate:indicator,
	    :cardverno:indicator,
	    :lastseqno:indicator,
	    :lasttranstime:indicator,
	    :purseno:indicator,
	    :maxamt:indicator,
	    :devphytype:indicator,
	    :sysid:indicator,
	    :areacode:indicator,
	    :doorlstver:indicator,
	    :devusage:indicator,
	    :batchno:indicator,
	    :remark:indicator;
	    ret=SQLCODE;
	    if(ret)
	    {
	      CHECK_DB_ERR;
	      EXEC SQL CLOSE device_cur;
	      if(DB_NOTFOUND==ret)
	      {
	        if(row)
	          break;
	        else
	          return E_DB_DEVICE_N;
	      }
	      else
	        return E_DB_DEVICE_R;
	    }
	    row++;
	    outPack->lvol0=deviceid;
	    des2src(outPack->scert_no,devicename);	
//	    des2src(outPack->sbank_pwd,devphyid);
		des2src(outPack->sphone3,devphyid);
	    des2src(outPack->sbank_code,devtypecode);
	    des2src(outPack->sdate0,devverno);
	    des2src(outPack->scurrency_type,cardphytype);
	    outPack->lvol2=svrportcnt;
	    outPack->damt6=fdeviceid;
	    outPack->lvol4=atoi(runstatus);
	    des2src(outPack->sstatus1,status);
	    outPack->lvol5=commtype;
	    des2src(outPack->sstation0,ip);
	    outPack->lvol3=svrportno;
	    sprintf(outPack->sbank_code2,"%d",portno);
	    outPack->lvol1=deviceno;
	    outPack->lvol6=baudrate;
	    des2src(outPack->sserial1,cardverno);
	    outPack->lvol8=lastseqno;
	    des2src(outPack->scust_auth,batchno);
	    des2src(outPack->scust_auth2,lasttranstime);
	    sprintf(outPack->sbranch_code0,"%d",purseno);
	    outPack->lbank_acc_type=devphytype;
	    outPack->lserial0=sysid;
	    outPack->lserial1=atoi(areacode);
	//    des2src(outPack->,doorlstver);
	    outPack->damt5=devusage;
		des2src(outPack->vsvarstr0,remark);
	    PutRow(handle,outPack,pRetCode,szMsg);
	    if(row%9==0)
	      AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
}
