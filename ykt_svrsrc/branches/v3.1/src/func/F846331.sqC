/* --------------------------------------------
 * 创建日期: 2011-11-1
 * 程序作者: 聂龙海
 * 版本信息: 1.0.0.0
 * 程序功能: 一卡通网络电子钱包开户
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "busqc.h"
ESQL #include "acctrans.h"

EXEC SQL INCLUDE SQLCA;


static int doCustomer(int custid,T_t_customer& tCustomer)
{
	int ret=0;
	ret=DB_t_customer_read_lock_by_cur_and_custid(custid,&tCustomer);
	if(ret)
	{		
		if(DB_NOTFOUND==ret)
			return E_NOTEXIST_CUSTOMER;
		else
			return E_DB_CUSTOMER_R;
	}
	if(tCustomer.status[0]==STATUS_DELETE)
	{
		DB_t_customer_free_lock_cur();
		return E_CUSTOMER_LOGOUT;
	}
	if(tCustomer.eaccflag[0]=='1')
	{
		DB_t_customer_free_lock_cur();
		return E_CUST_EACC_OPENED;
	}
	tCustomer.useflag[0]='1';
	tCustomer.eaccflag[0]='1';
	des2src(tCustomer.lastsaved,CAccTrans::getInstance()->trans.sysdatetime);
	ret=DB_t_customer_update_lock_by_cur(&tCustomer);
	if(ret)
	{
		if(DB_NOTFOUND==ret)
			return E_NOTEXIST_CUSTOMER;
		else
			return E_DB_CUSTOMER_U;
	}
	return 0;
}


// 创建网络账户
int NewEpayAccount(int custid, int termid, char out_epay_acc[11], char out_activecode[33])
{
	int ret=0;
	CAccTrans *pAccTrans=CAccTrans::getInstance();
	TRANS& trans=pAccTrans->trans;
	
	trans.transcode=TC_EACCOPEN;
	trans.termid = termid;
	
	ret=pAccTrans->InitTrans();
	if(ret)
		return ret;
	
	//trans.termseqno = termseqno;

	// 检查客户
	T_t_customer tCustomer;
	memset(&tCustomer,0,sizeof(tCustomer));

	ret = doCustomer(custid, tCustomer);
	if(ret)
		return ret;

	// 创建网络账户
	T_t_netacc tEAccount;
	memset(&tEAccount,0,sizeof(tEAccount));
	ret=DB_t_netacc_read_by_custid(custid,&tEAccount);
	if(ret != DB_NOTFOUND) 
	{
		if(ret == 0)
			return E_EXIST_ACCNO; // 账户已经存在
		else
			return ret;
	}

	memset(&tEAccount,0,sizeof(tEAccount));

	ret = GetNewNetAccno(tEAccount.accno);												//获得最大帐号
	if (ret)
		return ret;

	des2src(tEAccount.accname,tCustomer.custname);
	des2src(tEAccount.subjno,SUBJECT_ESAVING);
	//des2src(tEAccount.accpwd,accpwd_crypt);
	tEAccount.custid=tCustomer.custid;
	//tEAccount.status[0]=STATUS_NORMAL;
	tEAccount.status[0]='0'; // 未激活状态
	getsysdate(tEAccount.lasttransdate);
	getsysdate(tEAccount.opendate);
	tEAccount.stoppayflag[0]='0'; // 解付状态
	//tEAccount.acctype=ACCTYPE_EACC; 	
	ret=DB_t_netacc_add(&tEAccount);
	if(ret)
	{
		if(DB_REPEAT==ret)
			return E_DB_ACCOUNT_E;
		else
			return E_DB_ACCOUNT_I;
	}

	// 添加电子账户激活信息
	EXEC SQL BEGIN DECLARE SECTION;
		char	hi_accno[10+1];
		char	plain_activecode[64+1];
		int 	hi_status;
	EXEC SQL END DECLARE SECTION;
	
	des2src(hi_accno,tEAccount.accno);
	 // 激活码与卡密码生成规则相同,明文
    get_init_passwd_by_man_id(tCustomer.idno,plain_activecode);   
 	hi_status = 0; // 有效
 	
	EXEC SQL INSERT INTO ykt_epay.t_epay_activeinfo
	(accno,	activecode,	status,	activetime,	ip,	remark,	id)
	VALUES(
		:hi_accno,
		:plain_activecode,
		:hi_status,
		NULL,
		NULL,
		NULL,
		ykt_epay.hibernate_sequence.nextval
		);
	if (SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return(SQLCODE);
	}

	if(out_epay_acc)
		strncpy(out_epay_acc,tEAccount.accno, 11); // 传出帐号

	if(out_activecode)
		strncpy(out_activecode,plain_activecode, 33); // 传出激活码

	//流水表
    T_t_transdtl transdtl;
    memset(&transdtl,0,sizeof(transdtl));
    //transdtl.amount=trans.totaltransamt;
	//transdtl.managefee=trans.totalfeeamt;
    //transdtl.paytype=trans.fundtype;
    //des2src(transdtl.voucherno,trans.voucherno);
    transdtl.status[0]=DTLSTATUS_SUCCESS;
    transdtl.revflag[0]='0';
    transdtl.errcode=0;
    transdtl.custid=tCustomer.custid;
    des2src(transdtl.stuempno,tCustomer.stuempno);
    strcpy(transdtl.custname,tCustomer.custname);
    strcpy(transdtl.transdate,trans.transdate);
    strcpy(transdtl.transtime,trans.transtime);
    strcpy(transdtl.accdate,trans.accdate);
    strcpy(transdtl.acctime,trans.acctime);
    transdtl.termid=trans.termid;
    transdtl.termseqno=trans.termseqno;
    transdtl.transcode=trans.transcode;
    des2src(transdtl.opercode,trans.opercode);
    //transdtl.cardno=tCard.cardno;
    //transdtl.cardbefbal=trans.cardbefbal;
    //transdtl.cardaftbal=trans.cardaftbal;
    //des2src(transdtl.showcardno,tCard.showcardno);	
	//transdtl.transflag=TF_DPS;
	//if(amtcmp(transdtl.cardaftbal,0)>0)
	//	trans.aftdpscnt=trans.dpscnt+1;
	//transdtl.cardcnt =trans.aftdpscnt;
    ret=DB_t_transdtl_add(&transdtl);
    if (ret)
    {
        if (DB_REPEAT==ret)
            return E_DB_TRANSDTL_E;
        else
            return E_DB_TRANSDTL_I;
    }
    
	return 0;
}

int F846331(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	int ret=0;
	int custid = rPack->lvol0; // 客户号
	int termid = TERMID_WEB; // 终端号
	
	char epay_acc[11]={0};
	char plain_activecode[33]={0};
	
	ret = NewEpayAccount(custid, termid, epay_acc, plain_activecode);
	if(ret)
		return ret;

	ST_CPACK aPack;
	memset(&aPack,0,sizeof(aPack));
	
	ST_PACK *outPack = &(aPack.pack);
	ResetNormalCPack(&aPack,0,1);

	SetCol(handle,0);
	SetCol(handle,F_LVOL0,F_SCUST_NO,F_SCUST_LIMIT,F_VSMESS,0);	
	outPack->lvol0=custid;
	des2src(outPack->scust_no,epay_acc);
	des2src(outPack->scust_limit,plain_activecode);

	//des2src(outPack->sdate3,pAccTrans->trans.accdate);
	//outPack->lwithdraw_flag=trans.termid;
	//outPack->lserial1=trans.termseqno;
	sprintf(outPack->vsmess,"客户[%d]电子钱包开户成功,电子钱包帐号[%s]",custid, epay_acc);
	//des2src(trans.remark,outPack->vsmess);
	PutRow(handle,outPack,pRetCode,szMsg);
	return 0;
}
