/* ----------------------------------------------------------
 * 程序名称：F847313.sqc
 * 创建日期：2007-02-06
 * 程序作者：韩海东
 * 版本信息：1.0.0.0
 * 程序功能：
 * ----------------------------------------------------------
 * ----------------------------------------------------------*/

#define _IN_SQC_                                  
#include <string.h>                               
#include <stdio.h>    
#include "errdef.h"  
#include "pubdb.h"  
#include "pubfunc.h"      
#include "fdsqc.h"                                

static int check(T_t_tif_rcvdtl *p)
{
	int ret=0;
	if(strlen(p->crc)==0)
	{
		return E_999_CRC;							//上传流水CRC校验错误
	}
	ret=IsInvalidDateTime(p->tx_date,"YYYYMMDD");
	if(ret)
	{
		return E_999_DATE;							//上传流水交易日期有误
	}
	ret=IsInvalidDateTime(p->tx_time,"HHMMSS");
	if(ret)
	{
		return E_999_TIME;							//上传流水交易时间有误
	}
	if((p->tx_mark!=0X99)&&(p->tx_mark!=0xFE)	)
	{
		return 	p->tx_mark+E_999_0X00;			//把返回码置为交易标记
	}
	if(p->in_bala- p->out_bala!=p->amount)
	{
		return E_999_CARD_BALANCE;					//上传流水出入卡余额有误
	}
	if(0X99==p->tx_mark)
	{
		if(p->amount<=0)
		{
			return E_999_AMT;							//上传流水交易发生金额有误
		}
	}
	else
	{
		//冲正交易,发生额为负数
		if(p->amount>=0)
		{
			return E_999_AMT;							//上传流水交易发生金额有误
		}
	}
	return 0;
}

int F847313(TRUSERID *handle,int iRequest,ST_PACK *in_pack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
		sqlint16 		indication=0;
   	EXEC SQL END DECLARE SECTION;
	int ret=0;
	//char temp[8+1]="";

	T_t_aif_account tAccount;
	ret=DB_t_aif_account_read_by_card_id_and_purse_id(in_pack->lvol5,in_pack->lvol6,&tAccount);
	if(ret)
	{
		writelog(LOG_ERR,"DB_t_aif_account_read_by_card_id_and_purse_id card_id[%d] purse_id[%d] error,errcode=[%d]",in_pack->lvol5,in_pack->lvol6,ret);
		*pRetCode = E_DB_ACCOUNT_R;
		goto L_RETU;
	}
	if(tAccount.nobala_num<=14)
	{
		//writelog(LOG_ERR,"DB_t_aif_account_read_by_card_id_and_purse_id card_id[%d] purse_id[%d] error,errcode=[%d]",in_pack->lvol5,in_pack->lvol6,ret);
		*pRetCode = E_NOT_REATH_CARDDB_NOBALA_TIMES;
		goto L_RETU;
	}

	//sprintf(temp,"%s%s",in_pack.sdate0,in_pack.stime0);
	if(memcmp(in_pack->sdate0,"缺失",4)!=0||memcmp(in_pack->stime0,"缺失",4)!=0)
	{	
		*pRetCode = E_INPUT_DATE_TIME_ERROR;
		goto L_RETU;
	}
	T_t_tif_rcvdtl tRcvdtl;
	memset(&tRcvdtl,0,sizeof(tRcvdtl));

	tRcvdtl.serial_no= in_pack->lvol4;							//上传端流水号
	tRcvdtl.tx_mark=153;							//999交易标记
	tRcvdtl.sys_id  = in_pack->lcert_code;						//上传工作站标识(前置机注册号)
	des2src(tRcvdtl.device_id, in_pack->sdate1);				//物理设备ID
	des2src(tRcvdtl.inpower_no,in_pack->stx_pwd);				//终端设备授权号
	tRcvdtl.comu_ver=19;					//通信版本号
	/*
	int ver = tRcvdtl.comu_ver / 10;
	if( 0x81 == tRcvdtl.comu_ver || 0x81 == ver )
	{
	//	tRcvdtl.run_reason = rPack->lbank_acc_type2;				//启动原因
		tRcvdtl.fee_code = in_pack->lbank_acc_type2;				// 将启动原因保存到收费科目中
	}
	else
	{
		tRcvdtl.fee_code = 0;
	}
	*/
	des2src(tRcvdtl.crc,"9999");				//CRC校验

	tRcvdtl.card_no= in_pack->lvol5;							//交易卡号
	tRcvdtl.purse_no = in_pack->lvol6;						//消费钱包号
	tRcvdtl.in_bala=D2I(in_pack->damt9*100);						//入卡金额
	tRcvdtl.out_bala = D2I(in_pack->damt10*100);						//出卡金额
	tRcvdtl.amount = D2I(in_pack->damt8*100);							//本次消费金额
	tRcvdtl.total_cnt= in_pack->lvol7;							//当前卡中帐户消费次数(累计使用次数)
	tRcvdtl.tx_code = 930031;								//交易代码
 	des2src(tRcvdtl.tx_date,in_pack->sdate2);		//发生日期(格式化输入的日期)
	des2src(tRcvdtl.tx_time,in_pack->stime2);			//发生时间(格式化输入的时间)
	getsystimestamp(tRcvdtl.col_timestamp);
	des2src(tRcvdtl.oper_no,in_pack->semp);
	//writelog(LOG_ERR,"-------DB_t_aif_account_read_by_card_id_and_purse_id card_id[%d] purse_id[%d] error,errcode=[%d]",in_pack->lvol5,in_pack->lvol6,ret);

	ret=check(&tRcvdtl);
	if(ret)
	{
		tRcvdtl.err_code=ret;
		if(tRcvdtl.tx_mark==2)
			tRcvdtl.status[0]='6';								//中途拔卡交易
		else
		{
			tRcvdtl.status[0]='5';								//无效交易
			strncpy(tRcvdtl.deal_date,tRcvdtl.col_timestamp,8);
			strncpy(tRcvdtl.deal_time,tRcvdtl.col_timestamp+8,6);
		}
	}
	else
		tRcvdtl.status[0]='1';
	g_dbchkerr=0;
	ret = DB_t_tif_rcvdtl_add(&tRcvdtl);
	if (ret)
	{
		g_dbchkerr=1;
		writelog(LOG_DEBUG,"serial_no[%d]card_no[%d]device_id[%s]tx_date[%s]tx_time[%s]",tRcvdtl.serial_no,tRcvdtl.card_no,tRcvdtl.device_id,tRcvdtl.tx_date,tRcvdtl.tx_time);
		if(DB_REPEAT==ret)
			return 0;
		else
			*pRetCode = E_DB_TRADESERIAL_I;
		goto L_RETU;
	}
	g_dbchkerr=1;
	return 0;
L_RETU:
	return -1;
}

