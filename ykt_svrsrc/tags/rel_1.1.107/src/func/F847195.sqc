/* --------------------------------------------
 * 程序名称: F847195.sqc
 * 创建日期: 30 8 2006
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能:  挂失
 * 备注信息:
 * --------------------------------------------*/
#define _IN_SQC_
ESQL #include <string.h>
ESQL #include <stdio.h>
ESQL #include "pubfunc.h"
ESQL #include "pubdb.h"
ESQL #include "pubdef.h"
ESQL #include "errdef.h"
ESQL #include "dbfunc.h"
ESQL #include "fdsqc.h"
//接口定义:
//学工号:		scust_auth
//密码:   		sphone
//是否校验密码:	lvol12  0-不校验 1-校验

int chk_card_pwd_by_card_id(int card_id,char *card_pwd)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32   hi_card_id =0;				//卡号
	char	   ho_password2[32 + 1] = "";			//数据库中的卡密码
	sqlint16   ho_pwd_ind2 = 0;
	EXEC SQL END DECLARE SECTION;
	char seed_key[17] = "";
	char in_pwd[33] = "";											//存放加密前的卡密钥
	char in_crypt_pwd[33] = "";									//存放加密后的卡密钥

	hi_card_id=card_id;
	des2src(in_pwd,card_pwd);									//卡密码
	trim(in_pwd);
	des2src(seed_key,STATIC_SEED_KEY);							//种子密钥
	EncodePwd(seed_key,in_pwd,in_crypt_pwd,0);						//加密
#ifdef ESQL_DB2	
	EXEC SQL SELECT A.PASSWORD  
		INTO :ho_password2:ho_pwd_ind2 
		FROM YKT_CUR.T_PIF_CARD  A
		WHERE  A.CARD_ID = :hi_card_id AND substr(A.state_id,1,1)<>'2'  fetch first 1 rows only  with ur;
#else
	EXEC SQL SELECT A.PASSWORD INTO :ho_password2:ho_pwd_ind2
		FROM YKT_CUR.T_PIF_CARD  A
		WHERE  A.CARD_ID = :hi_card_id AND substr(A.state_id,1,1)='1'  and rownum=1;
#endif
	if (SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__, &sqlca);
		writelog(LOG_ERR,"card_id[%d]",card_id);
		if(DB_NOTFOUND==SQLCODE)
			return E_CARDNO_NOT_EXIST;
		else
			return E_DB_CARD_R;
	}
	trim(ho_password2);
	trim(in_crypt_pwd);
	if (strcmp(in_crypt_pwd, ho_password2))
	{
		writelog(LOG_ERR,"input pwd[%s]db pwd[%s]",in_crypt_pwd,ho_password2);
		return E_CARD_PWD_DIFFER;			//密码输入错误
	}
	return 0;
}

int F847195(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
  	int ret = 0;
	int	card_id = 0;
	char Operator[33+1] = "";
	int	maindevice_id = 0;
	int	device_id = 0;
	char logicdate[11]="";
	char sysdate[11]="";
	char systime[9]="";
	double	dUniqno = 0;
	T_t_pif_cardlossinfo cardlossinfo;
	T_t_tif_black_sheet black_sheet;
	T_t_tif_tradeserial  tradeserial;
    T_t_tif_meslist tMesList;
	T_t_pif_card	tCard;

	memset(&tradeserial,0,sizeof(tradeserial));
	memset(&cardlossinfo,0,sizeof(cardlossinfo));
	memset(&black_sheet,0,sizeof(black_sheet));
	memset(&tMesList,0,sizeof(tMesList));
	memset(&tCard,0,sizeof(tCard));

	getsysdate(sysdate);
	getsystime(systime);
	ret=GetLogicDate(logicdate);								//业务日期
	if(ret)
	{
		*pRetCode=ret;
		goto L_RETU;
	}
	des2src(Operator,rPack->scust_limit);						//操作员号
	maindevice_id = rPack->lvol6;								//上传工作站标识
	device_id = rPack->lvol7;									//采集设备标识

	ret=get_tradecard_no_by_stupid(rPack->scust_auth,&card_id);	//卡标识
	if(ret)
	{
		writelog(LOG_ERR,"get_tradecard_no_by_stupid,errcode=[%d]stuemp_no[%s]",ret,rPack->scust_auth);
		if(DB_NOTFOUND==ret)
			*pRetCode=E_CARDNO_NOT_EXIST;
		else if(-811==ret)
		{
			writelog(LOG_ERR,"This customer have more than one card ");
			*pRetCode=E_TRANS_SCHCARD_TWICE;
		}			
		else
		{
			*pRetCode=E_DB_CARD_R;
		}
		goto L_RETU;
	}
	if(rPack->lvol12>0)
	{
		ret=chk_card_pwd_by_card_id(card_id,rPack->sphone);
		if(ret)
		{
			writelog(LOG_ERR,"chk_card_pwd_by_card_id,card_id=[%d],errcode=[%d]",card_id,ret);
			*pRetCode=ret;
			goto L_RETU;		
		}
	}
	//修改卡标志，置为正常状态
	ret=DB_t_pif_card_read_lock_by_cur_and_card_id(card_id, &tCard);
	if(ret)
	{
		writelog(LOG_ERR,"card_id[%d]",card_id);
		if(DB_NOTFOUND==ret)
			*pRetCode= E_CARDNO_NOT_EXIST;
		else
			*pRetCode= E_DB_CARD_R;
		goto L_RETU;
	}
	if(card_id!=tCard.card_id)
	{
		DB_t_pif_card_free_lock_by_cur();
		writelog(LOG_ERR,"card_id[%d] db card_id[%d]",card_id,tCard.card_id);
		*pRetCode=E_DB_CARD_R;
		goto L_RETU;
	}
	if('2'==tCard.state_id[CARDSTAT_TYPE_REG])
	{
		DB_t_pif_card_free_lock_by_cur();
		*pRetCode = E_CARDNO_LOGOUT;
		goto L_RETU;
	}
	if(STATE_TRUE==tCard.state_id[CARDSTAT_TYPE_LOST])
	{
		DB_t_pif_card_free_lock_by_cur();
		*pRetCode = E_CARDNO_LOST;
		goto L_RETU;
	}
	tCard.state_id[CARDSTAT_TYPE_LOST]=STATE_TRUE;
	//	修改卡状态为挂失
	ret=DB_t_pif_card_update_lock_by_cur(&tCard);
	if(ret)
	{
		writelog(LOG_ERR,"card_id[%d]",card_id);
		if(DB_NOTFOUND==ret)
			*pRetCode= E_CARDNO_NOT_EXIST;
		else
			*pRetCode= E_DB_CARD_U;
		goto L_RETU;
	}
	DB_t_pif_card_free_lock_by_cur();

	//	插入卡挂失有效期限表
/*
	ret=GetLostCardValiddate(sysdate,enddate);											//获得挂失有效期限
	if (ret)
	{
		*pRetCode = ret;
		goto L_RETU;
	}
	cardlossinfo.card_id = card_id;													//卡号
	des2src(cardlossinfo.begin_date,sysdate);											//起始日期
	des2src(cardlossinfo.end_date,enddate);											//截至日期
	des2src(cardlossinfo.operate_date,sysdate);										//操作日期
	des2src(cardlossinfo.operate_time,systime);										//操作时间
	cardlossinfo.state_id=STATE_VALID;												//有效
	ret = DB_t_pif_cardlossinfo_add(&cardlossinfo);
	if (ret)
	{
		*pRetCode = E_DB_CARDLOSSINFO_I;
		writelog(LOG_ERR,"errcode[%d] ",ret);
		goto L_RETU;
	}
*/
	//如果该卡号被冻结,则挂失时对黑名单不处理
	if(STATE_FALSE==tCard.state_id[CARDSTAT_TYPE_FREEZE])
	{
		//	插入黑名单表
		ret=DB_t_tif_black_sheet_del_by_card_id_and_is_ad(tCard.card_id,DELETE_BLACKLIST);
		if(ret)
		{
			if(ret!=DB_NOTFOUND)
			{
				*pRetCode=ret;
				goto L_RETU;
			}
		}
		ret=InsertToBlkList(tCard.card_id,ADD_BLACKLIST);
		if(ret)
		{
			*pRetCode=ret;
			writelog(LOG_ERR,"InsertToBlkList err[%d]",ret);
			goto L_RETU;
		}
		//广播黑名单
		AddXmlItemInt(tMesList.incontent, XML_KEY_CARDID,card_id);
		AddXmlItemInt(tMesList.incontent, XML_KEY_ADDDELSIGN,ADD_BLACKLIST);	//增删标志

		tMesList.pfunid=847102;
		tMesList.funid = 930005;
		tMesList.level = 1;
		ret=AddMsgLst(&tMesList);
		if(ret)
		{
			*pRetCode=ret;
			writelog(LOG_ERR,"AddMsgLst err[%d]",ret);
			goto L_RETU;
		}
	}
	//	准备数据插入交易流水表
	ret = getNewUniqNo(KEYTYPE_TRADESERIAL,&dUniqno);  					//获得最大流水号
	if(ret)
	{
		*pRetCode = ret;
		writelog(LOG_ERR,"ERRCODE = [%d]",ret);
		goto L_RETU;
	}
	des2src(tradeserial.operate_date,sysdate);											//发生日期
	des2src(tradeserial.operate_time,systime);											//发生时间
	des2src(tradeserial.collect_date,sysdate);												//采集日期
	des2src(tradeserial.collect_time,systime);												//采集时间
	des2src(tradeserial.enteract_date,logicdate);											//处理日期
	des2src(tradeserial.enteract_time,systime);											//处理时间
	tradeserial.serial_no = (int)dUniqno;										//流水号
	tradeserial.serial_type = TXCODE_CARD_LOSS;								//挂失
	tradeserial.serial_state = SERISTAT_NONEEDDEBT;							//流水状态
	tradeserial.maindevice_id = maindevice_id;									//上传工作站标识
	tradeserial.device_id = device_id;											//采集设备标识
	tradeserial.card_id = card_id;											//交易卡号
	tradeserial.customer_id=tCard.cosumer_id;									//客户号
	des2src(tradeserial.oper_code,Operator);

	ret = DB_t_tif_tradeserial_add(&tradeserial);
	if (ret)
	{
		writelog(LOG_ERR,"ret[%d]",ret);
		if(DB_REPEAT==ret)
			*pRetCode = E_DB_TRADESERIAL_E;
		else
			*pRetCode = E_DB_TRADESERIAL_I;
		goto L_RETU;
	}
	return 0;
L_RETU:
	return -1;
}
