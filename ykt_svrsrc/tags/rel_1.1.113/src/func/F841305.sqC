/* --------------------------------------------
 * 程序名称: F841305.sqc
 * 创建日期: Sep 29 2004
 * 程序作者: auto creat by wen jian
 * 版本信息: 1.0.0.0
 * 程序功能: update t_cit_student
 * --------------------------------------------
 * 修改日期: 
 * 修改人员: 
 * 修改描述: 
 * 版本信息: 
 * 备注信息: 
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "fdsqc.h"

EXEC SQL INCLUDE SQLCA;

int F841305(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char    	student_no[20+1]="";          	//学号
	sqlint32	study_type=0;                 	//学生类别
	char    	student_name[150+1]="";        	//姓名
	char    	sex[1+1]="";                  	//性别
	sqlint32	polity=0;                     	//政治面貌
	sqlint32	nation=0;                     	//民族
	char    	idcard[20+1]="";              	//身份证号
	char    	dept_no[10+1]="";             	//院系代码
	char    	dept_code[10+1]="";           	//专业代码
	char    	register_date[10+1]="";       	//入学日期
	char    	grade[8+1]="";                	//年级
	sqlint32	study_time=0;                 	//学制
	char    	tel[20+1]="";                 	//联系电话
	char    	address[150+1]="";            	//联系地址
	char    	comments[150+1]="";           	//备注
	sqlint16	indicator=0;
	EXEC SQL END DECLARE SECTION;


	int ret=0;
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	ResetNormalCPack(&aPack,0,1);

#ifdef DEBUG
	writelog(LOG_DEBUG,"student_no     :scust_auth     [%s]",rPack->scust_auth);

	writelog(LOG_DEBUG,"study_type     :lvol4          [%d]",rPack->lvol4);
	writelog(LOG_DEBUG,"student_name   :sname2         [%s]",rPack->sname2);
	writelog(LOG_DEBUG,"sex            :smarket_code   [%s]",rPack->smarket_code);
	writelog(LOG_DEBUG,"polity         :lvol1          [%d]",rPack->lvol1);
	writelog(LOG_DEBUG,"nation         :lvol0          [%d]",rPack->lvol0);
	writelog(LOG_DEBUG,"idcard         :sname          [%s]",rPack->sname);
	writelog(LOG_DEBUG,"dept_no        :scust_no2      [%s]",rPack->scust_no2);
	writelog(LOG_DEBUG,"dept_code      :scust_no       [%s]",rPack->scust_no);
	writelog(LOG_DEBUG,"register_date  :sorder0        [%s]",rPack->sorder0);
	writelog(LOG_DEBUG,"grade          :sbank_pwd      [%s]",rPack->sbank_pwd);
	writelog(LOG_DEBUG,"study_time     :lvol3          [%d]",rPack->lvol3);
	writelog(LOG_DEBUG,"tel            :scust_auth2    [%s]",rPack->scust_auth2);
	writelog(LOG_DEBUG,"address        :scusttypes     [%s]",rPack->scusttypes);
	writelog(LOG_DEBUG,"comments       :ssectypes      [%s]",rPack->ssectypes);
#endif
	Strncpy_t(student_no,rPack->scust_auth,sizeof(student_no));

	EXEC SQL DECLARE student_cur CURSOR FOR SELECT 
		study_type,
		student_name,
		sex,
		polity,
		nation,
		idcard,
		dept_no,
		dept_code,
		register_date,
		grade,
		study_time,
		tel,
		address,
		comments
	FROM ykt_cur.t_cit_student 
	WHERE 	student_no = :student_no 
 	FOR UPDATE;
	if(SQLCODE)
	{
		*pRetCode=E_DB_STUDENT_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  OPEN student_cur;
	if(SQLCODE)
	{
		*pRetCode=E_DB_STUDENT_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  FETCH student_cur INTO
		:study_type:indicator,
		:student_name:indicator,
		:sex:indicator,
		:polity:indicator,
		:nation:indicator,
		:idcard:indicator,
		:dept_no:indicator,
		:dept_code:indicator,
		:register_date:indicator,
		:grade:indicator,
		:study_time:indicator,
		:tel:indicator,
		:address:indicator,
		:comments:indicator;
	ret=SQLCODE;
	if(ret)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		EXEC SQL  CLOSE student_cur;
		if(DB_NOTFOUND==ret)
			*pRetCode=E_DB_STUDENT_N;
		else
			*pRetCode=E_DB_STUDENT_R;
		goto L_RETU;
	}
	study_type=rPack->lvol4;
	Strncpy_t(student_name,rPack->sname2,sizeof(student_name));
	Strncpy_t(sex,rPack->smarket_code,sizeof(sex));
	polity=rPack->lvol1;
	nation=rPack->lvol0;
	Strncpy_t(idcard,rPack->sname,sizeof(idcard));
	Strncpy_t(dept_no,rPack->scust_no2,sizeof(dept_no));
	Strncpy_t(dept_code,rPack->scust_no,sizeof(dept_code));
	Strncpy_t(register_date,rPack->sorder0,sizeof(register_date));
	Strncpy_t(grade,rPack->sbank_pwd,sizeof(grade));
	study_time=rPack->lvol3;
	Strncpy_t(tel,rPack->scust_auth2,sizeof(tel));
	Strncpy_t(address,rPack->scusttypes,sizeof(address));
	Strncpy_t(comments,rPack->ssectypes,sizeof(comments));

	EXEC SQL UPDATE ykt_cur.t_cit_student SET 
		study_type=:study_type,
		student_name=:student_name,
		sex=:sex,
		polity=:polity,
		nation=:nation,
		idcard=:idcard,
		dept_no=:dept_no,
		dept_code=:dept_code,
		register_date=:register_date,
		grade=:grade,
		study_time=:study_time,
		tel=:tel,
		address=:address,
		comments=:comments
	WHERE current of student_cur;
	ret=SQLCODE;
	if(ret)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		EXEC SQL  CLOSE student_cur;
		if(DB_NOTFOUND==ret)
			*pRetCode=E_DB_STUDENT_N;
		else
			*pRetCode=E_DB_STUDENT_U;
		goto L_RETU;
	}

	EXEC SQL  CLOSE student_cur;
	SetCol(handle,0);
	PutRow(handle,out_pack,pRetCode,szMsg);
	return 0;
L_RETU:
	return -1;
}
