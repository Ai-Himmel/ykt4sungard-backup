/* --------------------------------------------
 * 程序名称: F950099.sqc
 * 创建日期: Apr 28 2006
 * 程序作者: 汤成
 * 版本信息: 1.0.0.0
 * 程序功能: 下载指令
 * --------------------------------------------*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "cpack.h"
#include "errdef.h"
#include "pubdef.h"
#include "pubdb.h"
#include "pubfunc.h"
#include "dbfunc.h"
#include "fdsqc.h"
#include "dbfunc_foo.h"

EXEC SQL INCLUDE SQLCA;

//使用静态变量提高执行效率
EXEC SQL BEGIN DECLARE SECTION;
static	sqlint32 hi_deviceid = 0;			//999前置机注册号
static 	sqlint32 ho_mesid = 0;				//消息ID
static	sqlint32 ho_funid = 0;				//功能号
static	char h_devphy999_id[9] = "";		//终端设备ID
static	sqlint32	ho_devid = 0;
static	char h_incontent[801] = "";			//输入消息体数据
static	char h_curdatetime[27+1] = "";		//当前时间
static	sqlint32 hi_stateid = 0;				//消息状态
static	sqlint16  i = 0 ;					//指示变量
EXEC SQL END DECLARE SECTION;

int F950099(TRUSERID *handle,int iRequest,ST_PACK *in_pack,int *pRetCode,char *szMsg)
{
	int ret = 0;
	hi_deviceid = 0;				//999前置机注册号
	hi_stateid = 0;				//消息状态
	ho_mesid = 0;				//消息ID
	ho_funid = 0;				//功能号
	memset(h_devphy999_id,0,sizeof(h_devphy999_id));		//终端设备ID
	memset(h_incontent,0,sizeof(h_incontent));			//输入消息体数据
	memset(h_curdatetime,0,sizeof(h_curdatetime));		//当前时间

	ret=chk_dyn_key(in_pack->lcert_code,in_pack->scust_limit2);
	if(ret)
	{
		writelog(LOG_ERR,"subsys_id[%d]dyn_key[%s]",in_pack->lcert_code,in_pack->scust_limit2);
		*pRetCode = ret;
		goto L_RETU;
	}
	hi_deviceid = in_pack->lcert_code;		//读入999前置机注册号
	//查询消息队列(优先级最高,入队列时间最早的消息.)
	EXEC SQL SELECT A.MESID, A.FUNID, A.DEVID,A.INCONTENT
		INTO :ho_mesid:i,:ho_funid:i,:ho_devid:i,:h_incontent:i
		FROM YKT_CUR.T_TIF_MESLIST AS A
		WHERE DEVICE_ID = :hi_deviceid  and A.ECODE >0  and stateid<4 and ((A.FUNID=930005) or (A.PFUNID = 930000) or (A.SENDCOUNT< A.MAX_SEND_CNT))
		ORDER BY A.SENDCOUNT,A.LEVEL, A.INDT  FETCH FIRST 1 ROWS ONLY with ur;
	if(SQLCODE)			//没有消息直接返回
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		if(SQLCODE == DB_NOTFOUND)
		{
			//writelog(LOG_DEBUG,"subsys_id[%d]",in_pack->lcert_code);
			return 0;
		}
		else
		{
			*pRetCode = E_DB_MESLIST_R;
			goto L_RETU;
		}
	}

	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,0);
	SetCol(handle,F_LVOL1,F_LVOL2,F_LVOL3,F_SDATE0,F_VSVARSTR0,0);

	out_pack->lvol1 = ho_mesid;				//消息ID
	out_pack->lvol2 = ho_funid;				//功能号

	//des2src(out_pack->sdate0, h_devphy999_id);				//终端设备ID
	des2src(out_pack->vsvarstr0,h_incontent);
	getsysdatetime(h_curdatetime);
	/*
	if(ret)
	{
		ResetNormalCPack(&aPack,0,1);
		hi_stateid = MESLISTSTATE_ERROR;
	}
	else
		hi_stateid=MESLISTSTATE_START;
	*/
	hi_stateid=MESLISTSTATE_START;
	//writelog(LOG_DEBUG,"subsys_id[%d]mesid[%d]funid[%d]",in_pack->lcert_code,ho_mesid,ho_funid);
	EXEC SQL UPDATE YKT_CUR.T_TIF_MESLIST AS A
		SET A.STATEID = :hi_stateid,A.STARTDT = :h_curdatetime,A.SENDCOUNT = A.SENDCOUNT +1
		WHERE MESID = :ho_mesid;
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		*pRetCode = E_DB_MESLIST_U;
		writelog(LOG_ERR,"消息队列更新错误: SQLCODE [%d]",SQLCODE);
		goto L_RETU;
	}
	out_pack->lvol3 = ho_devid;
	PutRow(handle,out_pack,pRetCode,szMsg);
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
L_RETU:
	return -1;
	
}

