/* --------------------------------------------
 * 程序名称: F820404.sqc
 * 创建日期: Sep 29 2004
 * 程序作者: auto creat by wen jian
 * 版本信息: 1.0.0.0
 * 程序功能: query t_pif_cur_syspara
 * --------------------------------------------
 * 修改日期: 
 * 修改人员: 
 * 修改描述: 
 * 版本信息: 
 * 备注信息: 
 * --------------------------------------------*/

ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "fdsqc.h"

EXEC SQL INCLUDE SQLCA;

int F820404(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32	id=0;                         	//参数标识
	char    	value[50+1]="";               	//参数值
	char    	para_name[150+1]="";           	//参数名称
	char    	usetime[26+1]="";             	//生效时间
	char    	optime[26+1]="";              	//设置时间
	char    	unit[10+1]="";                	//参数单位
	char    	comments[150+1]="";           	//备注
	sqlint16	indicator=0;
	char    	h_sqlcmd[1024]="";
	EXEC SQL END DECLARE SECTION;

	int    ret=0;
	int    row=0;
	int    first=0;
	char sqltmp[500]="";
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

#ifdef DEBUG
	writelog(LOG_DEBUG,"id             :lvol0          [%d]",rPack->lvol0);
#endif

	ResetNormalCPack(&aPack,0,1);
	id=rPack->lvol0;

	strcpy(h_sqlcmd,"select  id, value, para_name, usetime, optime, unit, comments  from ykt_cur.t_pif_cur_syspara where is_display='1' ");
	if(id!=0)
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  id =%d ",id);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and id =%d ",id);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	strcat(h_sqlcmd," order by id ");
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		*pRetCode=E_DB_CUR_SYSPARA_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  DECLARE cur_syspara_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		*pRetCode=E_DB_CUR_SYSPARA_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  OPEN cur_syspara_cur;
	if(SQLCODE)
	{
		*pRetCode=E_DB_CUR_SYSPARA_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	SetCol(handle,0);
	SetCol(handle,F_LVOL0,F_SCARD0,F_SCUST_AUTH,F_SPAGER,F_SPHONE,F_SCUST_NO,F_SCUSTTYPES,0);
	while(1)
	{
		id=0;
		memset(value,0,sizeof(value));
		memset(para_name,0,sizeof(para_name));
		memset(usetime,0,sizeof(usetime));
		memset(optime,0,sizeof(optime));
		memset(unit,0,sizeof(unit));
		memset(comments,0,sizeof(comments));

		EXEC SQL  FETCH cur_syspara_cur INTO 
		:id:indicator,
		:value:indicator,
		:para_name:indicator,
		:usetime:indicator,
		:optime:indicator,
		:unit:indicator,
		:comments:indicator;
		ret=SQLCODE;
		if(ret)
		{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			EXEC SQL  CLOSE cur_syspara_cur;
			if(DB_NOTFOUND==ret)
			{
				if(row)
					break;
				else
					*pRetCode=E_DB_CUR_SYSPARA_N;
			}
			else
				*pRetCode=E_DB_CUR_SYSPARA_R;
			goto L_RETU;
		}

		out_pack->lvol0=id;
		Strncpy_t(out_pack->scard0,value,sizeof(out_pack->scard0));
		Strncpy_t(out_pack->scust_auth,para_name,sizeof(out_pack->scust_auth));
		Strncpy_t(out_pack->spager,usetime,sizeof(out_pack->spager));
		Strncpy_t(out_pack->sphone,optime,sizeof(out_pack->sphone));
		Strncpy_t(out_pack->scust_no,unit,sizeof(out_pack->scust_no));
		Strncpy_t(out_pack->scusttypes,comments,sizeof(out_pack->scusttypes));
		row++;
		PutRow(handle,out_pack,pRetCode,szMsg);
		if(row%15==0)
			AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
L_RETU:
	return -1;
}
