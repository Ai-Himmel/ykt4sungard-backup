/* --------------------------------------------
 * 程序名称: F846201.sqc
 * 创建日期: 2008-4-29
 * 程序作者: 李询
 * 版本信息: 1.0.0.0
 * 程序功能: 卡片查询
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/
#define _IN_SQC_
ESQL #include <string.h>
ESQL #include <stdio.h>
ESQL #include "pubfunc.h"
ESQL #include "pubdb.h"
ESQL #include "pubdef.h"
ESQL #include "errdef.h"
ESQL #include "dbfunc.h"
ESQL #include "busqc.h"
ESQL #include "acctrans.h"
ESQL #include "dbfunc_foo.h"

EXEC SQL INCLUDE SQLCA;

int F846106(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 cardtype = 0;
	char startno[11] = "";
	char endno[11] = "";
	char curno[11] = "";
	char opercode[7] = "";
	sqlint32 recordno=0;
	double usedcnt=0;
	double unusedcnt=0;
	char sqlcmd[1024] = "";
	sqlint16 indr = 0;
	EXEC SQL END DECLARE SECTION;
	char sqltmp[500]="";
	int ret=0;
	CAccTrans *pAccTrans=CAccTrans::getInstance();
	pAccTrans->clear();
	GetCpackDataString(rPack,pAccTrans->cpackdata);
	pAccTrans->trans.transcode=TC_CARDQRY;
	ret=pAccTrans->addOperDtl(rPack->semp);
	if(ret)
		return ret;
	int    rows=0;
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);
	memset(&aPack,0,sizeof aPack);
	SetCol(handle,F_LVOL0,F_LVOL1,F_SEMP_NO,F_SCUST_NO,F_SCUST_NO2,F_LSERIAL0,0);
	
	cardtype=rPack->lvol0;
	des2src(opercode,rPack->semp_no);
	
	
	sprintf(sqlcmd,"select recordno,cardtype,startno,curno,endno,usedcnt,unusedcnt,opercode from \
		ykt_cur.T_CARDBOOK WHERE status='1' ");

	if(cardtype>0){
		sprintf(sqltmp," and cardtype=%d ",cardtype);
		strcat(sqlcmd,sqltmp);
	}
	if(strlen(opercode)){
		sprintf(sqltmp," and opercode='%s' ",opercode);
		strcat(sqlcmd,sqltmp);
	}
	strcat(sqlcmd," order by recordno");
	
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,0);
	SetCol(handle,F_LVOL0,F_LVOL1,F_SCUST_NO,F_SCUST_NO2,F_SEMP,F_LVOL2,F_SORDER0,0);
	EXEC SQL PREPARE oper_stmt FROM :sqlcmd;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_DECLARE;
	}
	
	EXEC SQL DECLARE oper_grp_cur CURSOR FOR oper_stmt;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_DECLARE;
	}

	EXEC SQL OPEN oper_grp_cur;
	if(SQLCODE)
	{
		CHECK_DB_ERR;
		return E_DB_CURSOR_OPEN;
	}

	while(1)
	{
		recordno=0;
		memset(startno,0,sizeof startno);
		memset(endno,0,sizeof endno);
		memset(opercode,0,sizeof opercode);
		usedcnt=0;
		unusedcnt=0;
		cardtype=0;

		EXEC SQL FETCH oper_grp_cur INTO 
			:recordno:indr,
			:cardtype:indr,
			:startno:indr,
			:curno:indr,
			:endno:indr,
			:usedcnt:indr,
			:unusedcnt:indr,
			:opercode:indr;
		if(SQLCODE)
		{
			ret = SQLCODE;
			CHECK_DB_ERR;
			EXEC SQL CLOSE oper_grp_cur;
			if(DB_NOTFOUND == ret)
			{
				if(rows)
					break;
				else
					return E_DB_CARDBOOK_N;
			}
			return E_DB_CARDBOOK_R;
		}
		rows++;
		out_pack->lvol0=cardtype;
		out_pack->lserial0=recordno;
		des2src(out_pack->scust_no,startno);
		des2src(out_pack->scust_no2,endno);
		des2src(out_pack->semp_no,opercode);
		des2src(out_pack->sorder0,curno);
		out_pack->lvol1=usedcnt;
		out_pack->lvol2=unusedcnt;
		PutRow(handle,out_pack,pRetCode,szMsg);
		if(rows%15==0)
			AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);	
	return 0;
}
