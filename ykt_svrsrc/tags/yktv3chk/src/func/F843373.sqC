/* --------------------------------------------
 * 创建日期: 2008-05-28
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能: 客户类别设置
 * --------------------------------------------
 * 修改日期: 
 * 修改人员: 
 * 修改描述: 
 * 版本信息: 
 * 备注信息: 
 * --------------------------------------------*/
 ESQL #include <stdio.h>
 ESQL #include <stdlib.h>
 ESQL #include <string.h>
 ESQL #include "cpack.h"
 ESQL #include "errdef.h"
 ESQL #include "pubdef.h"
 ESQL #include "pubdb.h"
 ESQL #include "pubfunc.h"
 ESQL #include "dbfunc.h"
 ESQL #include "busqc.h"
 ESQL #include "acctrans.h"

int Read843373(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
		sqlint32	ho_custtype=0;                   	//客户类别代码
		char    	ho_custtypename[60+1]="";           	//客户类别名称
		sqlint32    ho_feetype=0;
		sqlint16	indicator=0;
		char    	h_sqlcmd[1024]="";
	EXEC SQL END DECLARE SECTION;

	int    ret=0;
	int    row=0;
	int    custtype=0;
	char sqltmp[500]="";
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

	ResetNormalCPack(&aPack,0,1);
	custtype=rPack->lvol0;

	strcpy(h_sqlcmd,"select custtype,custtypename,feetype from ykt_cur.t_custtype where 1=1 ");
	if(custtype!=0)
	{
		sprintf(sqltmp," and custtype =%d ",custtype);
		strcat(h_sqlcmd,sqltmp);
	}
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_CUTTYPEFEE_R;
	}
	EXEC SQL  DECLARE custtype_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_CUTTYPEFEE_R;
	}
	EXEC SQL  OPEN custtype_cur;
	if(SQLCODE)
	{
		db_chk_err(__FILE__,__LINE__,&sqlca);
		return E_DB_CUTTYPEFEE_R;
	}
	SetCol(handle,0);
	SetCol(handle,F_LVOL0,F_SCARD0,F_LVOL5,0);
	while(1)
	{
		ho_custtype=0;
		memset(ho_custtypename,0,sizeof(ho_custtypename));
		ho_feetype=0;

		EXEC SQL  FETCH custtype_cur INTO 
		:ho_custtype:indicator,
		:ho_custtypename:indicator,
		:ho_feetype:indicator;
		ret=SQLCODE;
		if(ret)
		{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			EXEC SQL  CLOSE custtype_cur;
			if(DB_NOTFOUND==ret)
			{
				if(row)
					break;
				else
					return E_DB_CUTTYPEFEE_N;
			}
			else
				return E_DB_CUTTYPEFEE_R;
		}
		out_pack->lvol0=ho_custtype;
		des2src(out_pack->scard0,ho_custtypename);
		out_pack->lvol5=ho_feetype;
		row++;
		PutRow(handle,out_pack,pRetCode,szMsg);
		if(row%15==0)
			AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
}

int Add843373(ST_PACK *rPack,char *szMsg)
{
	int ret=0;

	T_t_custtype tCuttype;

	memset(&tCuttype,0,sizeof(tCuttype));
	
	tCuttype.custtype=rPack->lvol0;
	des2src(tCuttype.custtypename,rPack->scard0);
	tCuttype.feetype=rPack->lvol5;
	tCuttype.useflag[0]='0';
	ret=DB_t_custtype_add(&tCuttype);
	if(ret)
	{
		if(DB_REPEAT==ret)
			return E_DB_CUTTYPEFEE_I;
		else
			return E_DB_CUTTYPEFEE_I;
	}
	return 0;
}
int Delete843373(ST_PACK *rPack,char *szMsg)
{

	int ret=0;
	int custtype=rPack->lvol0;
	T_t_custtype tCuttype;

	memset(&tCuttype,0,sizeof(tCuttype));
	if(custtype<1)
	{
		return E_CUTTYPE_NOT_EXIST;
	}
	ret=DB_t_custtype_read_by_custtype(custtype,&tCuttype);
	if(ret)
	{
		if(DB_NOTFOUND==ret)
			return E_DB_CUTTYPEFEE_N;
		else
			return E_DB_CUTTYPEFEE_R;
	}
	if(tCuttype.useflag[0]=='1')
	{
		return E_CUTTYPE_IN_USE;
	}
	ret=DB_t_custtype_del_by_custtype(custtype);
	if(ret)
	{
		if(DB_NOTFOUND==ret)
			return E_DB_CUTTYPEFEE_N;
		else
			return E_DB_CUTTYPEFEE_D;
	}
	return 0;
}
int Update843373(ST_PACK *rPack,char *szMsg)
{
	int ret=0;
	int	custtype=0;						//客户类别代码
	char custtypename[60+1]="";			//客户类别名称
	int	feetype=0;
	char sqlcmd[2048]="";
	custtype=rPack->lvol0;	
	feetype=rPack->lvol5;
	des2src(custtypename,rPack->scard0);	
	strcpy(sqlcmd,"update ykt_cur.t_custtype set  ");
	if(strlen(custtypename))
		sprintf(sqlcmd+strlen(sqlcmd)," custtypename='%s',",custtypename);
	if(feetype)
		sprintf(sqlcmd+strlen(sqlcmd)," feetype=%d,",feetype);
	sqlcmd[strlen(sqlcmd)-1]=0x20; 
	sprintf(sqlcmd+strlen(sqlcmd)," where custtype=%d ",custtype);
	ret=DynamicStmtExecute(sqlcmd);
	if(ret)
	{
		writelog(LOG_ERR,"sql:[%s]",sqlcmd);
		if(DB_NOTFOUND==ret)
			return E_DB_CUTTYPEFEE_N;
		else
			return E_DB_CUTTYPEFEE_U;
		goto L_RETU;
	}
	return 0;
L_RETU:
	return -1;
}
int F843373(TRUSERID * handle, int iRequest, ST_PACK * rPack, int *pRetCode, char *szMsg)
{
	int ret = 0;
	CAccTrans *pAccTrans=CAccTrans::getInstance();
	pAccTrans->clear();
	GetCpackDataString(rPack,pAccTrans->cpackdata);
	switch(rPack->sstatus0[0])
	{
		//添加
		case 'A':
			pAccTrans->trans.transcode=MAKETRANSCODEADD(TCM_CUSTTYPE);
			ret=Add843373(rPack,szMsg);
			break;
		//注销
		case 'D':
			pAccTrans->trans.transcode=MAKETRANSCODEDEL(TCM_CUSTTYPE);
			ret=Delete843373(rPack,szMsg);
			break;
		//修改
		case 'U':
			pAccTrans->trans.transcode=MAKETRANSCODEUPD(TCM_CUSTTYPE);
			ret=Update843373(rPack,szMsg);
			break;
		default:
			//查询
			pAccTrans->trans.transcode=MAKETRANSCODEQRY(TCM_CUSTTYPE);
			ret=Read843373(handle,iRequest,rPack,pRetCode,szMsg);
			break;
	}
	if(ret)
		return ret;
	ret=pAccTrans->addOperDtl(rPack->semp);
	if(ret)
		return ret;
	return 0;
}




