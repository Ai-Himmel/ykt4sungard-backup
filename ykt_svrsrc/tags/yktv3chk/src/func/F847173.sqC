/* --------------------------------------------
 * 创建日期: 2008-07-29
 * 程序作者: 闻剑
 * 版本信息: 1.0.0.0
 * 程序功能: 卡信息查询
 * --------------------------------------------*/
ESQL #include <stdio.h>
ESQL #include <stdlib.h>
ESQL #include <string.h>
ESQL #include "cpack.h"
ESQL #include "errdef.h"
ESQL #include "pubdef.h"
ESQL #include "pubdb.h"
ESQL #include "pubfunc.h"
ESQL #include "dbfunc.h"
ESQL #include "dbfunc_foo.h"
ESQL #include "acctrans.h"
ESQL #include "busqc.h"
ESQL #include <string>
ESQL #include <sstream>
ESQL using namespace std;
EXEC SQL INCLUDE SQLCA;

int F847173(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
////////////////////////////////////////////////////////////////////////////////
	EXEC SQL BEGIN DECLARE SECTION;
	sqlint32 cardno=0;
	sqlint32 cardtype=0;
	sqlint32 feetype=0;
	sqlint32 custid=0;
	char     showcardno[11]="";
	char     cardphyid[9]="";
	char     cardpwd[33]="";
	char     cardstatus[11]="";
	char     expiredate[9]="";
	char     lossflag[2]="";
	char     lossdate[9]="";
	char     opendate[9]="";
	char     closedate[9]="";
	char     lastsaved[31]="";
	char     status[2]="";
	sqlint16 indicator=0;
	char     h_sqlcmd[2048]="";
	EXEC SQL END DECLARE SECTION;

	int ret = 0;
	int row = 0;
	ST_CPACK aPack;
	ST_PACK *outPack = &(aPack.pack);
	ResetNormalCPack(&aPack,0,1);
	SetCol(handle,F_LVOL0,F_LSAFE_LEVEL,F_LVOL5,
	              F_LVOL1,F_SORDER0,F_SSTATION0,
	              F_STX_PWD,F_SSERIAL1,F_SDATE2,
	              F_SSTAT_TYPE,F_SDATE3,F_SDATE1,
	              F_SDATE2,F_SCUST_LIMIT2,F_SSTATUS1,
	              0);
	cardno=rPack->lvol0;
	cardtype=rPack->lsafe_level;
	feetype=rPack->lvol5;
	custid=rPack->lvol1;
	des2src(showcardno,rPack->sorder0);
	des2src(cardphyid,rPack->sstation0);
	des2src(cardpwd,rPack->stx_pwd);
	des2src(cardstatus,rPack->sserial1);
	des2src(expiredate,rPack->sdate2);
	des2src(lossflag,rPack->sstat_type);
	des2src(lossdate,rPack->sdate3);
	des2src(opendate,rPack->sdate1);
	des2src(closedate,rPack->sdate2);
	des2src(lastsaved,rPack->scust_limit2);
	des2src(status,rPack->sstatus1);

	stringstream sql;
	sql<<"SELECT ";
	sql<<"cardno,";
	sql<<"cardtype,";
	sql<<"feetype,";
	sql<<"custid,";
	sql<<"showcardno,";
	sql<<"cardphyid,";
	sql<<"cardpwd,";
	sql<<"cardstatus,";
	sql<<"expiredate,";
	sql<<"lossflag,";
	sql<<"lossdate,";
	sql<<"opendate,";
	sql<<"closedate,";
	sql<<"lastsaved,";
	sql<<"status ";
	sql<<" FROM ykt_cur.t_card ";
	sql<<" WHERE 1=1 ";
	if(cardno)
	    sql<<" and cardno="<<cardno;
	if(cardtype)
	    sql<<" and cardtype="<<cardtype;
	if(feetype)
	    sql<<" and feetype="<<feetype;
	if(custid)
	    sql<<" and custid="<<custid;
	if(strlen(showcardno))
	    sql<<" and showcardno = '"<<showcardno<<"'";
	if(strlen(cardphyid))
	    sql<<" and cardphyid = '"<<cardphyid<<"'";
	if(strlen(cardpwd))
	    sql<<" and cardpwd = '"<<cardpwd<<"'";
	if(strlen(cardstatus))
	    sql<<" and cardstatus = '"<<cardstatus<<"'";
	if(strlen(expiredate))
	    sql<<" and expiredate = '"<<expiredate<<"'";
	if(strlen(lossflag))
	    sql<<" and lossflag = '"<<lossflag<<"'";
	if(strlen(lossdate))
	    sql<<" and lossdate = '"<<lossdate<<"'";
	if(strlen(opendate))
	    sql<<" and opendate = '"<<opendate<<"'";
	if(strlen(closedate))
	    sql<<" and closedate = '"<<closedate<<"'";
	if(strlen(lastsaved))
	    sql<<" and lastsaved = '"<<lastsaved<<"'";
	if(strlen(status))
	    sql<<" and status = '"<<status<<"'";
	sql<<" order by cardno";
	strcpy(h_sqlcmd,sql.str().c_str());
	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
	    CHECK_DB_ERR;
	    return E_DB_PREPARE;
	}
	EXEC SQL DECLARE card_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
	    CHECK_DB_ERR;
	    return E_DB_CURSOR_DECLARE;
	}
	EXEC SQL  OPEN card_cur;
	if(SQLCODE)
	{
	    CHECK_DB_ERR;
	    return E_DB_CURSOR_OPEN;
	}
	while(1)
	{
	    cardno=0;
	    cardtype=0;
	    feetype=0;
	    custid=0;
	    showcardno[0]=0;
	    cardphyid[0]=0;
	    cardpwd[0]=0;
	    cardstatus[0]=0;
	    expiredate[0]=0;
	    lossflag[0]=0;
	    lossdate[0]=0;
	    opendate[0]=0;
	    closedate[0]=0;
	    lastsaved[0]=0;
	    status[0]=0;
	    EXEC SQL FETCH card_cur INTO
	    :cardno:indicator,
	    :cardtype:indicator,
	    :feetype:indicator,
	    :custid:indicator,
	    :showcardno:indicator,
	    :cardphyid:indicator,
	    :cardpwd:indicator,
	    :cardstatus:indicator,
	    :expiredate:indicator,
	    :lossflag:indicator,
	    :lossdate:indicator,
	    :opendate:indicator,
	    :closedate:indicator,
	    :lastsaved:indicator,
	    :status:indicator;
	    ret=SQLCODE;
	    if(ret)
	    {
	      CHECK_DB_ERR;
	      EXEC SQL CLOSE card_cur;
	      if(DB_NOTFOUND==ret)
	      {
	        if(row)
	          break;
	        else
	          return E_DB_CARD_N;
	      }
	      else
	        return E_DB_CARD_R;
	    }
		//		out_pack->lvol0=cardno;
		//		Strncpy_t(out_pack->scust_no,showid,sizeof(out_pack->scust_no));
		//		Strncpy_t(out_pack->smain_flag,is_main,sizeof(out_pack->smain_flag));
		//		Strncpy_t(out_pack->sbank_code,state_id,sizeof(out_pack->sbank_code));
		//		out_pack->lvol1=type_id;
		//		Strncpy_t(out_pack->scust_limit,password,sizeof(out_pack->scust_limit));
		//		out_pack->lvol2=custid;
		//		out_pack->lvol3=account_count;
		//		Strncpy_t(out_pack->smain_flag2,is_managefee,sizeof(out_pack->smain_flag2));
		//		out_pack->damt0=depositfee;
		//		out_pack->damt1=cost_fee;
		//		Strncpy_t(out_pack->spager,starttime,sizeof(out_pack->spager));
		//		Strncpy_t(out_pack->sphone,endtime,sizeof(out_pack->sphone));
		//		Strncpy_t(out_pack->sbank_acc,cardphyid,sizeof(out_pack->sbank_acc));
		//		out_pack->lvol4=phytype;
		//		Strncpy_t(out_pack->scusttypes,comments,sizeof(out_pack->scusttypes));
	    row++;
	    outPack->lvol0=cardno;
	    outPack->lvol1=cardtype;
	    outPack->lvol5=feetype;
	    outPack->lvol2=custid;
	    des2src(outPack->scust_no,showcardno);
	    des2src(outPack->sstation0,cardphyid);
	    des2src(outPack->stx_pwd,cardpwd);
	    des2src(outPack->sserial1,cardstatus);
	    des2src(outPack->sdate2,expiredate);
	    des2src(outPack->sstat_type,lossflag);
	    des2src(outPack->sdate3,lossdate);
	    des2src(outPack->sdate1,opendate);
	    des2src(outPack->sdate2,closedate);
	    des2src(outPack->scust_limit2,lastsaved);
	    PutRow(handle,outPack,pRetCode,szMsg);
	    if(row%15==0)
	      AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;

}
