/*************************************************************************/
/*          Auto ESQL code generator v2.0 by Lingguo.Kong                */
/*          CopyRight Kingstar Group All right reserved.                 */
/*          input : *.act  the script                                    */
/*          return : the sqlca.sqlcode                                   */
/*          mode name:                                                   */
/*          func name:                                                   */
/*          author:                                                      */
/*************************************************************************/

#include "v_tif_report_carddb_nobalance_stru.h"
#include "v_tif_report_erracc_stru.h"
#include "v_tif_report_totalacc_stru.h"
#include <stdio.h>
#include <stdlib.h>
#include <syslog.h>
#include <string.h>
#include "pubfunc.h"

EXEC SQL INCLUDE SQLCA;

int DB_v_tif_report_carddb_nobalance_open_select_by_c1()
{
	int bRet = 0;
	EXEC SQL BEGIN DECLARE SECTION;
	EXEC SQL END DECLARE SECTION;

	SQLCODE = 0;

	EXEC SQL DECLARE nobalance_c1 CURSOR FOR SELECT *
	FROM hhd.v_tif_report_carddb_nobalance
;
	bRet = SQLCODE;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		EXEC SQL CLOSE nobalance_c1;
		return(bRet);
	}

	EXEC SQL OPEN nobalance_c1;
	bRet = SQLCODE;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		EXEC SQL CLOSE nobalance_c1;
		return(bRet);
	}
	return 0;
}

int DB_v_tif_report_carddb_nobalance_fetch_select_by_c1(T_v_tif_report_carddb_nobalance *pv_tif_report_carddb_nobalance)
{
	int bRet = 0;
	EXEC SQL BEGIN DECLARE SECTION;
		char	account_id_2[16+1]="";
		char	cut_name_2[10+1]="";
		char	stuemp_no_2[20+1]="";
		char	classdept_no_2[20+1]="";
		double	db_bala_2=0;
		double	card_bala_2=0;
		double	diff_bala_2=0;
		sqlint32	card_type_2=0;
		sqlint16 indicator_2;
	EXEC SQL END DECLARE SECTION;

	SQLCODE = 0;

	EXEC SQL FETCH nobalance_c1 INTO
		:account_id_2:indicator_2,
		:cut_name_2:indicator_2,
		:stuemp_no_2:indicator_2,
		:classdept_no_2:indicator_2,
		:db_bala_2:indicator_2,
		:card_bala_2:indicator_2,
		:diff_bala_2:indicator_2,
		:card_type_2:indicator_2
;
	bRet = SQLCODE;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		EXEC SQL CLOSE nobalance_c1;
		return(bRet);
	}
	strncpy(pv_tif_report_carddb_nobalance->account_id,account_id_2,sizeof(pv_tif_report_carddb_nobalance->account_id)-1);
	strncpy(pv_tif_report_carddb_nobalance->cut_name,cut_name_2,sizeof(pv_tif_report_carddb_nobalance->cut_name)-1);
	strncpy(pv_tif_report_carddb_nobalance->stuemp_no,stuemp_no_2,sizeof(pv_tif_report_carddb_nobalance->stuemp_no)-1);
	strncpy(pv_tif_report_carddb_nobalance->classdept_no,classdept_no_2,sizeof(pv_tif_report_carddb_nobalance->classdept_no)-1);
	pv_tif_report_carddb_nobalance->db_bala=db_bala_2;
	pv_tif_report_carddb_nobalance->card_bala=card_bala_2;
	pv_tif_report_carddb_nobalance->diff_bala=diff_bala_2;
	pv_tif_report_carddb_nobalance->card_type=card_type_2;
	return 0;
}

int DB_v_tif_report_carddb_nobalance_close_select_by_c1()
{
	int bRet = 0;

	SQLCODE = 0;

	EXEC SQL CLOSE nobalance_c1;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		return(bRet);
	}
	return 0;
}

int DB_v_tif_report_erracc_open_select_by_c1()
{
	int bRet = 0;
	EXEC SQL BEGIN DECLARE SECTION;
	EXEC SQL END DECLARE SECTION;

	SQLCODE = 0;

	EXEC SQL DECLARE erracc_c1 CURSOR FOR SELECT *
	FROM hhd.v_tif_report_erracc
;
	bRet = SQLCODE;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		EXEC SQL CLOSE erracc_c1;
		return(bRet);
	}

	EXEC SQL OPEN erracc_c1;
	bRet = SQLCODE;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		EXEC SQL CLOSE erracc_c1;
		return(bRet);
	}
	return 0;
}

int DB_v_tif_report_erracc_fetch_select_by_c1(T_v_tif_report_erracc *pv_tif_report_erracc)
{
	int bRet = 0;
	EXEC SQL BEGIN DECLARE SECTION;
		char	account_id_3[16+1]="";
		char	cut_name_3[10+1]="";
		char	stuemp_no_3[20+1]="";
		double	last_freebala_3=0;
		double	cur_freebala_3=0;
		double	sum_trade_3=0;
		sqlint32	card_type_3=0;
		sqlint16 indicator_3;
	EXEC SQL END DECLARE SECTION;

	SQLCODE = 0;

	EXEC SQL FETCH erracc_c1 INTO
		:account_id_3:indicator_3,
		:cut_name_3:indicator_3,
		:stuemp_no_3:indicator_3,
		:last_freebala_3:indicator_3,
		:cur_freebala_3:indicator_3,
		:sum_trade_3:indicator_3,
		:card_type_3:indicator_3
;
	bRet = SQLCODE;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		EXEC SQL CLOSE erracc_c1;
		return(bRet);
	}
	strncpy(pv_tif_report_erracc->account_id,account_id_3,sizeof(pv_tif_report_erracc->account_id)-1);
	strncpy(pv_tif_report_erracc->cut_name,cut_name_3,sizeof(pv_tif_report_erracc->cut_name)-1);
	strncpy(pv_tif_report_erracc->stuemp_no,stuemp_no_3,sizeof(pv_tif_report_erracc->stuemp_no)-1);
	pv_tif_report_erracc->last_freebala=last_freebala_3;
	pv_tif_report_erracc->cur_freebala=cur_freebala_3;
	pv_tif_report_erracc->sum_trade=sum_trade_3;
	pv_tif_report_erracc->card_type=card_type_3;
	return 0;
}

int DB_v_tif_report_erracc_close_select_by_c1()
{
	int bRet = 0;

	SQLCODE = 0;

	EXEC SQL CLOSE erracc_c1;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		return(bRet);
	}
	return 0;
}
int DB_v_tif_report_totalacc_open_select_by_c1()
{
	int bRet = 0;
	EXEC SQL BEGIN DECLARE SECTION;
	EXEC SQL END DECLARE SECTION;

	SQLCODE = 0;

	EXEC SQL DECLARE totalacc_c1 CURSOR FOR SELECT *
	FROM hhd.v_tif_report_totalacc
;
	bRet = SQLCODE;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		EXEC SQL CLOSE totalacc_c1;
		return(bRet);
	}

	EXEC SQL OPEN totalacc_c1;
	bRet = SQLCODE;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		EXEC SQL CLOSE totalacc_c1;
		return(bRet);
	}
	return 0;
}

int DB_v_tif_report_totalacc_fetch_select_by_c1(T_v_tif_report_totalacc *pv_tif_report_totalacc)
{
	int bRet = 0;
	EXEC SQL BEGIN DECLARE SECTION;
		double	total_4=0;
		sqlint16 indicator_4;
	EXEC SQL END DECLARE SECTION;

	SQLCODE = 0;

	EXEC SQL FETCH totalacc_c1 INTO
		:total_4:indicator_4
;
	bRet = SQLCODE;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		EXEC SQL CLOSE totalacc_c1;
		return(bRet);
	}
	pv_tif_report_totalacc->total=total_4;
	return 0;
}

int DB_v_tif_report_totalacc_close_select_by_c1()
{
	int bRet = 0;

	SQLCODE = 0;

	EXEC SQL CLOSE totalacc_c1;
	if ((bRet) && (bRet != -1405))
	{
		char msg_sqlstate_buffer[1024]="";
		int rc=0;
		rc=sqlogstt(msg_sqlstate_buffer, 1024, 80, sqlca.sqlstate);
		if(!rc)
		{
			writelog(LOG_ERR,msg_sqlstate_buffer);
		}
		return(bRet);
	}
	return 0;
}


