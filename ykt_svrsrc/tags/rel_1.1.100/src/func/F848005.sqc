/* --------------------------------------------
 * 程序名称: F848005.c
 * 创建日期: 2005-09-19
 * 程序作者: 汤成
 * 版本信息: 1.0.0.0
 * 程序功能:门禁组人员分配
 * --------------------------------------------
 * 修改日期:
 * 修改人员:
 * 修改描述:
 * 版本信息:
 * 备注信息:
 * --------------------------------------------*/
#define _IN_SQC_
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include "pubfunc.h"
#include "pubdb.h"
#include "pubdef.h"
#include "errdef.h"
#include "dbfunc.h"
#include "fdsqc.h"

int F930117(TRUSERID *handle,int iRequest,ST_PACK *in_pack,int *pRetCode,char *szMsg);

static int CheckCard(T_t_pif_card * tCard)
{
	if(strncmp(tCard->state_id,CARDSTAT_REG,4)!=0)
	{
		if('2'==tCard->state_id[CARDSTAT_TYPE_REG])
			return  E_CARDNO_LOGOUT;
		else if(tCard->state_id[CARDSTAT_TYPE_LOST]==STATE_TRUE)
			return E_CARDNO_LOST;
		else if(tCard->state_id[CARDSTAT_TYPE_FREEZE]==STATE_TRUE)
			return E_CARDNO_FREEZE;
	}
	return 0;
}
int F848005(TRUSERID *handle,int iRequest,ST_PACK *in_pack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char txdate[9] = "";
	char txtime[7] = "";
	char card_phy_id[9] = "";
	char volume[13] = "";
	char oper_id[11] = "";
	char device_id[9] = "";
	sqlint32 group_id = 0;
	sqlint32 card_id = 0;
	sqlint16 ind = 0;
	EXEC SQL END DECLARE SECTION;
	int ret = 0;
	int rows = 0;
	ST_CPACK send_cpack;
	ST_PACK *send_pack = &send_cpack.pack;
	T_t_pif_card tCard;
	
	group_id = in_pack->lvol0;
	card_id = in_pack->lvol1;

	if( group_id < 1 )
	{
		*pRetCode = E_INPUT_GROUP_ID;
		goto L_RETU;
	}
	if( card_id < 1 )
	{
		*pRetCode = E_INPUT_CARDNO;
		goto L_RETU;
	}
	// 读取卡信息
	memset(&tCard,0,sizeof tCard);
	ret = DB_t_pif_card_read_by_card_id(card_id, &tCard);
	if( ret )
	{
		if( DB_NOTFOUND == ret )
		{
			*pRetCode = E_CARDNO_NOT_EXIST;
		}
		else
		{
			*pRetCode = E_DB_CARD_R;
		}
		goto L_RETU;
	}
	// 检查卡状态
	ret = CheckCard(&tCard);
	if( ret )
	{
		if( CARDSTAT_TYPE_LOST != ret )
		{
			*pRetCode = ret;
			goto L_RETU;
		}
	}
	getsysdate(txdate);
	getsystime(txtime);
	des2src(card_phy_id,tCard.physical_no);
	ret = GetNewVolume(KEYTYPE_DOOR_CARDLIST, volume);

	if(ret )
	{
		*pRetCode = ret;
		goto L_RETU;
	}
	des2src(oper_id,in_pack->scust_limit);
	// 删除原始数据先
	EXEC SQL DELETE FROM YKT_CUR.T_DOOR_DEVICE_CARDLIST
		WHERE DEVICE_ID IN (SELECT M.DEVICE_ID
			FROM YKT_CUR.T_DOOR_GROUP_MEMBER M,YKT_CUR.T_DOOR_OPER_RIGHT R
			WHERE M.DEVICE_ID = R.DEVICE_ID AND R.OPER_NO = :oper_id
			AND M.GROUP_ID = :group_id) AND CARD_NO=:card_id;
	ret = SQLCODE;
	if (ret )
	{
		db_chk_err(__FILE__,__LINE__, &sqlca);
		if( DB_NOTFOUND != ret )
		{
			*pRetCode = E_DB_DOOR_CARDLIST_D;
		}
		goto L_RETU;
	}
	// 增加数据
	EXEC SQL INSERT INTO YKT_CUR.T_DOOR_DEVICE_CARDLIST(DEVICE_ID,CARD_NO,
			CARD_SERIAL_NO,STATUS,TX_DATE,TX_TIME,VERSION,SEND_FLAG)
			SELECT M.DEVICE_ID,:card_id,:card_phy_id,'0',:txdate,:txtime,:volume,'0'
			FROM YKT_CUR.T_DOOR_GROUP_MEMBER M,YKT_CUR.T_DOOR_OPER_RIGHT R
			WHERE M.DEVICE_ID = R.DEVICE_ID AND R.OPER_NO = :oper_id
			AND M.GROUP_ID = :group_id;
	ret = SQLCODE;
	if( ret )
	{
		db_chk_err(__FILE__,__LINE__, &sqlca);
		if( DB_NOTFOUND == ret )
		{
			*pRetCode = E_DB_DOOR_GROUP_MEMBER_N;
		}
		else
		{
			*pRetCode = E_DB_DOOR_CARDLIST_I;
		}
		goto L_RETU;
	}
	// 发名单
	EXEC SQL DECLARE  query_cur CURSOR FOR
		SELECT C.DEVICE_ID FROM YKT_CUR.T_DOOR_DEVICE_CARDLIST C,
		YKT_CUR.T_DOOR_OPER_RIGHT R,YKT_CUR.T_DOOR_GROUP_MEMBER M
		WHERE R.OPER_NO = :oper_id AND R.DEVICE_ID = M.DEVICE_ID 
		AND M.GROUP_ID = :group_id AND C.DEVICE_ID=M.DEVICE_ID
		AND C.CARD_NO= :card_id;
	ret = SQLCODE;
	if (ret)
	{
		db_chk_err(__FILE__,__LINE__, &sqlca);
		*pRetCode = E_DB_DOOR_CARDLIST_R;
		goto L_RETU;
	}
	EXEC SQL OPEN query_cur;
	ret = SQLCODE;
	if (ret)
	{
		db_chk_err(__FILE__,__LINE__, &sqlca);
		*pRetCode = E_DB_DOOR_CARDLIST_R;
		goto L_RETU;
	}
	while(1)
	{
		memset(device_id,0,sizeof device_id);
		EXEC SQL FETCH query_cur INTO :device_id:ind;
		ret = SQLCODE;
		if( ret )
		{
			db_chk_err(__FILE__,__LINE__, &sqlca);
			EXEC SQL CLOSE query_cur;
			if( DB_NOTFOUND == ret )
			{
				if ( rows > 0 )
				{
					break;
				}
				else
				{
					*pRetCode = E_DB_DOOR_CARDLIST_N;
				}
				
			}
			else
			{
				*pRetCode = E_DB_DOOR_CARDLIST_R;
			}
			goto L_RETU;
		}
		rows++;
		
		memset(send_pack,0,sizeof send_pack);
		send_pack->lvol0 = 0;
		send_pack->lvol2 = 0;
		send_pack->lvol3 = card_id;
		send_pack->lvol5 = 0;
		Strncpy_t(send_pack->sdate0,device_id,sizeof send_pack->sdate0);
		ret = F930117(handle,iRequest,send_pack,pRetCode,szMsg);
		if( ret )
		{
			*pRetCode = ret;
			EXEC SQL CLOSE query_cur;
			goto L_RETU;
		}
	}
	return 0;
L_RETU:
	return  -1;
}





