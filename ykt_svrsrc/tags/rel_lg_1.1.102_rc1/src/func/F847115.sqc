/* --------------------------------------------
 * 程序名称: F847115.sqc
 * 创建日期: Sep 20 2004
 * 程序作者: auto creat by wen jian
 * 版本信息: 1.0.0.0
 * 程序功能: query t_pif_authcard
 * --------------------------------------------
 * 修改日期: 
 * 修改人员: 
 * 修改描述: 
 * 版本信息: 
 * 备注信息: 
 * --------------------------------------------*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "cpack.h"
#include "errdef.h"
#include "pubdef.h"
#include "pubdb.h"
#include "dbfunc.h"
#include "fdsqc.h"

EXEC SQL INCLUDE SQLCA;

int F847115(TRUSERID *handle,int iRequest,ST_PACK *rPack,int *pRetCode,char *szMsg)
{
	EXEC SQL BEGIN DECLARE SECTION;
	char    	begin_time[27]="";            	//注册时间
	char    	comments[150+1]="";           	//
	char    	end_time[27]="";              	//截至时间
	char    	password1[32+1]="";           	//授权卡密码1
	char    	password2[32+1]="";           	//授权卡密码2
	char    	physical_no[40+1]="";         	//物理卡号
	sqlint32	phytype=0;                    	//设备物理型号
	sqlint32	state_id=0;                   	//授权卡状态
	sqlint32	type_id=0;                    	//授权卡类别
	sqlint16	indicator=0;
	char    	h_sqlcmd[1024]="";
	EXEC SQL END DECLARE SECTION;

	int    ret=0;
	int    row=0;
	int    first=0;
	char sqltmp[500]="";
	ST_CPACK aPack;
	ST_PACK *out_pack = &(aPack.pack);

#ifdef DEBUG
	writelog(LOG_DEBUG,"begin_time     :sphone3        [%s]",rPack->sphone3);
	writelog(LOG_DEBUG,"comments       :scusttypes     [%s]",rPack->scusttypes);
	writelog(LOG_DEBUG,"end_time       :spager         [%s]",rPack->spager);
	writelog(LOG_DEBUG,"password1      :scust_limit    [%s]",rPack->scust_limit);
	writelog(LOG_DEBUG,"password2      :scust_limit2   [%s]",rPack->scust_limit2);
	writelog(LOG_DEBUG,"physical_no    :sbank_acc2     [%s]",rPack->sbank_acc2);
	writelog(LOG_DEBUG,"phytype        :lvol0          [%d]",rPack->lvol0);
	writelog(LOG_DEBUG,"state_id       :lvol1          [%d]",rPack->lvol1);
	writelog(LOG_DEBUG,"type_id        :lvol2          [%d]",rPack->lvol2);
#endif

	ResetNormalCPack(&aPack,0,1);
	Strncpy_t(begin_time,rPack->sphone3,sizeof(begin_time));
	Strncpy_t(comments,rPack->scusttypes,sizeof(comments));
	Strncpy_t(end_time,rPack->spager,sizeof(end_time));
	Strncpy_t(password1,rPack->scust_limit,sizeof(password1));
	Strncpy_t(password2,rPack->scust_limit2,sizeof(password2));
	Strncpy_t(physical_no,rPack->sbank_acc2,sizeof(physical_no));
	phytype=rPack->lvol0;
	state_id=rPack->lvol1;
	type_id=rPack->lvol2;

	strcpy(h_sqlcmd,"select  begin_time, comments, end_time, physical_no, phytype, state_id, type_id  from ykt_cur.t_pif_authcard ");
	if(strlen(begin_time))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  begin_time ='%s' ",begin_time);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and begin_time ='%s' ",begin_time);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(comments))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  comments ='%s' ",comments);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and comments ='%s' ",comments);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(end_time))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  end_time ='%s' ",end_time);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and end_time ='%s' ",end_time);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(password1))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  password1 ='%s' ",password1);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and password1 ='%s' ",password1);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(password2))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  password2 ='%s' ",password2);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and password2 ='%s' ",password2);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(strlen(physical_no))
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  physical_no ='%s' ",physical_no);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and physical_no ='%s' ",physical_no);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(phytype!=0)
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  phytype =%d ",phytype);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and phytype =%d ",phytype);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(state_id!=0)
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  state_id =%d ",state_id);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and state_id =%d ",state_id);
			strcat(h_sqlcmd,sqltmp);
		}
	}
	if(type_id!=0)
	{
		if(!first)
		{
			first=1;
			sprintf(sqltmp," where  type_id =%d ",type_id);
			strcat(h_sqlcmd,sqltmp);
		}
		else
		{
			sprintf(sqltmp," and type_id =%d ",type_id);
			strcat(h_sqlcmd,sqltmp);
		}
	}

	EXEC SQL PREPARE query_stmt FROM :h_sqlcmd;
	if(SQLCODE)
	{
		*pRetCode=E_DB_AUTHCARD_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  DECLARE authcard_cur CURSOR FOR query_stmt;
	if(SQLCODE)
	{
		*pRetCode=E_DB_AUTHCARD_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	EXEC SQL  OPEN authcard_cur;
	if(SQLCODE)
	{
		*pRetCode=E_DB_AUTHCARD_R;
		db_chk_err(__FILE__,__LINE__,&sqlca);
		goto L_RETU;
	}
	SetCol(handle,0);
	SetCol(handle,F_SPHONE3,F_SCUSTTYPES,F_SPAGER,F_SBANK_ACC2,F_LVOL0,F_LVOL1,F_LVOL2,0);
	while(1)
	{
		memset(begin_time,0,sizeof(begin_time));
		memset(comments,0,sizeof(comments));
		memset(end_time,0,sizeof(end_time));
		memset(physical_no,0,sizeof(physical_no));
		phytype=0;
		state_id=0;
		type_id=0;

		EXEC SQL  FETCH authcard_cur INTO 
		:begin_time:indicator,
		:comments:indicator,
		:end_time:indicator,
		:physical_no:indicator,
		:phytype:indicator,
		:state_id:indicator,
		:type_id:indicator;
		ret=SQLCODE;
		if(ret)
		{
			db_chk_err(__FILE__,__LINE__,&sqlca);
			EXEC SQL  CLOSE authcard_cur;
			if(DB_NOTFOUND==ret)
			{
				if(row)
					break;
				else
					*pRetCode=E_DB_AUTHCARD_N;
			}
			else
				*pRetCode=E_DB_AUTHCARD_R;
			goto L_RETU;
		}

		Strncpy_t(out_pack->sphone3,begin_time,sizeof(out_pack->sphone3));
		Strncpy_t(out_pack->scusttypes,comments,sizeof(out_pack->scusttypes));
		Strncpy_t(out_pack->spager,end_time,sizeof(out_pack->spager));
		Strncpy_t(out_pack->sbank_acc2,physical_no,sizeof(out_pack->sbank_acc2));
		out_pack->lvol0=phytype;
		out_pack->lvol1=state_id;
		out_pack->lvol2=type_id;
		row++;
		PutRow(handle,out_pack,pRetCode,szMsg);
		if(row%15==0)
			AnswerDataPart(handle,*pRetCode,szMsg);
	}
	AnswerData(handle,*pRetCode,szMsg);
	return 0;
L_RETU:
	return -1;
}
