##
## Properties Override
##

    #
    # Specify where to get the overridden properties. Updates should not be made
    # on this file but on the overridden version of this file. Furthermore, each
    # portal instance can have its own overriden property file following the
    # convention portal-companyid.properties.
    #
    # For example, one read order may be: portal.properties, then
    # portal-ext.properties, then portal-liferay.com.properties.
    #
    include-and-override=portal-ext.properties
    include-and-override=portal-${easyconf:companyId}.properties
    include-and-override=portal-test.properties

##
## Portal Context
##

    #
    # Specify the path of the portal servlet context. This is needed because
    # javax.servlet.ServletContext does not have access to the context path
    # until Java EE 5.
    #
    # Set this property if you deploy the portal to another path besides root.
    #
    portal.ctx=/

##
## Resource Repositories Root
##

    #
    # Specify the default root path for various repository and resource paths.
    #
    resource.repositories.root=${user.home}/liferay

##
## TCK
##

    #
    # Set the following to true to enable programmatic configuration to let the
    # Portlet TCK obtain a URL for each test. This should never be set to true
    # unless you are running the TCK tests.
    #
    tck.url=false

##
## Schema
##

    #
    # Set this to true to automatically create tables and populate with default
    # data if the database is empty.
    #
    schema.run.enabled=true

    #
    # Set this to to true to populate with the minimal amount of data. Set this
    # to false to populate with a larger amount of sample data.
    #
    schema.run.minimal=true

##
## Upgrade
##

    #
    # Input a list of comma delimited class names that implement
    # com.liferay.portal.upgrade.UpgradeProcess. These classes will run on
    # startup to upgrade older data to match with the latest version.
    #
    upgrade.processes=\
        com.liferay.portal.upgrade.UpgradeProcess_4_3_0,\
        com.liferay.portal.upgrade.UpgradeProcess_4_3_1,\
        com.liferay.portal.upgrade.UpgradeProcess_4_3_2,\
        com.liferay.portal.upgrade.UpgradeProcess_4_3_3,\
        com.liferay.portal.upgrade.UpgradeProcess_4_3_4,\
        com.liferay.portal.upgrade.UpgradeProcess_4_3_5,\
        com.liferay.portal.upgrade.UpgradeProcess_4_4_0

##
## Verify
##

    #
    # Input a list of comma delimited class name that implement
    # com.liferay.portal.integrity.VerifyProcess. These classes will run on
    # startup to verify and fix any integrity problems found in the database.
    #
    verify.processes=com.liferay.portal.verify.VerifyProcessSuite

    #
    # Specify the frequency for verifying the integrity of the database.
    #
    # Constants in VerifyProcess:
    #     public static final int ALWAYS = -1;
    #     public static final int NEVER = 0;
    #     public static final int ONCE = 1;
    #
    verify.frequency=1

##
## Auto Deploy
##

    #
    # Input a list of comma delimited class names that implement
    # com.liferay.portal.kernel.deploy.auto.AutoDeployListener. These classes
    # are used to process the auto deployment of WARs.
    #
    auto.deploy.listeners=\
        com.liferay.portal.deploy.auto.LayoutTemplateAutoDeployListener,\
        com.liferay.portal.deploy.auto.PortletAutoDeployListener,\
        com.liferay.portal.deploy.auto.ThemeAutoDeployListener,\
        com.liferay.portal.deploy.auto.exploded.tomcat.LayoutTemplateExplodedTomcatListener,\
        com.liferay.portal.deploy.auto.exploded.tomcat.PortletExplodedTomcatListener,\
        com.liferay.portal.deploy.auto.exploded.tomcat.ThemeExplodedTomcatListener

    #
    # Set the following to true to enable auto deploy of layout templates,
    # portlets, and themes.
    #
    auto.deploy.enabled=true

    #
    # Set the directory to scan for layout templates, portlets, and themes to
    # auto deploy.
    #
    auto.deploy.deploy.dir=${resource.repositories.root}/deploy

    #
    # Set the directory where auto deployed WARs are copied to. The application
    # server or servlet container must know to listen on that directory.
    # Different containers have different hot deploy paths. For example, Tomcat
    # listens on "${catalina.base}/webapps" whereas JBoss listens on
    # "${jboss.server.home.dir}/deploy". Set a blank directory to automatically
    # use the application server specific directory.
    #
    auto.deploy.dest.dir=
    auto.deploy.default.dest.dir=../webapps
    auto.deploy.geronimo.dest.dir=${org.apache.geronimo.base.dir}/deploy
    auto.deploy.geronimo-jetty.dest.dir=${org.apache.geronimo.base.dir}/deploy
    auto.deploy.geronimo-tomcat.dest.dir=${org.apache.geronimo.base.dir}/deploy
    auto.deploy.glassfish.dest.dir=${com.sun.aas.instanceRoot}/autodeploy
    auto.deploy.glassfish-tomcat.dest.dir=${com.sun.aas.instanceRoot}/autodeploy
    auto.deploy.jboss-jetty.dest.dir=${jboss.server.home.dir}/deploy
    auto.deploy.jboss-tomcat.dest.dir=${jboss.server.home.dir}/deploy
    auto.deploy.jetty.dest.dir=${jetty.home}/webapps
    auto.deploy.jonas-jetty.dest.dir=${jonas.base}/webapps/autoload
    auto.deploy.jonas-tomcat.dest.dir=${jonas.base}/webapps/autoload
    auto.deploy.tomcat.dest.dir=${catalina.base}/webapps
    auto.deploy.weblogic.dest.dir=${env.DOMAIN_HOME}/autodeploy

    #
    # Set the interval in milliseconds on how often to scan the directory for
    # changes.
    #
    auto.deploy.interval=10000

    #
    # Set the number of attempts to deploy a file before blacklisting it.
    #
    auto.deploy.blacklist.threshold=10

    #
    # Set the following to true if deployed WARs are unpacked. Set this to false
    # your application server has concurrency issues with deploying large WARs.
    #
    auto.deploy.unpack.war=true

    #
    # Set the following to true if you want the deployer to rename portlet.xml
    # to portlet-custom.xml. This is only needed when deploying the portal on
    # WebSphere 6.1.x with a version before 6.1.0.7 because WebSphere's portlet
    # container will try to process a portlet at the same time that Liferay is
    # trying to process a portlet.
    #
    auto.deploy.custom.portlet.xml=false

    #
    # Set this to 1 if you are using JBoss' PrefixDeploymentSorter. This will
    # append a 1 in front of your WAR name. For example, if you are deploying a
    # portlet called test-portlet.war, it will deploy it to 1test-portlet.war.
    # JBoss now knows to load this portlet after the other WARs have loaded.
    # However, it will remove the 1 from the context path.
    #
    # Modify /server/default/conf/jboss-service.xml.
    # See org.jboss.deployment.scanner.PrefixDeploymentSorter.
    #
    auto.deploy.jboss.prefix=

    #
    # Set the path to Tomcat's configuration directory. This property is used to
    # auto deploy exploded WARs. Tomcat context XML fiels found in the auto
    # deploy directory will be copied to Tomcat's configuration directory. The
    # context XML file must have a docBase attribute that points to a valid WAR
    # directory.
    #
    auto.deploy.tomcat.conf.dir=../conf/Catalina/localhost

    #
    # Set the path to Tomcat's global class loader. This property is only used
    # by Tomcat in a standalone environment.
    #
    auto.deploy.tomcat.lib.dir=../common/lib/ext

    #
    # Set the URLs of Libraries that might be needed to download during the
    # auto deploy process
    #
    library.download.url.quercus.jar=http://lportal.svn.sourceforge.net/viewvc/*checkout*/lportal/portal/trunk/lib/development/quercus.jar
    library.download.url.resin-util.jar=http://lportal.svn.sourceforge.net/viewvc/*checkout*/lportal/portal/trunk/lib/development/resin-util.jar
    library.download.url.script-10.jar=http://lportal.svn.sourceforge.net/viewvc/*checkout*/lportal/portal/trunk/lib/development/script-10.jar

##
## Hot Deploy
##

    #
    # Input a list of comma delimited class names that implement
    # com.liferay.portal.kernel.deploy.hot.HotDeployListener. These classes are
    # used to process the deployment and undeployment of WARs at runtime.
    #
    # Note: PluginPackageHotDeployListener must always be first.
    #
    hot.deploy.listeners=\
        com.liferay.portal.deploy.hot.PluginPackageHotDeployListener,\
        com.liferay.portal.deploy.hot.LayoutTemplateHotDeployListener,\
        com.liferay.portal.deploy.hot.PortletHotDeployListener,\
        com.liferay.portal.deploy.hot.ThemeHotDeployListener,\
        com.liferay.portal.deploy.hot.ThemeLoaderHotDeployListener

##
## Plugin
##

    #
    # Input a list of comma delimited supported plugin types.
    #
    plugin.types=portlet,theme,layout-template

    #
    # Input a list of Liferay plugin repositories separated by \n characters.
    #
    plugin.repositories.trusted=http://plugins.liferay.com/official
    plugin.repositories.untrusted=http://plugins.liferay.com/community

    #
    # Set this property to false to avoid receiving on screen notifications
    # when there is a new version of an installed plugin.
    #
    plugin.notifications.enabled=false

    #
    # Input a list of plugin packages ids separated by \n characters.
    # Administrators won't be notified when a new version of these plugins are
    # available. The ids are of the form groupId/artifactId. You can also end
    # the id with an asterisk to match any id that start with the previous
    # character.
    #
    #plugin.notifications.packages.ignored=liferay/sample-jsp-portlet

##
## Portlet
##

    #
    # Set this property to set the default virtual path for all hot deployed
    # portlets. See liferay-portlet-app_4_3_0.dtd and the virtual-path element
    # for more information.
    #
    portlet.virtual.path=

##
## Theme
##

    #
    # Set this property to true to load the theme's merged CSS files for faster
    # loading for production. Set this property to false for easier debugging
    # for development. You can also disable fast loading by setting the URL
    # parameter "css_fast_load" to "0".
    #
    theme.css.fast.load=false

    #
    # Set this property to set the default virtual path for all hot deployed
    # themes. See liferay-look-and-feel_4_3_0.dtd and the virtual-path element
    # for more information.
    #
    theme.virtual.path=

    #
    # Set this with an absolute path to specify where imported theme files from
    # a LAR will be stored. This path will override the file-storage path
    # specified in liferay-theme-loader.xml.
    #
    theme.loader.storage.path=

    #
    # Themes can be imported via LAR files. Set this to true if imported themes
    # should use a new theme id on every import. This will ensure that a copy of
    # the old theme is preserved in the theme loader storage path. However, this
    # also means that a lot of themes that are no longer used remain in the file
    # system. It is recommended that you set this to false.
    #
    theme.loader.new.theme.id.on.import=false

##
## Resource Actions
##

    #
    # Input a list of comma delimited resource action configurations that will
    # be read from the class path.
    #
    resource.actions.configs=resource-actions/default.xml

##
## Model Hints
##

    #
    # Input a list of comma delimited model hints configurations.
    #
    model.hints.configs=\
        META-INF/portal-model-hints.xml,\
        META-INF/workflow-model-hints.xml,\
        META-INF/ext-model-hints.xml,\
        META-INF/portlet-model-hints.xml

##
## Spring
##

    #
    # Input a list of comma delimited Spring configurations.
    #
    spring.configs=\
        META-INF/activemq-spring-jms.xml,\
        META-INF/data-source-spring.xml,\
        META-INF/misc-spring.xml,\
        META-INF/counter-spring.xml,\
        META-INF/documentlibrary-spring.xml,\
        META-INF/lock-spring.xml,\
        META-INF/mail-spring.xml,\
        META-INF/mail-spring-jms.xml,\
        META-INF/portal-spring.xml,\
        META-INF/portal-spring-jcr.xml,\
        META-INF/portal-spring-jms.xml,\
        META-INF/ext-spring.xml

    #
    # Set the bean name for the Liferay data source.
    #
    spring.hibernate.data.source=liferayDataSource

    #
    # Set the bean name for the Liferay session factory.
    #
    spring.hibernate.session.factory=&liferaySessionFactory

##
## Hibernate
##

    #
    # Input a list of comma delimited Hibernate configurations.
    #
    hibernate.configs=\
        META-INF/counter-hbm.xml,\
        META-INF/mail-hbm.xml,\
        META-INF/portal-hbm.xml,\
        META-INF/ext-hbm.xml

    #
    # Use the Liferay SQL dialect because it will automatically detect the proper
    # SQL dialect based on your connection URL.
    #
    hibernate.dialect=com.liferay.portal.spring.hibernate.DynamicDialect

    #
    # Set the Hibernate connection release mode. You should not modify this
    # unless you know what you're doing. The default setting works best for
    # Spring managed transactions. See the method buildSessionFactory in class
    # org.springframework.orm.hibernate3.LocalSessionFactoryBean and search for
    # the phrase "on_close" to understand how this works.
    #
    #hibernate.connection.release_mode=on_close

    #
    # Set the Hibernate cache provider. Ehcache is recommended in a clustered
    # environment. See the property "net.sf.ehcache.configurationResourceName"
    # for detailed configuration.
    #
    hibernate.cache.provider_class=com.liferay.util.dao.hibernate.EhCacheProvider
    #hibernate.cache.provider_class=net.sf.hibernate.cache.HashtableCacheProvider
    #hibernate.cache.provider_class=com.liferay.portal.spring.hibernate.OSCacheProvider

    #
    # This property is used if Hibernate is configured to use Ehcache's
    # cache provider.
    #
    net.sf.ehcache.configurationResourceName=/ehcache/hibernate.xml

    #
    # Uncomment the following in a clustered environment.
    #
    #net.sf.ehcache.configurationResourceName=/ehcache/hibernate-clustered.xml

    #
    # Set other Hibernate cache settings.
    #
    hibernate.cache.use_query_cache=true
    hibernate.cache.use_second_level_cache=true
    hibernate.cache.use_minimal_puts=true
    hibernate.cache.use_structured_entries=false

    #
    # Uncomment these properties to disable Hibernate caching.
    #
    #hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider
    #hibernate.cache.use_query_cache=false
    #hibernate.cache.use_second_level_cache=false

    #
    # Set the JDBC batch size to improve performance. However, if you're using
    # Oracle 9i, you must set the batch size to 0 as a workaround for a hanging
    # bug in the Oracle driver. See http://support.liferay.com/browse/LEP-1234
    # for more information.
    #
    hibernate.jdbc.batch_size=20
    #hibernate.jdbc.batch_size=0

    #
    # Set other miscellaneous Hibernate properties.
    #
    hibernate.jdbc.use_scrollable_resultset=true
    hibernate.bytecode.use_reflection_optimizer=true
    hibernate.show_sql=false

    #
    # Use the classic query factory until WebLogic and Hibernate 3 can get
    # along. See http://www.hibernate.org/250.html#A23 for more information.
    #
    hibernate.query.factory_class=org.hibernate.hql.classic.ClassicQueryTranslatorFactory

##
## Custom SQL
##

    #
    # Input a list of comma delimited custom SQL configurations.
    #
    custom.sql.configs=custom-sql/default.xml

    #
    # Some databases do not recognize a NULL IS NULL check. Set the
    # "custom.sql.function.isnull" and "custom.sql.function.isnotnull"
    # properties for your specific database.
    #
    # There is no need to manually set these properties because
    # com.liferay.portal.spring.hibernate.DynamicDialect already sets it.
    # However, these properties are set so that you can see how you can override
    # it for a database that DynamicDialect does not yet know how to auto
    # configure.
    #

    #
    # DB2
    #
    #custom.sql.function.isnull=CAST(? AS VARCHAR(32672)) IS NULL
    #custom.sql.function.isnotnull=CAST(? AS VARCHAR(32672)) IS NOT NULL

    #
    # MySQL (for testing only)
    #
    #custom.sql.function.isnull=IFNULL(?, '1') = '1'
    #custom.sql.function.isnotnull=IFNULL(?, '1') = '0'

    #
    # Sybase
    #
    #custom.sql.function.isnull=ISNULL(?, '1') = '1'
    #custom.sql.function.isnotnull=ISNULL(?, '1') = '0'

##
## Ehcache
##

    #
    # Set the classpath to the location of the Ehcache config file for internal
    # caches. Edit the file specified in the property
    # "ehcache.multi-vm.config.location" to enable clustered cache.
    #
    ehcache.single.vm.config.location=/ehcache/liferay-single-vm.xml
    ehcache.multi.vm.config.location=/ehcache/liferay-multi-vm.xml

    #
    # Uncomment the following in a clustered environment.
    #
    #ehcache.multi.vm.config.location=/ehcache/liferay-multi-vm-clustered.xml

##
## Commons Pool
##

    #
    # Commons Pool is used to pool and recycle objects that are used very often.
    # This can help lower memory usage. There is some debate over the
    # synchronization issues related to Commons Pool. Set this to false to
    # disable object pooling.
    #
    commons.pool.enabled=false

##
## JavaScript
##

    #
    # Set a list of JavaScript files that will be loaded programmatically in
    # /html/common/themes/top_js.jsp.
    #
    # The ordering of the JavaScript files is important. Specifically, all
    # JQuery scripts should go first.
    #
    # The Liferay scripts are grouped in such a way, that the first grouping
    # denotes utility scripts that are used by the second and third groups. The
    # second grouping denotes utility classes that rely on the first group, but
    # does not rely on the second or third group. The third grouping denotes
    # modules that rely on the first and second group.
    #
    javascript.files=\
        \
        #
        # JQuery scripts
        #
        \
        jquery/jquery.js,\
        jquery/cookie.js,\
        jquery/dimensions.js,\
        jquery/hover_intent.js,\
        jquery/interface.js,\
        jquery/interface.patch.js,\
        jquery/j2browse.js,\
        jquery/jeditable.js,\
        jquery/json.js,\
        jquery/media.js,\
        jquery/tabs.js,\
        \
        #
        # Miscellaneous scripts
        #
        \
        misc/class.js,\
        misc/swfobject.js,\
        \
        #
        # Liferay base utility scripts
        #
        \
        liferay/liferay.js,\
        liferay/browser.js,\
        liferay/util.js,\
        liferay/language.js,\
        liferay/layout.js,\
        \
        #
        # Liferay utility scripts
        #
        \
        liferay/ajax.js,\
        liferay/animate.js,\
        liferay/coordinates.js,\
        liferay/ldrag.js,\
        #liferay/leditable.js,\
        liferay/lresize.js,\
        liferay/popup.js,\
        liferay/portal.js,\
        liferay/portlet.js,\
        liferay/publisher.js,\
        \
        #
        # Liferay modules
        #
        \
        liferay/auto_fields.js,\
        liferay/color_picker.js,\
        liferay/columns.js,\
        liferay/dock.js,\
        liferay/dynamic_select.js,\
        liferay/freeform.js,\
        liferay/layout_configuration.js,\
        liferay/layout_exporter.js,\
        liferay/menu.js,\
        liferay/messaging.js,\
        liferay/notice.js,\
        liferay/navigation.js,\
        liferay/session.js,\
        liferay/tags_selector.js,\
        liferay/upload.js

    #
    # Set this property to true to load the combined JavaScript files from the
    # property "javascript.files" into one compacted file for faster loading for
    # production. Set this property to false for easier debugging for
    # development. You can also disable fast loading by setting the URL
    # parameter "js_fast_load" to "0".
    #
    javascript.fast.load=false

    #
    # Set the following to true to enable the display of JavaScript logging.
    #
    javascript.log.enabled=false

##
## SQL Data
##

    #
    # Set the default SQL IDs for common objects.
    #
    sql.data.com.liferay.portal.model.Country.country.id=19
    sql.data.com.liferay.portal.model.Region.region.id=5
    sql.data.com.liferay.portal.model.ListType.account.address=10000
    sql.data.com.liferay.portal.model.ListType.account.email.address=10004
    sql.data.com.liferay.portal.model.ListType.contact.email.address=11003
    sql.data.com.liferay.portal.model.ListType.organization.status=12017

##
## Company
##

    #
    # This sets the default web id. Omniadmin users must belong to the company
    # with this web id.
    #
    company.default.web.id=liferay.com

    #
    # The portal can authenticate users based on their email address, screen
    # name, or user id.
    #
	#company.security.auth.type=emailAddress
	company.security.auth.type=screenName
    #company.security.auth.type=userId

    #
    # Set this to true to ensure users login with https.
    #
    company.security.auth.requires.https=false

    #
    # Set the following to true to allow users to select the "remember me"
    # feature to automatically login to the portal.
    #
    company.security.auto.login=true

    #
    # Set the following to the maximum age (in number of seconds) of the browser
    # cookie that enables the "remember me" feature. A value of 31536000
    # signifies a lifespan of one year. A value of -1 signifies a lifespan of a
    # browser session.
    #
    # Rather than setting this to 0, set the property
    # "company.security.auto.login" to false to disable the "remember me"
    # feature.
    #
    company.security.auto.login.max.age=31536000

    #
    # Set the following to true to allow users to ask the portal to send them
    # their password.
    #
    company.security.send.password=true

    #
    # Set the following to true to allow strangers to create accounts and
    # register themselves on the portal.
    #
    company.security.strangers=true

    #
    # Set the following to true if strangers can create accounts with email
    # addresses that match the company mail suffix. This property is not used
    # unless "company.security.strangers" is also set to true.
    #
    company.security.strangers.with.mx=true

    #
    # Set the following to true if strangers who create accounts need to be
    # verified via email.
    #
    company.security.strangers.verify=false

    #
    # Set the following to true to allow community administrators to use their
    # own logo instead of the enterprise logo.
    #
    company.security.community.logo=true

##
## Users
##

    #
    # Set the following to false if users cannot be deleted.
    #
    users.delete=true

    #
    # Set the following to true to always autogenerate user screen names even if
    # the user gives a specific user screen name.
    #
    users.screen.name.always.autogenerate=false

    #
    # Input a class name that extends
    # com.liferay.portal.security.auth.ScreenNameGenerator. This class will be
    # called to generate user screen names.
    #
    users.screen.name.generator=com.liferay.portal.security.auth.ScreenNameGenerator

    #
    # Input a class name that extends
    # com.liferay.portal.security.auth.ScreenNameValidator. This class will be
    # called to validate user ids.
    #
    users.screen.name.validator=com.liferay.portal.security.auth.ScreenNameValidator
    #users.screen.name.validator=com.liferay.portal.security.auth.LiberalScreenNameValidator

    #
    # Set the maximum file size for user portraits. A value
    # of 0 for the maximum file size can be used to indicate unlimited file
    # size. However, the maximum file size allowed by the system is set in
    # property "com.liferay.util.servlet.UploadServletRequest.max.size" found
    # in system.properties.
    #
    users.image.max.size=307200

##
## Groups and Roles
##

    #
    # Input a list of comma delimited system group names that will exist in
    # addition to the standard system groups. When the server starts, the portal
    # checks to ensure all system groups exist. Any missing system group will be
    # created by the portal.
    #
    system.groups=

    #
    # Input a list of comma delimited system role names that will exist in
    # addition to the standard system roles. When the server starts, the portal
    # checks to ensure all system roles exist. Any missing system role will be
    # created by the portal.
    #
    # The standard system roles are: Administrator, Guest, Power User, and User.
    # These roles cannot be removed or renamed.
    #
    system.roles=

    #
    # Set the description of the Administrator system role.
    #
    system.role.Administrator.description=Administrators are super users who can do anything.

    #
    # Set the description of the Guest system role.
    #
    system.role.Guest.description=Unauthenticated users always have this role.

    #
    # Set the description of the Power User system role.
    #
    system.role.Power.User.description=Power Users have their own public and private pages.

    #
    # Set the description of the User system role.
    #
    system.role.User.description=Authenticated users should be assigned this role.

    #
    # Input a list of comma delimited system community role names that will
    # exist in addition to the standard system community roles. When the server
    # starts, the portal checks to ensure all system community roles exist. Any
    # missing system community role will be created by the portal.
    #
    # The standard system community roles are: Community Administrator,
    # Community Member, and Community  Owner. These roles cannot be removed or
    # renamed.
    #
    system.community.roles=

    #
    # Set the description of the Community Administrator system community role.
    #
    system.community.role.Community.Administrator.description=Community Administrators are super users of their community but cannot make other users into Community Administrators.

    #
    # Set the description of the Community Member system community role.
    #
    system.community.role.Community.Member.description=All users who belong to a community have this role within that community.

    #
    # Set the description of the Community Owner system community role.
    #
    system.community.role.Community.Owner.description=Community Owners are super users of their community and can assign community roles to users.

    #
    # Input a list of comma delimited system organization role names that will
    # exist in addition to the standard system organization roles. When the
    # server starts, the portal checks to ensure all system organization roles
    # exist. Any missing system organization role will be created by the portal.
    #
    # The standard system organization roles are: Organization Administrator,
    # Organization Member, and Organization  Owner. These roles cannot be
    # removed or renamed.
    #
    system.organization.roles=

    #
    # Set the description of the Organization Administrator system organization
    # role.
    #
    system.organization.role.Organization.Administrator.description=Organization Administrators are super users of their organization but cannot make other users into Organization Administrators.

    #
    # Set the description of the Organization Member system organization role.
    #
    system.organization.role.Organization.Member.description=All users who belong to a organization have this role within that organization.

    #
    # Set the description of the Organization Owner system organization role.
    #
    system.organization.role.Organization.Owner.description=Organization Owners are super users of their organization and can assign organization roles to users.

    #
    # Omniadmin users can administer the portal's core functionality: gc,
    # shutdown, etc. Omniadmin users must belong to the default company.
    #
    # Multiple portal instances might be deployed on one application server, and
    # not all of the administrators should have access to this core
    # functionality. Input the ids of users who are omniadmin users.
    #
    # Leave this field blank if users who belong to the right company and have
    # the Administrator role are allowed to administer the portal's core
    # functionality.
    #
    omniadmin.users=

    #
    # Set the following to true if all users are required to agree to the terms
    # of use.
    #
    terms.of.use.required=true

##
## Organizations
##

    #
    # Set the following to true if organizations must have an associated
    # country.
    #
    organizations.country.required=true

##
## Languages and Time Zones
##

    #
    # Specify the available locales. Messages corresponding to a specific
    # language are specified in properties files with file names matching that
    # of content/Language_*.properties. These values can also be overridden in
    # properties files with file names matching that of
    # content/Language-ext_*.properties. Use a comma to separate
    # each entry.
    #
    # All locales must use UTF-8 encoding.
    #
    # See the following links specifiy language and country codes:
    #     http://ftp.ics.uci.edu/pub/ietf/http/related/iso639.txt
    #     http://userpage.chemie.fu-berlin.de/diverse/doc/ISO_3166.html
    #
    locales=ar_SA,ca_AD,ca_ES,zh_CN,zh_TW,cs_CZ,nl_NL,en_US,fi_FI,fr_FR,de_DE,el_GR,hu_HU,it_IT,ja_JP,ko_KR,fa_IR,pt_BR,ru_RU,es_ES,sv_SE,tr_TR,vi_VN

    #
    # Set the following to true if unauthenticated users get their preferred
    # language from the Accept-Language header. Set the following to false if
    # unauthenticated users get their preferred language from their company.
    #
    locale.default.request=false

    #
    # Specify the available time zones. The specified ids must match those from
    # the class java.util.TimeZone.
    #
    time.zones=Pacific/Midway,Pacific/Honolulu,AST,PST,MST,CST,EST,PRT,CNT,BET,America/Noronha,Atlantic/Azores,GMT,WET,CET,EET,Asia/Jerusalem,Asia/Baghdad,Iran,Asia/Dubai,Asia/Kabul,Asia/Karachi,IST,Asia/Katmandu,Asia/Dhaka,Asia/Rangoon,VST,CTT,JST,ROK,ACT,AET,SST,NST,Pacific/Enderbury,Pacific/Kiritimati

##
## Look and Feel
##

    #
    # Set the following to false if the system does not use allow users to
    # modify the look and feel.
    #
    look.and.feel.modifiable=true

    #
    # Set the default theme id for regular themes.
    #
    default.regular.theme.id=classic

    #
    # Set the default color scheme id for regular themes.
    #
    default.regular.color.scheme.id=01

    #
    # Set the default theme id for wap themes.
    #
    default.wap.theme.id=mobile

    #
    # Set the default color scheme id for wap themes.
    #
    default.wap.color.scheme.id=01

    #
    # Set the following to true if you want a change in the theme selection of
    # the public or private group to automatically be applied to the other (i.e.
    # if public and private group themes should always be the same).
    #
    theme.sync.on.group=false

##
## Request
##

    #
    # Portlets that have been configured to use private request attributes in
    # liferay-portlet.xml may still want to share some request attributes. This
    # property allows you to configure which request attributes will be shared.
    # Set a comma delimited list of attribute names that will be shared when the
    # attribute name starts with one of the specified attribute names. For
    # example, if you set the value to "hello_,world_", then all attribute names
    # that start with "hello_" or "world_" will be shared.
    #
    request.shared.attributes=LIFERAY_SHARED_

##
## Session
##

    #
    # Specify the number of minutes before a session expires. This value is
    # always overridden by the value set in web.xml.
    #
    session.timeout=30

    #
    # Specify the number of minutes before a warning is sent to the user
    # informing the user of the session expiration. Specify 0 to disable any
    # warnings.
    #
    session.timeout.warning=1

    #
    # Set the auto-extend mode to true to avoid having to ask the user whether
    # to extend the session or not. Instead it will be automatically extended.
    # The purpose of this mode is to keep the session open as long as the user
    # browser is open and with a portal page loaded. It is recommended to use
    # this setting along with a smaller "session.timeout", such as 5 minutes for
    # better performance.
    #
    session.timeout.auto.extend=false

    #
    # Portlets that have been configured to use private session attributes in
    # liferay-portlet.xml may still want to share some session attributes. This
    # property allows you to configure which session attributes will be shared.
    # Set a comma delimited list of attribute names that will be shared when the
    # attribute name starts with one of the specified attribute names. For
    # example, if you set the value to "hello_,world_", then all attribute names
    # that start with "hello_" or "world_" will be shared.
    #
    # Note that this property is used to specify the sharing of session
    # attributes from the portal to the portlet. This is not used to specify
    # session sharing between portlet WARs or from the portlet to the portal.
    #
    session.shared.attributes=org.apache.struts.action.LOCALE,COMPANY_,USER_,LIFERAY_SHARED_

    #
    # Set this to false to disable all persistent cookie. Features like
    # automatically logging in will not work.
    #
    session.enable.persistent.cookies=true

    #
    # The login process sets several cookies if persistent cookies are enabled.
    # Set this property to set the domain of those cookies.
    #
    #session.cookie.domain=

    #
    # Set the following to true to invalidate the session when a user logs into
    # the portal. This helps prevents phishing. Set this to false if you need
    # the guest user and the authenticated user to have the same session.
    #
    session.enable.phishing.protection=true

    #
    # Set the following to true to test whether users have cookie support
    # before allowing them to sign in. This test will always fail if "tck.url"
    # is set to true because that property disables session cookies.
    #
    session.test.cookie.support=true

    #
    # Set the following to true to disable sessions. Doing this will use cookies
    # to remember the user across requests. This is useful if you want to scale
    # very large sites where the user may be sent to a different server for each
    # request. The drawback to this approach is that you must not rely on the
    # API for sessions provided by the servlet and portlet specs.
    #
    # This feature is only available for Tomcat and requires that you set
    # Tomcat's Manager class to
    # "com.liferay.support.tomcat.session.SessionLessManagerBase".
    #
    session.disabled=false

    #
    # Input a list of comma delimited class names that extend
    # com.liferay.portal.struts.SessionAction. These classes will run at the
    # specified event.
    #

    #
    # Servlet session create event
    #
    servlet.session.create.events=com.liferay.portal.events.SessionCreateAction

    #
    # Servlet session destroy event
    #
    servlet.session.destroy.events=com.liferay.portal.events.SessionDestroyAction

    #
    # Set the following to true to track user clicks in memory for the duration
    # of a user's session. Setting this to true allows you to view all live
    # sessions in the Admin portlet.
    #
    session.tracker.memory.enabled=true

    #
    # Set the following to true to track user clicks in the database after a
    # user's session is invalidated. Setting this to true allows you to generate
    # usage reports from the database. Use this cautiously because this will
    # store a lot of usage data.
    #
    session.tracker.persistence.enabled=false

    #
    # Set the following to true to convert the tracked paths to friendly URLs.
    #
    session.tracker.friendly.paths.enabled=false

    #
    # Enter a list of comma delimited paths that should not be tracked.
    #
    session.tracker.ignore.paths=\
        /document_library/get_file,\
        /portal/ajax,\
        /portal/css_cached,\
        /portal/javascript_cached,\
        /portal/render_portlet

##
## JAAS
##

    #
    # Set the following to true if the portal will use
    # com.liferay.portal.security.jaas.PortalConfiguration as the JAAS master
    # configuration.
    #
    portal.configuration=true

    #
    # Set the following to false to disable JAAS security checks. Disabling JAAS
    # speeds up login. JAAS must be disabled if administrators are to be able to
    # impersonate other users.
    #
    portal.jaas.enable=false

    #
    # By default, com.liferay.portal.security.jaas.PortalLoginModule loads the
    # correct JAAS login module based on what application server or servlet
    # container the portal is deployed on. Set a JAAS implementation class to
    # override this behavior.
    #
    #portal.jaas.impl=

    #
    # The JAAS process may pass in an encrypted password and the authentication
    # will only succeed if there is an exact match. Set this property to false
    # to relax that behavior so the user can input an unencrypted password.
    #
    portal.jaas.strict.password=false

    #
    # Set the following to true to enable administrators to impersonate other
    # users. JAAS must also be disabled for this feature to work.
    #
    portal.impersonation.enable=true

##
## LDAP
##

    #
    # Set the values used to connect to a LDAP store.
    #
    ldap.factory.initial=com.sun.jndi.ldap.LdapCtxFactory
    ldap.base.provider.url=ldap://localhost:10389
    ldap.base.dn=dc=example,dc=com
    ldap.security.principal=uid=admin,ou=system
    ldap.security.credentials=secret

    #
    # Settings for com.liferay.portal.security.auth.LDAPAuth can be configured
    # from the Admin portlet. It provides out of the box support for Apache
    # Directory Server, Microsoft Active Directory Server, Novell eDirectory,
    # and OpenLDAP. The default settings are for Apache Directory Server.
    #
    # The LDAPAuth class must be specified in the property "auth.pipeline.pre"
    # to be executed.
    #
    # Encryption is implemented by com.liferay.util.Encryptor.provider.class in
    # system.properties.
    #
    ldap.auth.enabled=false
    ldap.auth.required=false

    #
    # Set either bind or password-compare for the LDAP authentication method.
    # Bind is preferred by most vendors so that you don't have to worry about
    # encryption strategies.
    #
    ldap.auth.method=bind
    #ldap.auth.method=password-compare

    #
    # Set the password encryption to used to compare passwords if the property
    # "ldap.auth.method" is set to password-compare.
    #
    ldap.auth.password.encryption.algorithm=
    ldap.auth.password.encryption.algorithm.types=MD5,SHA

    #
    # Active Directory stores information about the user account as a series of
    # bit fields in the UserAccountControl attribute.
    #
    # If you want to prevent disabled accounts from logging into the portal you
    # need to use a search filter similiar to the following:
    # (&(objectclass=person)(userprincipalname=@email_address@)(!(UserAccountControl:1.2.840.113556.1.4.803:=2)))
    #
    # See the following links:
    #     http://support.microsoft.com/kb/305144/
    #     http://support.microsoft.com/?kbid=269181
    #
    ldap.auth.search.filter=(mail=@email_address@)

    #
    # You can write your own class that extends
    # com.liferay.portal.security.ldap.AttributesTransformer to transform the
    # LDAP attributes before a user or group is imported to the LDAP store.
    #
    ldap.attrs.transformer.impl=com.liferay.portal.security.ldap.AttributesTransformer

    #
    # You can write your own class that extends
    # com.liferay.portal.security.ldap.LDAPUser to customize the behavior for
    # exporting portal users to the LDAP store.
    #
    ldap.user.impl=com.liferay.portal.security.ldap.LDAPUser

    #
    # When a user is exported to LDAP and the user does not exist, the user will
    # be created with the following default object classes.
    #
    ldap.user.default.object.classes=top,person,inetOrgPerson,organizationalPerson

    #
    # When importing and exporting users, the portal will use this mapping to
    # connect LDAP user attributes and portal user variables
    #
    ldap.user.mappings=screenName=cn\npassword=userPassword\nemailAddress=mail\nfirstName=givenName\nlastName=sn\njobTitle=title\ngroup=groupMembership

    #
    # When importing groups, the portal will use this mapping to connect LDAP
    # group attributes and portal user group variables.
    #
    ldap.group.mappings=groupName=cn\ndescription=description\nuser=uniqueMember

    #
    # Settings for importing users and groups from LDAP to the portal.
    #
    ldap.import.enabled=false
    ldap.import.on.startup=false
    ldap.import.interval=10
    ldap.import.user.search.filter=(objectClass=inetOrgPerson)
    ldap.import.group.search.filter=(objectClass=groupOfUniqueNames)

    #
    # Set either user or group for import method. If set to user, portal will
    # import all users and the groups associated with those users. If set to
    # group, the portal import all groups and the users associated those groups.
    # This value should be set based on how your LDAP server stores group
    # membership information.
    #
    ldap.import.method=user
    #ldap.import.method=group

    #
    # Settings for exporting users from the portal to LDAP. This allows a user
    # to modify his first name, last name, etc. in the portal and have that
    # change get pushed to the LDAP server. This will only be active if the
    # property "ldap.auth.enabled" is also set to true. New users and groups
    # will be created at the specified DN.
    #
    ldap.export.enabled=true
    ldap.users.dn=ou=users,dc=example,dc=com
    ldap.groups.dn=ou=groups,dc=example,dc=com

    #
    # Set this to true to use the LDAP's password policy instead of the portal
    # password policy.
    #
    ldap.password.policy.enabled=false

    #
    # Set these values to be a portion of the error message returned by the
    # appropriate directory server to allow the portal to recognize messages
    # from the LDAP server. The default values will work for Fedora DS.
    #
    ldap.error.password.age=age
    ldap.error.password.expired=expired
    ldap.error.password.history=history
    ldap.error.password.not.changeable=not allowed to change
    ldap.error.password.syntax=syntax
    ldap.error.password.trivial=trivial
    ldap.error.user.lockout=retry limit

##
## CAS
##

    #
    # Set this to true to enable CAS single sign on. NTLM will work only if
    # LDAP authentication is also enabled and the authentication is made by
    # screen name. If set to true, then the property "auto.login.hooks" must
    # contain a reference to the class
    # com.liferay.portal.security.auth.CASAutoLogin and the filter
    # com.liferay.portal.servlet.filters.sso.cas.CASFilter must be referenced
    # in web.xml.
    #
    cas.auth.enabled=false

    #
    # A user may be authenticated from CAS and not yet exist in the portal. Set
    # this to true to automatically import users from LDAP if they do not exist
    # in the portal.
    #
    cas.import.from.ldap=false

    #
    # Set the default values for the required CAS URLs. Set either
    # "cas.server.name" or "cas.service.url". Setting "cas.server.name" allows
    # deep linking. See LEP-4423.
    #
    cas.login.url=https://localhost:8443/cas-web/login
    cas.logout.url=https://localhost:8443/cas-web/logout
    cas.server.name=localhost:8080
    cas.service.url=
    #cas.service.url=http://localhost:8080/c/portal/login
    cas.validate.url=https://localhost:8443/cas-web/proxyValidate

##
## NTLM
##

    #
    # Set this to true to enable NTLM single sign on. NTLM will work only if
    # LDAP authentication is also enabled and the authentication is made by
    # screen name. If set to true, then the property "auto.login.hooks" must
    # contain a reference to the class
    # com.liferay.portal.security.auth.NtlmAutoLogin and the filter
    # com.liferay.portal.servlet.filters.sso.ntlm.NtlmFilter must be referenced
    # in web.xml.
    #
    ntlm.auth.enabled=false
    ntlm.auth.domain.controller=127.0.0.1
    ntlm.auth.domain=EXAMPLE

##
## OpenID
##

    #
    # Set this to true to enable OpenId authentication. If set to true, then the
    # property "auto.login.hooks" must contain a reference to the class
    # com.liferay.portal.security.auth.OpenIdAutoLogin.
    #
    open.id.auth.enabled=true

##
## OpenSSO
##

    open.sso.auth.enabled=false
    open.sso.login.url=http://localhost:8080/opensso/UI/Login?goto=http://localhost:8080/
    open.sso.logout.url=http://localhost:8080/opensso/UI/Logout?goto=http://localhost:8080/
    open.sso.service.url=http://localhost:8080/opensso/identity
    open.sso.subject.cookie.name=iPlanetDirectoryPro

##
## Authentication Pipeline
##

    #
    # Input a list of comma delimited class names that implement
    # com.liferay.portal.security.auth.Authenticator. These classes will run
    # before or after the portal authentication begins.
    #
    # The Authenticator class defines the constant values that should be used
    # as return codes from the classes implementing the interface. If
    # authentication is successful, return SUCCESS; if the user exists but the
    # passwords do not match, return FAILURE; and if the user does not exist on
    # the system, return DNE.
    #
    # Constants in Authenticator:
    #     public static final int SUCCESS = 1;
    #     public static final int FAILURE = -1;
    #     public static final int DNE = 0;
    #
    # In case you have several classes in the authentication pipeline, all of
    # them have to return SUCCESS if you want the user to be able to login. If
    # one of the authenticators returns FAILURE or DNE, the login fails.
    #
    # Under certain circumstances, you might want to keep the information in the
    # portal database in sync with an external database or an LDAP server. This
    # can easily be achieved by implementing a class via LDAPAuth that updates
    # the information stored in the portal user database whenever a user signs
    # in.
    #
    # Each portal instance can be configured at run time to either authenticate
    # based on user ids or email addresses. See the Admin portlet for more
    # information.
    #
    # Available authenticators are:
    #     com.liferay.portal.security.auth.LDAPAuth
    #
    # See the LDAP properties to configure the behavior of the LDAPAuth class.
    #
    auth.pipeline.pre=com.liferay.portal.security.auth.LDAPAuth
    #auth.pipeline.post=

    #
    # Set this to true to enable password checking by the internal portal
    # authentication. If set to false, you're essentially delegating password
    # checking is delegated to the authenticators configured in
    # "auth.pipeline.pre" and "auth.pipeline.post" settings.
    #
    auth.pipeline.enable.liferay.check=true

    #
    # Input a list of comma delimited class names that implement
    # com.liferay.portal.security.auth.AuthFailure. These classes will run when
    # a user has a failed login or when a user has reached the maximum number of
    # failed logins.
    #
    auth.failure=com.liferay.portal.security.auth.LoginFailure
    auth.max.failures=com.liferay.portal.security.auth.LoginMaxFailures
    auth.max.failures.limit=5

    #
    # Set the following to true if users are allowed to have simultaneous logins
    # from different sessions.
    #
    auth.simultaneous.logins=true

    #
    # Set the following to true if users are forwarded to the last visited path
    # upon successful login. If set to false, users will be forwarded to their
    # default layout page.
    #
    auth.forward.by.last.path=true

    #
    # The login page reads a redirect by a parameter named "redirect". If this
    # property is set to true, then users will be redirected to the given
    # redirect path upon successful login. If the user does not have permission
    # to view that page, then the rule set by the property
    # "auth.forward.by.last.path" will apply.
    #
    # You can set the redirect manually from another application, by appending
    # the "redirect" parameter in a url that looks like this:
    # /c/portal/login?redirect=%2Fgroup%2Femployees%2Fcalendar. This url will
    # redirect the user to the path "/group/employees/calendar" upon successful
    # login.
    #
    auth.forward.by.redirect=true

    #
    # Enter a list of comma delimited paths that can be considered part of the
    # last visited path.
    #
    auth.forward.last.paths=/document_library/get_file

    #
    # Enter a list of comma delimited paths that do not require authentication.
    #
    auth.public.paths=\
        /blogs/find_entry,\
        /blogs/rss,\
        \
        /bookmarks/open_entry,\
        \
        /document_library/get_file,\
        \
        /journal/get_article,\
        /journal/get_articles,\
        /journal/get_latest_article_content,\
        /journal/get_structure,\
        /journal/get_template,\
        /journal/view_article_content,\
        /journal_articles/view_article_content,\
        \
        /message_boards/find_category,\
        /message_boards/find_message,\
        /message_boards/find_thread,\
        /message_boards/get_message_attachment,\
        /message_boards/rss,\
        \
        /messaging/action,\
        \
        /polls/view_chart,\
        \
        /portal/expire_session,\
        /portal/extend_session,\
        /portal/extend_session_confirm,\
        /portal/json_service,\
        /portal/logout,\
        /portal/open_id_request,\
        /portal/open_id_response,\
        /portal/session_click,\
        /portal/session_tree_js_click,\
        /portal/status,\
        \
        /search/open_search,\
        /search/open_search_description.xml,\
        \
        /shopping/notify,\
        \
        /tags/rss

##
## Auto Login
##

    #
    # Input a list of comma delimited class names that implement
    # com.liferay.portal.security.auth.AutoLogin. These classes will run in
    # consecutive order for all unauthenticated users until one of them return a
    # valid user id and password combination. If no valid combination is
    # returned, then the request continues to process normally. If a valid
    # combination is returned, then the portal will automatically login that
    # user with the returned user id and password combination.
    #
    # For example, com.liferay.portal.security.auth.RememberMeAutoLogin reads
    # from a cookie to automatically log in a user who previously logged in
    # while checking on the "Remember Me" box.
    #
    # This interface allows deployers to easily configure the portal to work
    # with other SSO servers. See com.liferay.portal.security.auth.CASAutoLogin
    # for an example of how to configure the portal with Yale's SSO server.
    #
    auto.login.hooks=com.liferay.portal.security.auth.CASAutoLogin,com.liferay.portal.security.auth.NtlmAutoLogin,com.liferay.portal.security.auth.OpenIdAutoLogin,com.liferay.portal.security.auth.OpenSSOAutoLogin,com.liferay.portal.security.auth.ParameterAutoLogin,com.liferay.portal.security.auth.RememberMeAutoLogin

##
## SSO with MAC (Message Authentication Code)
##

    #
    # To use SSO with MAC, post to an URL like:
    #     http://localhost:8080/c/portal/login?cmd=already-registered&login=<userId|emailAddress>&password=<MAC>
    #
    # Pass the MAC in the password field. Make sure the MAC gets URL encoded
    # because it might contain characters not allowed in a URL.
    #
    # SSO with MAC also requires that you set the following property in
    # system.properties:
    #
    #     com.liferay.util.servlet.SessionParameters=false
    #
    # See the following links:
    #     http://support.liferay.com/browse/LEP-1288
    #     http://en.wikipedia.org/wiki/Message_authentication_code
    #
    # Set the following to true to enable SSO with MAC.
    #
    auth.mac.allow=false

    #
    # Set the algorithm to use for MAC encryption.
    #
    auth.mac.algorithm=MD5

    #
    # Set the shared key used to generate the MAC.
    #
    auth.mac.shared.key=

##
## Passwords
##

    #
    # Set the following encryption algorithm to encrypt passwords. The default
    # algorithm is SHA (SHA-1). If set to NONE, passwords are stored in the
    # database as plain text. The SHA-512 algorithm is currently unsupported.
    #
    #passwords.encryption.algorithm=CRYPT
    #passwords.encryption.algorithm=MD2
    #passwords.encryption.algorithm=MD5
    #passwords.encryption.algorithm=NONE
    passwords.encryption.algorithm=SHA
    #passwords.encryption.algorithm=SHA-256
    #passwords.encryption.algorithm=SHA-384
    #passwords.encryption.algorithm=SSHA

    #
    # Digested passwords are encoded via base64 or hex encoding. The default is
    # base64.
    #
    passwords.digest.encoding=base64
    #passwords.digest.encoding=hex

    #
    # Input a class name that extends
    # com.liferay.portal.security.pwd.BasicToolkit. This class will be called to
    # generate and validate passwords.
    #
    passwords.toolkit=com.liferay.portal.security.pwd.PasswordPolicyToolkit
    #passwords.toolkit=com.liferay.portal.security.pwd.RegExpToolkit

    #
    # If you choose to use com.liferay.portal.security.pwd.PasswordPolicyToolkit
    # as your password toolkit, you can choose either static or dynamic password
    # generation. Static is set through the property
    # "passwords.passwordpolicytoolkit.static" and dynamic uses the class
    # com.liferay.util.PwdGenerator to generate the password. If you are using
    # LDAP password syntax checking, you will also have to use the static
    # generator so that you can guarantee that passwords obey its rules.
    #
    #passwords.passwordpolicytoolkit.generator=static
    passwords.passwordpolicytoolkit.generator=dynamic
    passwords.passwordpolicytoolkit.static=iheartliferay

    #
    # If you choose to use com.liferay.portal.security.pwd.RegExpToolkit as
    # your password toolkit, set the regular expression pattern that will be
    # used to generate and validate passwords.
    #
    # Note that \ is replaced with \\ to work in Java.
    #
    # The first pattern ensures that passwords must have at least 4 valid
    # characters consisting of digits or letters.
    #
    # The second pattern ensures that passwords must have at least 8 valid
    # characters consisting of digits or letters.
    #
    passwords.regexptoolkit.pattern=(?=.{4})(?:[a-zA-Z0-9]*)
    #passwords.regexptoolkit.pattern=(?=.{8})(?:[a-zA-Z0-9]*)

    #
    # Set the length and key for generating passwords.
    #
    #passwords.regexptoolkit.charset=0123456789
    passwords.regexptoolkit.charset=0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
    #passwords.regexptoolkit.length=4
    passwords.regexptoolkit.length=8

    #
    # Set the name of the default password policy.
    #
    passwords.default.policy.name=Default Password Policy

##
## Permissions
##

    #
    # Set the default permission checker class used by
    # com.liferay.portal.security.permission.PermissionCheckerFactory to check
    # permissions for actions on objects. This class can be overrided with a
    # custom class that extends
    # com.liferay.portal.security.permission.PermissionCheckerImpl.
    #
    permissions.checker=com.liferay.portal.security.permission.PermissionCheckerImpl

    #
    # Set the algorithm used to check permissions for a user. This is useful so
    # that you can optimize the search for different databases. See
    # com.liferay.portal.service.impl.PermissionLocalServiceImpl.
    #
    #permissions.user.check.algorithm=1
    permissions.user.check.algorithm=2
    #permissions.user.check.algorithm=3
    #permissions.user.check.algorithm=4

    #
    # Set the default permissions list filter class. This class must implement
    # com.liferay.portal.kernel.security.permission.PermissionsListFilter. This
    # is used if you want to filter the list of permissions before it is
    # actually persisted. For example, if you want to make sure that all users
    # who create objects never have the UPDATE action, then you can filter that
    # list and remove any permissions that have the UPDATE action before it is
    # persisted.
    #
    permissions.list.filter=com.liferay.portal.security.permission.PermissionsListFilterImpl

##
## Captcha
##

    #
    # Set the maximum number of captcha checks per portlet session. Set this
    # value to 0 to always check. Set this value to a number less than 0 to
    # never check. Unauthenticated users will always be checked on every request
    # if captcha checks is enabled.
    #
    captcha.max.challenges=1

##
## Startup Events
##

    #
    # Input a list of comma delimited class names that extend
    # com.liferay.portal.struts.SimpleAction. These classes will run at the
    # specified event.
    #

    #
    # Global startup event that runs once when the portal initializes.
    #
    global.startup.events=com.liferay.portal.events.GlobalStartupAction

    #
    # Application startup event that runs once for every web site instance of
    # the portal that initializes.
    #
    application.startup.events=com.liferay.portal.events.AppStartupAction

##
## Shutdown Events
##

    #
    # Input a list of comma delimited class names that extend
    # com.liferay.portal.struts.SimpleAction. These classes will run at the
    # specified event.
    #

    #
    # Global shutdown event that runs once when the portal shuts down.
    #
    global.shutdown.events=com.liferay.portal.events.GlobalShutdownAction

    #
    # Application shutdown event that runs once for every web site instance of
    # the portal that shuts down.
    #
    application.shutdown.events=com.liferay.portal.events.AppShutdownAction

    #
    # Programmatically kill the Java process on shutdown. This is a workaround
    # for a bug in Tomcat and Linux where the process hangs on forever.
    #
    # See http://support.liferay.com/browse/LEP-2048 for more information.
    #
    shutdown.programmatically.exit=false

##
## Portal Events
##

    #
    # Input a list of comma delimited class names that extend
    # com.liferay.portal.struts.Action. These classes will run before or after
    # the specified event.
    #

    #
    # Servlet service event (The pre-service events have an associated error
    # page and will forward to that page if an exception is thrown during
    # excecution of the events. The pre-service events process before Struts
    # processes the request. The post-service events process after Struts
    # processes the request.
    #
    servlet.service.events.pre=com.liferay.portal.events.ServicePreAction
    #servlet.service.events.pre=com.liferay.portal.events.LogMemoryUsageAction,com.liferay.portal.events.LogThreadCountAction,com.liferay.portal.events.ServicePreAction
    #servlet.service.events.pre=com.liferay.portal.events.LogSessionIdAction,com.liferay.portal.events.ServicePreAction
    #servlet.service.events.pre=com.liferay.portal.events.ServicePreAction,com.liferay.portal.events.RandomLayoutAction
    #servlet.service.events.pre=com.liferay.portal.events.ServicePreAction,com.liferay.portal.events.RandomLookAndFeelAction
    servlet.service.events.pre.error.page=/common/error.jsp
    servlet.service.events.post=com.liferay.portal.events.ServicePostAction

    #
    # Login event
    #
    login.events.pre=com.liferay.portal.events.LoginPreAction
    login.events.post=com.liferay.portal.events.LoginPostAction,com.liferay.portal.events.DefaultLandingPageAction

    #
    # Logout event
    #
    logout.events.pre=com.liferay.portal.events.LogoutPreAction
    logout.events.post=com.liferay.portal.events.LogoutPostAction
    #logout.events.post=com.liferay.portal.events.LogoutPostAction,com.liferay.portal.events.GarbageCollectorAction

##
## Default Landing Page
##

    #
    # Set the default landing page path for logged in users relative to the
    # server path. For example, if you want the default landing page to be
    # http://localhost:8080/web/guest/home, set this to /web/guest/home. To
    # activate this feature, set auth.forward.by.last.path to true. To customize
    # the behavior, see com.liferay.portal.events.DefaultLandingPageAction in
    # the login.events.post property above.
    #
    #default.landing.page.path=/web/guest/home

##
## Default Guest
##

    #
    # The Guest group at least one public page. The settings for the initial
    # public page are specified in the following properties. For more complex
    # behavior, override the addDefaultLayouts method in
    # com.liferay.portal.service.impl.GroupLocalServiceImpl.
    #

    #
    # Set the layout name.
    #
    default.guest.layout.name=Welcome

    #
    # Set the layout template id that matches an existing TPL.
    #
    #default.guest.layout.template.id=1_2_1_columns
    #default.guest.layout.template.id=1_column
    #default.guest.layout.template.id=2_2_columns
    #default.guest.layout.template.id=2_columns_i
    default.guest.layout.template.id=2_columns_ii
    #default.guest.layout.template.id=2_columns_iii
    #default.guest.layout.template.id=3_columns

    #
    # Set the layout ids for the column specified in the layout template.
    #
    default.guest.layout.column-1=58,
    default.guest.layout.column-2=47,
    default.guest.layout.column-3=
    default.guest.layout.column-4=

    #
    # Set the friendly url. This will only have an effect if the Guest group
    # also has a friendly URL set.
    #
    default.guest.friendly.url=/home

##
## Default User
##

    #
    # Users who have the Power User role must have at least one private personal
    # page. The settings for the initial private page are specified in the
    # following properties. For more complex behavior, override the
    # addDefaultLayouts method in com.liferay.portal.events.ServicePreAction.
    #

    #
    # Set the layout name.
    #
    default.user.layout.name=Home

    #
    # Set the layout template id that matches an existing TPL.
    #
    #default.user.layout.template.id=1_2_1_columns
    #default.user.layout.template.id=1_column
    #default.user.layout.template.id=2_2_columns
    #default.user.layout.template.id=2_columns_i
    default.user.layout.template.id=2_columns_ii
    #default.user.layout.template.id=2_columns_iii
    #default.user.layout.template.id=3_columns

    #
    # Set the layout ids for the column specified in the layout template.
    #
    default.user.layout.column-1=71_INSTANCE_OY0d,82,23,61,65,
    default.user.layout.column-2=11,29,8,19
    default.user.layout.column-3=
    default.user.layout.column-4=

    #
    # Specify a LAR file that can be used to create a user's private or public
    # layouts.
    #
    #default.user.private.layout.lar=${resource.repositories.root}/deploy/default_user_private.lar
    #default.user.public.layout.lar=${resource.repositories.root}/deploy/default_user_public.lar

##
## Default Admin
##

    #
    # Set the default admin password.
    #
    default.admin.password=test

    #
    # Set the default admin screen name prefix.
    #
    default.admin.screen.name=test

    #
    # Set the default admin email address prefix.
    #
    default.admin.email.address.prefix=test

    #
    # Set the default admin first name.
    #
    default.admin.first.name=Test

    #
    # Set the default admin middle name.
    #
    default.admin.middle.name=

    #
    # Set the default admin last name.
    #
    default.admin.last.name=Test

##
## Layouts
##

    #
    # Set the list of layout types. The display text of each of the layout types
    # is set in content/Language.properties and prefixed with "layout.types.".
    #
    # You can create new layout types and specify custom settings for each
    # layout type. End users input dynamic values as designed in the edit page.
    # End users see the layout as designed in the view page. The generated
    # URL can reference properties set in the edit page. Parentable layouts
    # can contain child layouts. You can also specify a comma delimited list of
    # configuration actions that will be called for your layout when it is
    # updated or deleted.
    #
    layout.types=portlet,embedded,article,url,link_to_layout

    #
    # Default settings layouts.
    #
    layout.edit.page=/portal/layout/edit/portlet.jsp
    layout.view.page=/portal/layout/view/portlet.jsp
    layout.url=${liferay:mainPath}/portal/layout?p_l_id=${liferay:plid}
    layout.url.friendliable=true
    layout.parentable=true
    layout.sitemapable=true
    #layout.configuration.action.update=
    #layout.configuration.action.delete=

    #
    # Settings for portlet layouts are inherited from the default settings.
    #
    #layout.edit.page[portlet]=/portal/layout/edit/portlet.jsp
    #layout.view.page[portlet]=/portal/layout/view/portlet.jsp
    #layout.url[portlet]=${liferay:mainPath}/portal/layout?p_l_id=${liferay:plid}
    #layout.url.friendliable[portlet]=true
    #layout.parentable[portlet]=true
    #layout.configuration.action.update[portlet]=
    #layout.configuration.action.delete[portlet]=

    #
    # Settings for embedded layouts.
    #
    layout.edit.page[embedded]=/portal/layout/edit/embedded.jsp
    layout.view.page[embedded]=/portal/layout/view/embedded.jsp
    layout.url[embedded]=${liferay:mainPath}/portal/layout?p_l_id=${liferay:plid}
    layout.url.friendliable[embedded]=true
    layout.parentable[embedded]=false
    layout.sitemapable[embedded]=true
    #layout.configuration.action.update[embedded]=
    #layout.configuration.action.delete[embedded]=

    #
    # Settings for article layouts.
    #
    layout.edit.page[article]=/portal/layout/edit/article.jsp
    layout.view.page[article]=/portal/layout/view/article.jsp
    layout.url.friendliable[article]=true
    layout.url[article]=${liferay:mainPath}/portal/layout?p_l_id=${liferay:plid}
    layout.parentable[article]=false
    layout.sitemapable[article]=true
    layout.configuration.action.update[article]=com.liferay.portal.model.LayoutTypeArticleConfigurationUpdateAction
    layout.configuration.action.delete[article]=com.liferay.portal.model.LayoutTypeArticleConfigurationDeleteAction

    #
    # Settings for URL layouts.
    #
    layout.edit.page[url]=/portal/layout/edit/url.jsp
    layout.view.page[url]=
    layout.url[url]=${url}
    layout.url.friendliable[url]=true
    layout.parentable[url]=false
    layout.sitemapable[url]=false
    #layout.configuration.action.update[url]=
    #layout.configuration.action.delete[url]=

    #
    # Settings for page layouts.
    #
    layout.edit.page[link_to_layout]=/portal/layout/edit/link_to_layout.jsp
    layout.view.page[link_to_layout]=
    layout.url[link_to_layout]=${liferay:mainPath}/portal/layout?groupId=${groupId}&privateLayout=${privateLayout}&layoutId=${linkToLayoutId}
    layout.url.friendliable[link_to_layout]=true
    layout.parentable[link_to_layout]=true
    layout.sitemapable[link_to_layout]=false
    #layout.configuration.action.update[link_to_layout]=
    #layout.configuration.action.delete[link_to_layout]=

    #
    # Specify static portlets that cannot be moved and will always appear on
    # every layout. Static portlets will take precedence over portlets that may
    # have been dynamically configured for the layout.
    #
    # For example, if you want the Hello World portlet to always appear at the
    # start of the iteration of the first column for user layouts, set the
    # property "layout.static.portlets.start.column-1[user]" to "47". If you
    # want the Hello World portlet to always appear at the end of the second
    # column for user layouts, set the property
    # "layout.static.portlets.end.column-2[user]" to "47". You can input a
    # list of comma delimited portlet ids to specify more than one portlet. If
    # the portlet is instanceable, add the suffix "_INSTANCE_abcd" to the
    # portlet id, where "abcd" is any random alphanumeric string.
    #
    # The static portlets are fetched based on the properties controlled by
    # custom filters using EasyConf. By default, the available filters are
    # user, community, and organization.
    #
    #layout.static.portlets.start.column-1[user]=3,6
    #layout.static.portlets.end.column-1[user]=14
    #layout.static.portlets.start.column-2[user]=71_INSTANCE_abcd,7
    #layout.static.portlets.end.column-2[user]=34,70
    #layout.static.portlets.start.column-3[user]=
    #layout.static.portlets.end.column-3[user]=

    #
    # It is also possible to add a static portlet which only shows in the first
    # layout of a user or community.
    #
    #layout.static.portlets.start.column-1[user][firstLayout]=3,6
    #layout.static.portlets.end.column-2[community][firstLayout]=14

    #
    # Set the static layouts for community layouts.
    #
    #layout.static.portlets.start.column-1[community]=
    #layout.static.portlets.end.column-1[community]=
    #layout.static.portlets.start.column-2[community]=
    #layout.static.portlets.end.column-2[community]=
    #layout.static.portlets.start.column-3[community]=
    #layout.static.portlets.end.column-3[community]=

    #
    # Set the static layouts for organization layouts.
    #
    #layout.static.portlets.start.column-1[organization]=
    #layout.static.portlets.end.column-1[organization]=
    #layout.static.portlets.start.column-2[organization]=
    #layout.static.portlets.end.column-2[organization]=
    #layout.static.portlets.start.column-3[organization]=
    #layout.static.portlets.end.column-3[organization]=

    #
    # Set the private group, private user, and public servlet mapping for
    # com.liferay.portal.servlet.FriendlyURLServlet. This value must match the
    # servlet mapping set in web.xml.
    #
    # For example, if the private group pages are mapped to "/group" and the
    # group's friendly URL is set to "/guest" and the layout's friendly URL is
    # set to "/company/community", then the friendly URL for the page will be
    # http://www.liferay.com/group/guest/company/community. Private group pages
    # map to a community's private pages and are only available to authenticated
    # users with the proper permissions.
    #
    # For example, if the public pages are mapped to "/web" and the group or
    # user's friendly URL is set to "/guest" and the layout's friendly URL is
    # set to "/company/community", then the friendly URL for the page will be
    # http://www.liferay.com/web/guest/company/community. Public pages are
    # available to unauthenticated users.
    #
    # The friendly URL's for users, groups, and layouts can be set during
    # runtime.
    #
    layout.friendly.url.private.group.servlet.mapping=/group
    layout.friendly.url.private.user.servlet.mapping=/user
    layout.friendly.url.public.servlet.mapping=/web

    #
    # Redirect to this resource if the user requested a friendly URL that does
    # not exist. Leave it blank to display nothing.
    #
    # Note: For backward compatibility, this overrides the property
    # "layout.show.http.status" for the 404 status code.
    #
    #layout.friendly.url.page.not.found=/html/portal/404.html

    #
    # Set the reserved keywords that cannot be used in a friendly URL.
    #
    layout.friendly.url.keywords=c,group,web,image,wsrp,page,public,private,blogs,calendar,document_library,image_gallery,journal,message_boards,podcast,rss,tags,wiki

    #
    # Set the following to true if users are allowed to add portlets from the
    # layout page.
    #
    layout.add.portlets=true

    #
    # Set the maximum length to display a layout name.
    #
    layout.name.max.length=10

    #
    # Set the maximum number of tabs per row.
    #
    layout.tabs.per.row=7

    #
    # Set the following to true if layouts should remember (across sessions)
    # that a window state was set to maximized.
    #
    layout.remember.session.window.state.maximized=false

    #
    # Set the following to true if layouts should remember (across requests)
    # that a window state was set to maximized.
    #
    layout.remember.request.window.state.maximized=false

    #
    # Set the following to true if guest users should see the maximize window
    # icon.
    #
    layout.guest.show.max.icon=false

    #
    # Set the following to true if guest users should see the minimize window
    # icon.
    #
    layout.guest.show.min.icon=false

    #
    # Set the following to true if users are shown that they do not have access
    # to a portlet. The portlet init parameter "show-portlet-access-denied" will
    # override this setting.
    #
    layout.show.portlet.access.denied=true

    #
    # Set the following to true if users are shown that a portlet is inactive.
    # The portlet init parameter "show-portlet-inactive" will override this
    # setting.
    #
    layout.show.portlet.inactive=true

    #
    # Set the following to true if the portal should show HTTP status codes like
    # 404 if the requested page is not found.
    #
    layout.show.http.status=true

    #
    # Set the default layout template id used when creating layouts.
    #
    layout.default.template.id=2_columns_ii

    #
    # Set the following to false to disable parallel rendering. You can also
    # disable it on a per request basis by setting the attribute key
    # com.liferay.portal.util.WebKeys.PORTLET_PARALLEL_RENDER to the
    # Boolean.FALSE in a pre service event or by setting the URL parameter
    # "p_p_parallel" to "0".
    #
    layout.parallel.render.enable=true

    #
    # Set the name of a class that implements
    # com.liferay.portal.util.LayoutClone. This class is used to remember
    # maximized and minimized states on shared pages. The default implementation
    # persists the state in the browser session.
    #
    layout.clone.impl=com.liferay.portal.util.SessionLayoutClone

    #
    # Set the following to true to cache the content of layout templates. This
    # is recommended because it improves performance for production servers.
    # Setting it to false is useful during development if you need to make a lot
    # of changes.
    #
    layout.template.cache.enabled=true

    #
    # Set the default value for the "p_l_reset" parameter. If set to true, then
    # render parameters are cleared when different pages are hit. This is not
    # the behavior promoted by the portlet specification, but is the one that
    # most end users seem to prefer.
    #
    layout.default.p_l_reset=true

##
## Portlet URL
##

    #
    # Set the following to true if calling setParameter on a portlet URL appends
    # the parameter value versus replacing it. There is some disagreement in the
    # interpretation of the JSR 168 spec among portlet developers over this
    # specific behavior. Liferay Portal successfully passes the portlet TCK
    # tests whether this value is set to true or false.
    #
    # See http://support.liferay.com/browse/LEP-426 for more information.
    #
    portlet.url.append.parameters=false

    #
    # Set the following to true to allow portlet URLs to generate with an anchor
    # tag.
    #
    portlet.url.anchor.enable=false

##
## Preferences
##

    #
    # Set the following to true to validate portlet preferences on startup.
    #
    preference.validate.on.startup=false

##
## Struts
##

    #
    # Input the custom Struts request processor that will be used by Struts
    # based portlets. The custom class must extend
    # com.liferay.portal.struts.PortletRequestProcessor and have the same
    # constructor.
    #
    struts.portlet.request.processor=com.liferay.portal.struts.PortletRequestProcessor

##
## Images
##

    #
    # Set the location of the default spacer image that is used for missing
    # images. This image must be found in the class path.
    #
    image.default.spacer=com/liferay/portal/dependencies/spacer.gif

    #
    # Set the location of the default company logo image that is used for
    # missing company logo images. This image must be found in the class path.
    #
    image.default.company.logo=com/liferay/portal/dependencies/company_logo.png

    #
    # Set the location of the default user portrait image that is used for
    # missing user portrait images. This image must be found in the class path.
    #
    image.default.user.portrait=com/liferay/portal/dependencies/user_portrait.gif

##
## Editors
##

    #
    # You can configure individual JSP pages to use a specific implementation of
    # the available WYSIWYG editors: liferay, fckeditor, simple, tinymce,
    # or tinymcesimple.
    #
    editor.wysiwyg.default=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.blogs.edit_entry.jsp=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.calendar.edit_configuration.jsp=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.enterprise_admin.view.jsp=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.invitation.edit_configuration.jsp=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.journal.edit_article_content.jsp=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.journal.edit_article_content_xsd_el.jsp=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.journal.edit_configuration.jsp=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.mail.edit.jsp=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.mail.edit_message.jsp=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.message_boards.edit_configuration.jsp=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.shopping.edit_configuration.jsp=fckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.wiki.edit_page.jsp=fckeditor

##
## Fields
##

    #
    # Set the following fields to false so users cannot see them. Some company
    # policies require gender and birthday information to always be hidden.
    #
    field.enable.com.liferay.portal.model.Contact.male=true
    field.enable.com.liferay.portal.model.Contact.birthday=true
    field.enable.com.liferay.portal.model.Organization.status=false

##
## Mime Types
##

    #
    # Input a list of comma delimited mime types that are not available by
    # default from javax.activation.MimetypesFileTypeMap.
    #
    mime.types=\
        application/pdf pdf,\
        application/vnd.ms-excel xls,\
        application/vnd.ms-powerpoint ppt,\
        application/msword doc

##
## Amazon License Keys
##

    #
    # Enter a list of valid Amazon license keys. Configure additional keys by
    # incrementing the last number. The keys are used following a Round-Robin
    # algorithm. This is made available only for personal use. Please see the
    # Amazons license at http://www.amazon.com for more information.
    #
    #amazon.license.0=
    #amazon.license.1=
    #amazon.license.2=
    #amazon.license.3=

##
## Instant Messenger
##

    #
    # Set the AIM login and password by which the system will use AIM to
    # communicate with users.
    #
    aim.login=
    aim.password=

    #
    # Due to a bug in JOscarLib 0.3b1, you must set the full path to the ICQ
    # jar.
    #
    # See the following posts:
    #     http://sourceforge.net/forum/message.php?msg_id=1972697
    #     http://sourceforge.net/forum/message.php?msg_id=1990487
    #
    icq.jar=C:/Java/orion-2.0.7/lib/icq.jar

    #
    # Set the ICQ login and password by which the system will use ICQ to
    # communicate with users.
    #
    icq.login=
    icq.password=

    #
    # Set the MSN login and password by which the system will use MSN to
    # communicate with users.
    #
    msn.login=
    msn.password=

    #
    # Set the YM login and password by which the system will use YM to
    # communicate with users.
    #
    ym.login=
    ym.password=

##
## Lucene Search
##

    #
    # Set the following to true if you want to avoid any writes to the index.
    # This is useful in some clustering environments where there is a shared
    # index and only one node of the cluster updates it.
    #
    index.read.only=false

    #
    # Set the following to true if you want to index your entire library of
    # files on startup.
    #
    index.on.startup=false

    #
    # Set the following to true if you want the indexing on startup to be
    # executed on a separate thread to speed up execution.
    #
    index.with.thread=true

    #
    # Designate whether Lucene stores indexes in a database via JDBC, file
    # system, or in RAM.
    #
    #lucene.store.type=jdbc
    lucene.store.type=file
    #lucene.store.type=ram

    #
    # Lucene's storage of indexes via JDBC has a bug where temp files are not
    # removed. This can eat up disk space over time. Set the following property
    # to true to automatically clean up the temporary files once a day. See
    # LEP-2180.
    #
    #lucene.store.jdbc.auto.clean.up=true

    #
    # Set the JDBC dialect that Lucene uses to store indexes in the database.
    # This is only referenced if Lucene stores indexes in the database. Liferay
    # will attempt to load the proper dialect based on the URL of the JDBC
    # connection. For example, the property "lucene.store.jdbc.dialect.mysql" is
    # read for the JDBC connection URL "jdbc:mysql://localhost/lportal".
    #
    lucene.store.jdbc.dialect.db2=org.apache.lucene.store.jdbc.dialect.DB2Dialect
    lucene.store.jdbc.dialect.derby=org.apache.lucene.store.jdbc.dialect.DerbyDialect
    lucene.store.jdbc.dialect.hsqldb=org.apache.lucene.store.jdbc.dialect.HSQLDialect
    lucene.store.jdbc.dialect.jtds=org.apache.lucene.store.jdbc.dialect.SQLServerDialect
    lucene.store.jdbc.dialect.microsoft=org.apache.lucene.store.jdbc.dialect.SQLServerDialect
    lucene.store.jdbc.dialect.mysql=org.apache.lucene.store.jdbc.dialect.MySQLDialect
    #lucene.store.jdbc.dialect.mysql=org.apache.lucene.store.jdbc.dialect.MySQLInnoDBDialect
    #lucene.store.jdbc.dialect.mysql=org.apache.lucene.store.jdbc.dialect.MySQLMyISAMDialect
    lucene.store.jdbc.dialect.oracle=org.apache.lucene.store.jdbc.dialect.OracleDialect
    lucene.store.jdbc.dialect.postgresql=org.apache.lucene.store.jdbc.dialect.PostgreSQLDialect

    #
    # Set the directory where Lucene indexes are stored. This is only referenced
    # if Lucene stores indexes in the file system.
    #
    lucene.dir=${resource.repositories.root}/lucene/

    #
    # Input a class name that extends
    # com.liferay.portal.lucene.LuceneFileExtractor. This class is called by
    # Lucene to extract text from complex files so that they can be properly
    # indexed.
    #
    lucene.file.extractor=com.liferay.portal.lucene.LuceneFileExtractor

    #
    # The file extractor can sometimes return text that is not valid for Lucene.
    # This property expects a regular expression. Any character that does not
    # matche the regular expression will be replaced with a blank space. Set an
    # empty regular expression to disable this feature.
    #
    lucene.file.extractor.regexp.strip=
    #lucene.file.extractor.regexp.strip=[\\d\\w]

    #
    # Set the default analyzer used for indexing and retrieval.
    #
    #lucene.analyzer=org.apache.lucene.analysis.br.BrazilianAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.cn.ChineseAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.cjk.CJKAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.cz.CzechAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.nl.DutchAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.fr.FrenchAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.de.GermanAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.KeywordAnalyzer
    #lucene.analyzer=org.apache.lucene.index.memory.PatternAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.PerFieldAnalyzerWrapper
    #lucene.analyzer=org.apache.lucene.analysis.ru.RussianAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.SimpleAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.snowball.SnowballAnalyzer
    lucene.analyzer=org.apache.lucene.analysis.standard.StandardAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.StopAnalyzer
    #lucene.analyzer=org.apache.lucene.analysis.WhitespaceAnalyzer

    #
    # Set Lucene's merge factor. Higher numbers mean indexing goes faster but
    # uses more memory. The default value from Lucene is 10. This should never
    # be set to a number lower than 2.
    #
    lucene.merge.factor=10

    #
    # Set how often to run Lucene's optimize method. Optimization speeds up
    # searching but slows down writing. Set this property to 0 to always
    # optimize. Set this property to an integer greater than 0 to optimize every
    # X writes.
    #
    lucene.optimize.interval=1

##
## SourceForge
##

    source.forge.mirrors=\
        http://downloads.sourceforge.net,\      # Redirect
        http://internap.dl.sourceforge.net,\    # San Jose, CA
        http://superb-east.dl.sourceforge.net,\ # McLean, Virginia
        http://superb-west.dl.sourceforge.net,\ # Seattle, Washington
        http://easynews.dl.sourceforge.net,\    # Phoenix, AZ
        http://kent.dl.sourceforge.net,\        # Kent, UK
        http://ufpr.dl.sourceforge.net,\        # Curitiba, Brazil
        http://belnet.dl.sourceforge.net,\      # Brussels, Belgium
        http://switch.dl.sourceforge.net,\      # Lausanne, Switzerland
        http://mesh.dl.sourceforge.net,\        # Duesseldorf, Germany
        http://ovh.dl.sourceforge.net,\         # Paris, France
        http://dfn.dl.sourceforge.net,\         # Berlin, Germany
        http://heanet.dl.sourceforge.net,\      # Dublin, Ireland
        http://garr.dl.sourceforge.net,\        # Bologna, Italy
        http://surfnet.dl.sourceforge.net       # Amsterdam, The Netherlands
        http://jaist.dl.sourceforge.net,\       # Ishikawa, Japan
        http://nchc.dl.sourceforge.net,\        # Tainan, Taiwan
        http://optusnet.dl.sourceforge.net      # Sydney, Australia

##
## Value Object
##

    #
    # You can add a listener for a specific class by setting the property
    # "value.object.listener" plus the class name to a class that implements
    # com.liferay.portal.model.ModelListener.
    #
    value.object.listener.com.liferay.portal.model.Contact=com.liferay.portal.model.ContactListener
    value.object.listener.com.liferay.portal.model.Layout=com.liferay.portal.model.LayoutListener
    value.object.listener.com.liferay.portal.model.LayoutSet=com.liferay.portal.model.LayoutSetListener
    value.object.listener.com.liferay.portal.model.PortletPreferences=com.liferay.portal.model.PortletPreferencesListener
    value.object.listener.com.liferay.portal.model.User=com.liferay.portal.model.UserListener
    value.object.listener.com.liferay.portlet.journal.model.JournalArticle=com.liferay.portlet.journal.model.JournalArticleListener
    value.object.listener.com.liferay.portlet.journal.model.JournalTemplate=com.liferay.portlet.journal.model.JournalTemplateListener

    #
    # Value objects are cached by default. You can disable caching for all
    # objects or per object.
    #
    # For mapping tables, the key is the mapping table itself.
    #
    value.object.finder.cache.enabled=true
    value.object.finder.cache.enabled.com.liferay.portal.model.Layout=true
    value.object.finder.cache.enabled.com.liferay.portal.model.User=true
    value.object.finder.cache.enabled.Users_Roles=true

##
## Last Modified
##

    #
    # Set the following to true to check last modified date on server side CSS
    # and JavaScript.
    #
    last.modified.check=true

    #
    # Enter a list of comma delimited paths that will only be executed when
    # newer than the last modified date. These paths must extend
    # com.liferay.portal.lastmodified.LastModifiedAction.
    #
    last.modified.paths=\
        /portal/css_cached,\
        /portal/javascript_cached

##
## XSS (Cross Site Scripting)
##

    #
    # Set the following to false to ensure that all persisted data is stripped
    # of XSS hacks.
    #
    xss.allow=false

    #
    # You can override the "xss.allow" setting for a specific class by setting
    # the property "xss.allow" plus the class name.
    #
    xss.allow.com.liferay.portal.model.Portlet=true
    xss.allow.com.liferay.portal.model.PortletPreferences=true

    #
    # You can override the "xss.allow" setting for a specific field in a class
    # by setting the property "xss.allow" plus the class and field name.
    #
    xss.allow.com.liferay.portlet.journal.model.JournalArticle.content=true
    xss.allow.com.liferay.portlet.journal.model.JournalStructure.xsd=true
    xss.allow.com.liferay.portlet.journal.model.JournalTemplate.xsl=true

##
## Communication Link
##

    #
    # Set the JGroups properties used by the portal to communicate with other
    # instances of the portal. This is only needed if the portal is running in a
    # clustered environment. The JGroups settings provides a mechanism for the
    # portal to broadcast messages to the other instances of the portal. The
    # specified multicast address should be unique for internal portal messaging
    # only. You will still need to set the Hibernate and Ehcache settings for
    # database clustering.
    #
    #comm.link.properties=UDP(bind_addr=127.0.0.1;mcast_addr=231.12.21.102;mcast_port=45566;ip_ttl=32;mcast_send_buf_size=150000;mcast_recv_buf_size=80000):PING(timeout=2000;num_initial_members=3):MERGE2(min_interval=5000;max_interval=10000):FD_SOCK:VERIFY_SUSPECT(timeout=1500):pbcast.NAKACK(gc_lag=50;retransmit_timeout=300,600,1200,2400,4800;max_xmit_size=8192):UNICAST(timeout=300,600,1200,2400):pbcast.STABLE(desired_avg_gossip=20000):FRAG(frag_size=8096;down_thread=false;up_thread=false):pbcast.GMS(join_timeout=5000;join_retry_timeout=2000;shun=false;print_local_addr=true)

##
## Content Delivery Network
##

    #
    # Set the hostname that will be used to serve static content via a CDN. This
    # property can be overridden dynamically at runtime by setting the HTTP
    # parameter "cdn_host".
    #
    cdn.host=

##
## Counter
##

    #
    # Set the number of increments between database updates to the Counter
    # table. Set this value to a higher number for better performance.
    #
    counter.increment=100

##
## Lock
##

    #
    # Set the lock expiration time for each class.
    #

    #
    # 1 day
    #
    lock.expiration.time.com.liferay.portlet.documentlibrary.model.DLFileEntry=86400000

    #
    # 20 minutes
    #
    lock.expiration.time.com.liferay.portlet.wiki.model.WikiPage=1200000

##
## Jabber
##

    jabber.xmpp.server.enabled=false
    jabber.xmpp.server.address=localhost
    jabber.xmpp.server.name=localhost
    jabber.xmpp.server.port=5222
    jabber.xmpp.user.password=L1f3RayJabb3r

##
## JBI
##

    #
    # Connect to either Mule or ServiceMix as your ESB.
    #
    jbi.workflow.url=http://localhost:8080/mule-web/workflow
    #jbi.workflow.url=http://localhost:8080/servicemix-web/workflow

##
## JCR
##

    jcr.initialize.on.startup=false

    jcr.workspace.name=liferay
    jcr.node.documentlibrary=documentlibrary

    jcr.jackrabbit.repository.root=${resource.repositories.root}/jackrabbit
    jcr.jackrabbit.config.file.path=${jcr.jackrabbit.repository.root}/repository.xml
    jcr.jackrabbit.repository.home=${jcr.jackrabbit.repository.root}/home
    jcr.jackrabbit.credentials.username=none
    jcr.jackrabbit.credentials.password=none

##
## OpenOffice
##

    #
    # Enabling OpenOffice integration allows the Document Library portlet to
    # provide document conversion functionality. This is tested with
    # OpenOffice 2.3.x. To start OpenOffice as a service, run the command:
    #
    # soffice -headless -accept="socket,host=127.0.0.1,port=8100;urp;" -nofirststartwizard
    #
    openoffice.server.enabled=false
    openoffice.server.host=127.0.0.1
    openoffice.server.port=8100

##
## POP
##

    #
    # Set this to true to enable polling of email notifications from a POP
    # server. The user credentials are the same used for SMTP authentication
    # and is specified in the mail/MailSession configuration for each
    # application server.
    #
    pop.server.notifications.enabled=false

    #
    # Set the interval on which the POPNotificationsJob will run. The value is
    # set in one minute increments.
    #
    pop.server.notifications.interval=1

    pop.server.subdomain=events

##
## Reverse AJAX
##

    reverse.ajax.enabled=false
    reverse.ajax.heartbeat=180000

##
## Scheduler
##

    #
    # Set this to false to disable all scheduler classes defined in
    # liferay-portlet.xml.
    #
    scheduler.enabled=true

##
## Social Bookmarks
##

    social.bookmark.types=blinklist,delicious,digg,furl,newsvine,reddit,technorati

    social.bookmark.post.url[blinklist]=http://blinklist.com/index.php?Action=Blink/addblink.php&url=${liferay:social-bookmark:url}&Title=${liferay:social-bookmark:title}
    social.bookmark.post.url[delicious]=http://del.icio.us/post?url=${liferay:social-bookmark:url}&title=${liferay:social-bookmark:title}
    social.bookmark.post.url[digg]=http://digg.com/submit?phase=2&url=${liferay:social-bookmark:url}
    social.bookmark.post.url[furl]=http://furl.net/storeIt.jsp?u=${liferay:social-bookmark:url}&t=${liferay:social-bookmark:title}
    social.bookmark.post.url[newsvine]=http://www.newsvine.com/_tools/seed&save?u=${liferay:social-bookmark:url}&h=${liferay:social-bookmark:title}
    social.bookmark.post.url[reddit]=http://reddit.com/submit?url=${liferay:social-bookmark:url}&title=${liferay:social-bookmark:title}
    social.bookmark.post.url[technorati]=http://technorati.com/cosmos/search.html?url=${liferay:social-bookmark:url}

##
## Velocity Engine
##

    #
    # Input a list of comma delimited class names that extend
    # com.liferay.util.velocity.VelocityResourceListener. These classes will
    # run in sequence to allow you to find the applicable ResourceLoader
    # to load a Velocity template.
    #
    velocity.engine.resource.listeners=com.liferay.portal.velocity.ServletVelocityResourceListener,com.liferay.portal.velocity.JournalTemplateVelocityResourceListener,com.liferay.portal.velocity.ThemeLoaderVelocityResourceListener,com.liferay.portal.velocity.ClassLoaderVelocityResourceListener

    #
    # Set the Velocity resource managers. We extend the Velocity's default
    # resource managers for better scalability.
    #
    # Note that the modification check interval is not respected because the
    # resource loader implementation does not know the last modified date of a
    # resource. This means you will need to turn off caching if you want to be
    # able to modify VM templates in themes and see the changes right away.
    #
    velocity.engine.resource.manager=com.liferay.portal.velocity.LiferayResourceManager
    velocity.engine.resource.manager.cache=com.liferay.portal.velocity.LiferayResourceCache
    velocity.engine.resource.manager.cache.enabled=true
    #velocity.engine.resource.manager.modification.check.interval=0

    #
    # Input a list of comma delimited macros that will be loaded. These files
    # must exist in the class path.
    #
    velocity.engine.velocimacro.library=VM_global_library.vm,VM_liferay.vm

    #
    # Set the Velocity logging configuration.
    #
    velocity.engine.logger=org.apache.velocity.runtime.log.SimpleLog4JLogSystem
    velocity.engine.logger.category=org.apache.velocity

##
## Virtual Hosts
##

    #
    # Set the hosts that will be ignored for virtual hosts.
    #
    virtual.hosts.ignore.hosts=\
        127.0.0.1,\
        localhost

    #
    # Set the paths that will be ignored for virtual hosts.
    #
    virtual.hosts.ignore.paths=\
        /c,\
        \
        /c/portal/change_password,\
        /c/portal/css_cached,\
        /c/portal/extend_session,\
        /c/portal/extend_session_confirm,\
        /c/portal/javascript_cached,\
        /c/portal/json_service,\
        /c/portal/layout,\
        /c/portal/login,\
        /c/portal/logout,\
        /c/portal/render_portlet,\
        /c/portal/reverse_ajax,\
        /c/portal/session_tree_js_click,\
        /c/portal/status,\
        /c/portal/update_layout,\
        /c/portal/update_terms_of_use,\
        /c/portal/upload_progress_poller,\
        \
        /c/chat/roster,\
        \
        /c/layout_configuration/templates,\
        /c/layout_management/update_page,\
        \
        /c/messaging/action

##
## Web Server
##

    #
    # Set the HTTP and HTTPs ports when running the portal in a J2EE server that
    # is sitting behind another web server like Apache. Set the values to -1 if
    # the portal is not running behind another web server like Apache.
    #
    web.server.http.port=-1
    web.server.https.port=-1

    #
    # Set the hostname that will be used when the portlet generates URLs.
    # Leaving this blank will mean the host is derived from the servlet
    # container.
    #
    web.server.host=

    #
    # Set the preferred protocol.
    #
    #web.server.protocol=https

    #
    # Set this to true to display the server name at the bottom of every page.
    # This is useful when testing clustering configurations so that you can know
    # which node you are accessing.
    #
    web.server.display.node=false

##
## WebDAV
##

    #
    # Set the following to true to enable programmatic configuration to let the
    # WebDAV be configured for litmus testing. This should never be set to true
    # unless you are running the litmus tests.
    #
    webdav.litmus=false

##
## Main Servlet
##

    #
    # Servlets can be protected by com.liferay.filters.secure.SecureFilter.
    #
    # Input a list of comma delimited IPs that can access this servlet. Input a
    # blank list to allow any IP to access this servlet. SERVER_IP will be
    # replaced with the IP of the host server.
    #
    main.servlet.hosts.allowed=

    #
    # Set the following to true if this servlet can only be accessed via https.
    #
    main.servlet.https.required=false

##
## Axis Servlet
##

    #
    # See Main Servlet on how to protect this servlet.
    #
    axis.servlet.hosts.allowed=127.0.0.1,SERVER_IP
    axis.servlet.https.required=false

##
## JSON Tunnel Servlet
##

    #
    # See Main Servlet on how to protect this servlet.
    #
    json.servlet.hosts.allowed=
    json.servlet.https.required=false

##
## Liferay Tunnel Servlet
##

    #
    # See Main Servlet on how to protect this servlet.
    #
    tunnel.servlet.hosts.allowed=127.0.0.1,SERVER_IP
    tunnel.servlet.https.required=false

##
## Spring Remoting Servlet
##

    #
    # See Main Servlet on how to protect this servlet.
    #
    spring.remoting.servlet.hosts.allowed=127.0.0.1,SERVER_IP
    spring.remoting.servlet.https.required=false

##
## WebDAV Servlet
##

    #
    # See Main Servlet on how to protect this servlet.
    #
    webdav.servlet.hosts.allowed=
    webdav.servlet.https.required=false

##
## Admin Portlet
##

    #
    # Input a list of default group names separated by \n characters.
    #
    admin.default.group.names=

    #
    # Input a list of default role names separated by \n characters.
    #
    admin.default.role.names=Power User\nUser

    #
    # Input a list of default user group names separated by \n characters.
    #
    admin.default.user.group.names=

    #
    # Input a list of mail host names separated by \n characters.
    #
    admin.mail.host.names=

    #
    # Input a list of reserved screen names separated by \n characters.
    #
    admin.reserved.screen.names=

    #
    # Input a list of reserved email addresses separated by \n characters.
    #
    admin.reserved.email.addresses=

    admin.email.from.name=Joe Bloggs
    admin.email.from.address=test@liferay.com

    admin.email.user.added.enabled=true
    admin.email.user.added.subject=com/liferay/portlet/admin/dependencies/email_user_added_subject.tmpl
    admin.email.user.added.body=com/liferay/portlet/admin/dependencies/email_user_added_body.tmpl

    admin.email.password.sent.enabled=true
    admin.email.password.sent.subject=com/liferay/portlet/admin/dependencies/email_password_sent_subject.tmpl
    admin.email.password.sent.body=com/liferay/portlet/admin/dependencies/email_password_sent_body.tmpl

##
## Blogs Portlet
##

    blogs.email.comments.added.enabled=true
    blogs.email.comments.added.subject=com/liferay/portlet/blogs/dependencies/email_comments_added_subject.tmpl
    blogs.email.comments.added.body=com/liferay/portlet/blogs/dependencies/email_comments_added_body.tmpl

    blogs.page.abstract.length=400

    blogs.rss.abstract.length=200

##
## Calendar Portlet
##

    #
    # Set the list of event types. The display text of each of the event types
    # is set in content/Language.properties.
    #
    calendar.event.types=anniversary,appointment,bill-payment,birthday,breakfast,call,chat,class,club-event,concert,dinner,event,graduation,happy-hour,holiday,interview,lunch,meeting,movie,net-event,other,party,performance,press-release,reunion,sports-event,travel,tv-show,vacation,wedding

    calendar.email.from.name=Joe Bloggs
    calendar.email.from.address=test@liferay.com

    calendar.email.event.reminder.enabled=true
    calendar.email.event.reminder.subject=com/liferay/portlet/calendar/dependencies/email_event_reminder_subject.tmpl
    calendar.email.event.reminder.body=com/liferay/portlet/calendar/dependencies/email_event_reminder_body.tmpl

##
## Communities Portlet
##

    communities.email.from.name=Joe Bloggs
    communities.email.from.address=test@liferay.com

    communities.email.membership.reply.subject=com/liferay/portlet/communities/dependencies/email_membership_request_subject.tmpl
    communities.email.membership.reply.body=com/liferay/portlet/communities/dependencies/email_membership_request_body.tmpl

    communities.email.membership.request.subject=com/liferay/portlet/communities/dependencies/email_membership_reply_subject.tmpl
    communities.email.membership.request.body=com/liferay/portlet/communities/dependencies/email_membership_reply_body.tmpl

##
## Document Library Portlet
##

    #
    # Set the name of a class that implements
    # com.liferay.documentlibrary.util.Hook. The
    # document library server will use this persist documents.
    #
    # Available hooks are:
    #     com.liferay.documentlibrary.util.FileSystemHook
    #     com.liferay.documentlibrary.util.JCRHook
    #     com.liferay.documentlibrary.util.S3Hook
    #
    #dl.hook.impl=com.liferay.documentlibrary.util.FileSystemHook
    dl.hook.impl=com.liferay.documentlibrary.util.JCRHook
    #dl.hook.impl=com.liferay.documentlibrary.util.S3Hook

    #
    # FileSystemHook
    #
    dl.hook.file.system.root.dir=${resource.repositories.root}/document_library

    #
    # S3Hook
    #
    dl.hook.s3.access.key=
    dl.hook.s3.secret.key=
    dl.hook.s3.bucket.name=

    #
    # S3Hook
    #
    dl.hook.s3.access.key=
    dl.hook.s3.secret.key=
    dl.hook.s3.bucket.name=

    #
    # Set the maximum file size and valid file extensions for documents. A value
    # of 0 for the maximum file size can be used to indicate unlimited file
    # size. However, the maximum file size allowed by the system is set in
    # property "com.liferay.util.servlet.UploadServletRequest.max.size" found in
    # system.properties. A file extension of * will permit all file extensions.
    #
    # You can map a GIF for the extension by adding the image to the theme's
    # image display and document library folder. The wildcard extension of *
    # will be ignored. For example, the default image for the DOC extension
    # would be found in: /html/themes/classic/images/document_library/doc.gif.
    #
    #dl.file.max.size=307200
    #dl.file.max.size=1024000
    dl.file.max.size=3072000
    dl.file.extensions=.bmp,.css,.doc,.dot,.gif,.gz,.htm,.html,.jpg,.js,.odb,.odf,.odg,.odp,.ods,.odt,.pdf,.png,.ppt,.rtf,.swf,.sxc,.sxi,.sxw,.tar,.tiff,.tgz,.txt,.vsd,.xls,.xml,.zip

    #
    # Set folder names that will be used to synchronize with a community's set
    # of private and public layouts. This will allow users to manage layouts
    # using the Document Library portlet, and ultimately, via WebDAV. This
    # feature is experimental.
    #
    dl.layouts.sync.enabled=false
    dl.layouts.sync.private.folder=Pages - Private
    dl.layouts.sync.public.folder=Pages - Public

##
## Image Gallery Portlet
##

    #
    # Set the maximum file size and valid file extensions for images. A value
    # of 0 for the maximum file size can be used to indicate unlimited file
    # size. However, the maximum file size allowed by the system is set in
    # property "com.liferay.util.servlet.UploadServletRequest.max.size" found in
    # system.properties. A file extension of * will permit all file extensions.
    # Set the maximum thumbnail height or width to 0 to ignore that dimension.
    #
    ig.image.max.size=307200
    ig.image.extensions=.bmp,.gif,.jpeg,.jpg,.png,.tif,.tiff
    ig.image.thumbnail.max.height=50
    ig.image.thumbnail.max.width=50

##
## Invitation Portlet
##

    invitation.email.max.recipients=20
    invitation.email.message.body=com/liferay/portlet/invitation/dependencies/email_message_body.tmpl
    invitation.email.message.subject=com/liferay/portlet/invitation/dependencies/email_message_subject.tmpl

##
## Journal Portlet
##

    #
    # Set this to true if article ids should always be autogenerated.
    #
    journal.article.force.autogenerate.id=true

    #
    # Set this to true so that only the latest version of an article that is
    # also not approved can be saved without incrementing version.
    #
    journal.article.force.increment.version=false

    #
    # Set the list of article types. The display text of each of the article
    # types is set in content/Language.properties.
    #
    journal.article.types=announcements,blogs,general,news,press-release,test

    #
    # Set the token used when inserting simple page breaks in articles.
    #
    journal.article.token.page.break=@page_break@

    #
    # Set the interval on which the CheckArticleJob will run. The value is set
    # in one minute increments.
    #
    journal.article.check.interval=15

    #
    # Set this to true if feed ids should always be autogenerated.
    #
    journal.feed.force.autogenerate.id=false

    #
    # Set this to true if structure ids should always be autogenerated.
    #
    journal.structure.force.autogenerate.id=false

    #
    # Set this to true if template ids should always be autogenerated.
    #
    journal.template.force.autogenerate.id=false

    #
    # Input a comma delimited list of variables which are restricted from the
    # context in Velocity based Journal templates.
    #
    journal.template.velocity.restricted.variables=serviceLocator

    #
    # Set the maximum file size and valid file extensions for images. A value
    # of 0 for the maximum file size can be used to indicate unlimited file
    # size. However, the maximum file size allowed by the system is set in
    # property "com.liferay.util.servlet.UploadServletRequest.max.size" found in
    # system.properties. A file extension of * will permit all file extensions.
    #
    journal.image.small.max.size=51200
    journal.image.extensions=.gif,.jpeg,.jpg,.png

    #
    # Input a list of comma delimited class names that extend
    # com.liferay.portlet.journal.util.TransformerListener. These classes will
    # run in sequence to allow you to modify the XML and XSL before it's
    # transformed and allow you to modify the final output.
    #
    journal.transformer.listener=\
        com.liferay.portlet.journal.util.TokensTransformerListener,\
        #com.liferay.portlet.journal.util.PropertiesTransformerListener,\
        com.liferay.portlet.journal.util.ContentTransformerListener,\
        com.liferay.portlet.journal.util.LocaleTransformerListener,\
        com.liferay.portlet.journal.util.ViewCounterTransformerListener

    #
    # Set whether to synchronize content searches when server starts.
    #
    journal.sync.content.search.on.startup=false

    journal.email.from.name=Joe Bloggs
    journal.email.from.address=test@liferay.com

    journal.email.article.approval.denied.enabled=false
    journal.email.article.approval.denied.subject=com/liferay/portlet/journal/dependencies/email_article_approval_denied_subject.tmpl
    journal.email.article.approval.denied.body=com/liferay/portlet/journal/dependencies/email_article_approval_denied_body.tmpl

    journal.email.article.approval.granted.enabled=false
    journal.email.article.approval.granted.subject=com/liferay/portlet/journal/dependencies/email_article_approval_granted_subject.tmpl
    journal.email.article.approval.granted.body=com/liferay/portlet/journal/dependencies/email_article_approval_granted_body.tmpl

    journal.email.article.approval.requested.enabled=false
    journal.email.article.approval.requested.subject=com/liferay/portlet/journal/dependencies/email_article_approval_requested_subject.tmpl
    journal.email.article.approval.requested.body=com/liferay/portlet/journal/dependencies/email_article_approval_requested_body.tmpl

    journal.email.article.review.enabled=false
    journal.email.article.review.subject=com/liferay/portlet/journal/dependencies/email_article_review_subject.tmpl
    journal.email.article.review.body=com/liferay/portlet/journal/dependencies/email_article_review_body.tmpl

##
## Journal Articles Portlet
##

    #
    # Set the available values for the number of articles to display per page.
    #
    journal.articles.page.delta.values=5,10,25,50,100

##
## Mail Portlet
##

    #
    # Set the following to false if administrator should not be allowed to
    # change the mail domain via the Admin portlet.
    #
    mail.mx.update=true

    #
    # Set the name of a class that implements com.liferay.mail.util.Hook. The
    # mail server will use this class to ensure that the mail and portal servers
    # are synchronized on user information. The portal will not know how to add,
    # update, or delete users from the mail server except through this hook.
    #
    # Available hooks are:
    #     com.liferay.mail.util.CyrusHook
    #     com.liferay.mail.util.DummyHook
    #     com.liferay.mail.util.FuseMailHook
    #     com.liferay.mail.util.SendmailHook
    #     com.liferay.mail.util.ShellHook
    #
    mail.hook.impl=com.liferay.mail.util.DummyHook

    #
    # CyrusHook
    #
    # Set the commands for adding, updating, and deleting a user where
    # %1% is the user id. Replace the password with the password for the cyrus
    # user.
    #
    mail.hook.cyrus.add.user=cyrusadmin password create %1%
    #mail.hook.cyrus.add.user=cyrus_adduser password %1%
    mail.hook.cyrus.delete.user=cyrusadmin password delete %1%
    #mail.hook.cyrus.delete.user=cyrus_userdel password %1%
    mail.hook.cyrus.home=/home/cyrus

    #
    # FuseMailHook
    #
    # See http://www.fusemail.com/support/api.html for more information. You must
    # also update the "mail.account.finder" property.
    #
    mail.hook.fusemail.url=https://www.fusemail.com/api/request.html
    mail.hook.fusemail.username=
    mail.hook.fusemail.password=
    mail.hook.fusemail.account.type=group_subaccount
    mail.hook.fusemail.group.parent=

    #
    # SendmailHook
    #
    # Set the commands for adding, updating, and deleting a user where
    # %1% is the user id and %2% is the password. Set the home and
    # virtual user table information.
    #
    mail.hook.sendmail.add.user=adduser %1% -s /bin/false
    mail.hook.sendmail.change.password=autopasswd %1% %2%
    mail.hook.sendmail.delete.user=userdel -r %1%
    mail.hook.sendmail.home=/home
    mail.hook.sendmail.virtusertable=/etc/mail/virtusertable
    mail.hook.sendmail.virtusertable.refresh=bash -c "makemap hash /etc/mail/virtusertable < /etc/mail/virtusertable"

    #
    # ShellHook
    #
    # Set the location of the shell script that will interface with any mail
    # server.
    #
    mail.hook.shell.script=/usr/sbin/mailadmin.ksh

    #
    # Set the mail box style that your IMAP server uses. Washington IMAP uses
    # "mail/" whereas Courier IMAP and Cyrus IMAP use "INBOX." as their mail box
    # styles. The mail box style is an IMAP implementation specific namespace
    # that is used in referencing folders.
    #
    mail.box.style=mail/
    #mail.box.style=INBOX.

    #
    # Set the name of the Inbox folder. Most IMAP servers use "INBOX" as the
    # folder name. Domino requires "Inbox" as the folder name.
    #
    mail.inbox.name=INBOX
    #mail.inbox.name=Inbox

    #
    # Set other default folder names.
    #
    mail.spam.name=Spam
    mail.sent.name=Sent
    mail.drafts.name=Drafts
    mail.trash.name=Trash

    #
    # The user will be warned once per session to empty their spam if their spam
    # folder exceeds this size. Set the size to 0 to disable any warnings.
    #
    mail.spam.warning.size=5120000

    #
    # The user will be warned once per session to empty their trash if their
    # trash folder exceeds this size. Set the size to 0 to disable any warnings.
    #
    mail.trash.warning.size=5120000

    #
    # Set to true to enable SMTP debugging.
    #
    mail.smtp.debug=false

    #
    # Input a list of comma delimited email addresses that will receive a BCC of
    # every email sent through the mail server.
    #
    mail.audit.trail=

    #
    # Set the maximum file size for attachments. However, the maximum file size
    # allowed by the system is set in property
    # "com.liferay.util.servlet.UploadServletRequest.max.size" found in
    # system.properties.
    #
    mail.attachments.max.size=3072000

    #
    # Specify a class name that implements
    # com.liferay.portlet.mail.util.multiaccount.AccountFinder. Another
    # implementation could allow the Mail portlet to access multiple accounts.
    #
    #mail.account.finder=com.liferay.portlet.mail.util.multiaccount.EmailAddressAccountFinder
    #mail.account.finder=com.liferay.portlet.mail.util.multiaccount.FuseMailAccountFinder
    #mail.account.finder=com.liferay.portlet.mail.util.multiaccount.ScreenNameAccountFinder
    mail.account.finder=com.liferay.portlet.mail.util.multiaccount.UserIdAccountFinder

    #
    # The password lookup algorithm for account finders first checks the
    # session and then the User_ table for the passsword. Sometimes it's helpful
    # for testing purposes to be able to manually set a password for all users.
    # This can also useful if the IMAP mail server is secure behind a firewall
    # and you don't want to deal with synchronizing passwords between systems.
    #
    mail.account.finder.password=

    #
    # Input a list of comma delimited class names that implement
    # com.liferay.portlet.mail.util.recipient.RecipientFinder. These classes
    # will be used to find available recipients for the mail portlet.
    #
    mail.recipient.finder=com.liferay.portlet.mail.util.recipient.DirectoryRecipientFinder

##
## Message Boards Portlet
##

    message.boards.email.from.name=Joe Bloggs
    message.boards.email.from.address=test@liferay.com

    message.boards.email.message.added.enabled=true
    message.boards.email.message.added.subject.prefix=com/liferay/portlet/messageboards/dependencies/email_message_added_subject_prefix.tmpl
    message.boards.email.message.added.body=com/liferay/portlet/messageboards/dependencies/email_message_added_body.tmpl
    message.boards.email.message.added.signature=com/liferay/portlet/messageboards/dependencies/email_message_added_signature.tmpl

    message.boards.email.message.updated.enabled=true
    message.boards.email.message.updated.subject.prefix=com/liferay/portlet/messageboards/dependencies/email_message_updated_subject_prefix.tmpl
    message.boards.email.message.updated.body=com/liferay/portlet/messageboards/dependencies/email_message_updated_body.tmpl
    message.boards.email.message.updated.signature=com/liferay/portlet/messageboards/dependencies/email_message_updated_signature.tmpl

    #
    # Set this to true to allow anonymous posting.
    #
    message.boards.anonymous.posting.enabled=true

    #
    # Enter time in minutes on how often this job is run. If a user's ban is set
    # to expire at 12:05 PM and the job runs at 2 PM, the expire will occur
    # during the 2 PM run.
    #
    message.boards.expire.ban.job.interval=120

    #
    # Enter time in days to automatically expire bans on users. Set to 0
    # to disable auto expire.
    #
    message.boards.expire.ban.interval=10
    #message.boards.expire.ban.interval=0

    message.boards.rss.abstract.length=200

##
## My Places Portlet
##

    #
    # Set this to true to show user public sites with no layouts.
    #
    my.places.show.user.public.sites.with.no.layouts=true

    #
    # Set this to true to show user private sites with no layouts.
    #
    my.places.show.user.private.sites.with.no.layouts=true

    #
    # Set this to true to show organization public sites with no layouts.
    #
    my.places.show.organization.public.sites.with.no.layouts=true

    #
    # Set this to true to show organization private sites with no layouts.
    #
    my.places.show.organization.private.sites.with.no.layouts=true

    #
    # Set this to true to show community public sites with no layouts.
    #
    my.places.show.community.public.sites.with.no.layouts=true

    #
    # Set this to true to show community private sites with no layouts.
    #
    my.places.show.community.private.sites.with.no.layouts=true

##
## Navigation Portlet
##

    #
    # Specify the options that will be provided to the user in the edit
    # configuration mode of the portlet.
    #
    navigation.display.style.options=1,2,3,4,5,6

    #
    # Define each mode with 4 comma delimited strings that represent the form:
    # headerType, rootLayoutType, rootLayoutLevel, and includedLayouts.
    #
    navigation.display.style[1]=breadcrumb,relative,0,auto
    navigation.display.style[2]=root-layout,absolute,2,auto
    navigation.display.style[3]=root-layout,absolute,1,auto
    navigation.display.style[4]=none,absolute,1,auto
    navigation.display.style[5]=none,absolute,1,all
    navigation.display.style[6]=none,absolute,0,auto

##
## Nested Portlets Portlet
##

    nested.portlets.layout.template.default=2_columns_i

    #
    # Add a comma separated list of layout template ids that should not be
    # allowed in the Nested Portlets Portlet.
    #
    nested.portlets.layout.template.unsupported=freeform,1_column

##
## Portlet CSS Portlet
##

    #
    # Set this to true to enable the ability to modify portlet CSS at runtime
    # via the Look and Feel icon. Disabling it can speed up performance.
    #
    portlet.css.enabled=true

##
## Shopping Portlet
##

    #
    # Set the following to true if cart quantities must be a multiple of the
    # item's minimum quantity.
    #
    shopping.cart.min.qty.multiple=true

    #
    # Set the following to true to forward to the cart page when adding an item
    # from the category page. The item must not have dynamic fields. All items
    # with dynamic fields will forward to the item's details page regardless of
    # the following setting.
    #
    shopping.category.forward.to.cart=false

    #
    # Set the following to true to show special items when browsing a category.
    #
    shopping.category.show.special.items=false

    #
    # Set the following to true to show availability when viewing an item.
    #
    shopping.item.show.availability=true

    #
    # Set the maximum file size and valid file extensions for images. A value
    # of 0 for the maximum file size can be used to indicate unlimited file
    # size. However, the maximum file size allowed by the system is set in
    # property "com.liferay.util.servlet.UploadServletRequest.max.size" found in
    # system.properties. A file extension of * will permit all file extensions.
    #
    shopping.image.small.max.size=51200
    shopping.image.medium.max.size=153600
    shopping.image.large.max.size=307200
    shopping.image.extensions=.gif,.jpeg,.jpg,.png

    shopping.email.from.name=Joe Bloggs
    shopping.email.from.address=test@liferay.com

    shopping.email.order.confirmation.enabled=true
    shopping.email.order.confirmation.subject=com/liferay/portlet/shopping/dependencies/email_order_confirmation_subject.tmpl
    shopping.email.order.confirmation.body=com/liferay/portlet/shopping/dependencies/email_order_confirmation_body.tmpl

    shopping.email.order.shipping.enabled=true
    shopping.email.order.shipping.subject=com/liferay/portlet/shopping/dependencies/email_order_shipping_subject.tmpl
    shopping.email.order.shipping.body=com/liferay/portlet/shopping/dependencies/email_order_shipping_body.tmpl

##
## Software Catalog Portlet
##

    #
    # Set the maximum file size and max file dimensions for thumbnnails. A value
    # of 0 for the maximum file size can be used to indicate unlimited file
    # size. However, the maximum file size allowed by the system is set in
    # property "com.liferay.util.servlet.UploadServletRequest.max.size" found in
    # system.properties.
    #
    sc.image.max.size=307200
    sc.image.thumbnail.max.height=200
    sc.image.thumbnail.max.width=160

##
## Tags Compiler Portlet
##

    #
    # Set this to true to enable the ability to compile tags from the URL.
    # Disabling it can speed up performance.
    #
    tags.compiler.enabled=true

##
## Tags Portlet
##

    #
    # Input a class name that extends
    # com.liferay.portlet.tags.util.TagsAssetValidator. This class will be
    # called to validate assets. The TagsAssetValidator class is just an empty
    # class that doesn't actually do any validation. The BasicTagsAssetValidator
    # requires all assets to have at least one tag entry.
    #
    tags.asset.validator=com.liferay.portlet.tags.util.TagsAssetValidator
    #tags.asset.validator=com.liferay.portlet.tags.util.BasicTagsAssetValidator

##
## Translator Portlet
##

    #
    # Set the default languages to translate a given text.
    #
    translator.default.languages=en_es

##
## Web Form Portlet
##

    #
    # Set the maximum number of dynamic fields to process.
    #
    web.form.portlet.max.fields=50

##
## Wiki Portlet
##

    #
    # Set the URL of a page that contains more information about the classic
    # syntax of the wiki. It will be shown to the user when editing a page.
    #
    wiki.classic.syntax.help.url=http://wiki.liferay.com/index.php/Wiki_Portlet

    #
    # Set the name of the default page for a wiki node. The name for the default
    # page must be a valid wiki word. A wiki word follows the format of having
    # an upper case letter followed by a series of lower case letters followed
    # by another upper case letter and another series of lower case letters. See
    # http://www.usemod.com/cgi-bin/wiki.pl?WhatIsaWiki for more information on
    # wiki naming conventions. It is
    #
    wiki.front.page.name=FrontPage

    #
    # Set the name of the default node that will be automatically created when
    # the Wiki portlet is first used in a community.
    #
    wiki.initial.node.name=Main