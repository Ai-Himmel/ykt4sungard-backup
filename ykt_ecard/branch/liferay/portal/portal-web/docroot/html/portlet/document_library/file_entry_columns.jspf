<%
/**
 * Copyright (c) 2000-2008 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<%
for (int j = 0; j < fileEntryColumns.length; j++) {
	String fileEntryColumn = fileEntryColumns[j];

	if (fileEntryColumn.equals("action")) {
		String align = SearchEntry.DEFAULT_ALIGN;

		if ((j + 1) == fileEntryColumns.length) {
			align = "right";
		}

		String valign = SearchEntry.DEFAULT_VALIGN;

		row.addJSP(align, valign, "/html/portlet/document_library/file_entry_action.jsp");
	}
	else if (fileEntryColumn.equals("document")) {
		StringMaker sm = new StringMaker();

		sm.append("<img align=\"left\" border=\"0\" src=\"");
		sm.append(themeDisplay.getPathThemeImages());
		sm.append("/document_library/");
		sm.append(DLUtil.getFileExtension(fileEntry.getName()));
		sm.append(".png\">");
		sm.append(fileEntry.getTitleWithExtension());

		if (Validator.isNotNull(fileEntry.getDescription())) {
			sm.append("<br />");
			sm.append(fileEntry.getDescription());
		}

		row.addText(sm.toString(), rowHREF);
	}
	else if (fileEntryColumn.equals("downloads")) {
		row.addText(String.valueOf(fileEntry.getReadCount()), rowHREF);
	}
	else if (fileEntryColumn.equals("locked")) {
		boolean isLocked = LockServiceUtil.isLocked(DLFileEntry.class.getName(), DLUtil.getLockId(fileEntry.getFolderId(), fileEntry.getName()));

		row.addText(LanguageUtil.get(pageContext, isLocked ? "yes" : "no"), rowHREF);
	}
	else if (fileEntryColumn.equals("size")) {
		row.addText(TextFormatter.formatKB(fileEntry.getSize(), locale) + "k", rowHREF);
	}
}
%>