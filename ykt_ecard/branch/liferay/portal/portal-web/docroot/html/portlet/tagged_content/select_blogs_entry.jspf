<%
/**
 * Copyright (c) 2000-2008 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<%
int assetOrder = ParamUtil.getInteger(request, "assetOrder", -1);

long userId = 0;

String keywords = ParamUtil.getString(request, "keywords");

PortletURL portletURL = renderResponse.createRenderURL();

portletURL.setParameter("struts_action", "/portlet_configuration/edit_configuration");
portletURL.setParameter("redirect", redirect);
portletURL.setParameter("backURL", redirect);
portletURL.setParameter("portletResource", portletResource);
portletURL.setParameter("typeSelection", BlogsEntry.class.getName());
%>

<liferay-ui:tabs names="entries" backURL="<%= configurationRenderURL.toString() %>" />

<div>
	<label for="<portlet:namespace />keywords"><liferay-ui:message key="search" /></label>

	<input id="<portlet:namespace />keywords" name="<portlet:namespace />keywords" size="30" type="text" value="<%= Html.escape(keywords) %>" onkeypress="if (event.keyCode == 13) { submitForm(document.<portlet:namespace />fm, '<%= portletURL.toString() %>'); }" />

	<input type="button" value="<liferay-ui:message key="search-entries" />" onclick="submitForm(document.<portlet:namespace />fm, '<%= portletURL.toString() %>');" />
</div>

<c:if test="<%= windowState.equals(WindowState.MAXIMIZED) %>">
	<script type="text/javascript">
		Liferay.Util.focusFormField(document.<portlet:namespace />fm.<portlet:namespace />keywords);
	</script>
</c:if>

<div class="separator"><!-- --></div>

<c:choose>
	<c:when test="<%= Validator.isNotNull(keywords) %>">

		<%
		List headerNames = new ArrayList();

		headerNames.add("entry");
		headerNames.add("user-name");
		headerNames.add("modified-date");
		headerNames.add("score");

		SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, headerNames, LanguageUtil.format(pageContext, "no-entries-were-found-that-matched-the-keywords-x", "<b>" + Html.escape(keywords) + "</b>"));

		Hits hits = null;

		try {
			hits = BlogsEntryLocalServiceUtil.search(company.getCompanyId(), portletGroupId.longValue(), userId, keywords);

			Hits results = hits.subset(searchContainer.getStart(), searchContainer.getEnd());
			int total = hits.getLength();

			searchContainer.setTotal(total);

			List resultRows = searchContainer.getResultRows();

			for (int i = 0; i < results.getLength(); i++) {
				com.liferay.portal.kernel.search.Document doc = results.doc(i);

				ResultRow row = new ResultRow(doc, i, i);

				long entryId = GetterUtil.getLong(doc.get("entryId"));

				BlogsEntry entry = BlogsEntryLocalServiceUtil.getEntry(entryId);

				TagsAsset asset = TagsAssetLocalServiceUtil.getAsset(BlogsEntry.class.getName(), entry.getEntryId());

				StringMaker sm = new StringMaker();

				sm.append("javascript: ");
				sm.append(renderResponse.getNamespace());
				sm.append("selectAsset('");
				sm.append(asset.getAssetId());
				sm.append("', '");
				sm.append(asset.getAssetId());
				sm.append("', '");
				sm.append(asset.getTitle());
				sm.append("', '");
				sm.append(assetOrder);
				sm.append("');");

				String rowHREF = sm.toString();

				// Title

				row.addText(entry.getTitle(), rowHREF);

				// User name

				row.addText(entry.getUserName(), rowHREF);

				// Modified date

				row.addText(dateFormatDate.format(entry.getModifiedDate()), rowHREF);

				// Score

				row.addScore(results.score(i));

				// Add result row

				resultRows.add(row);
			}
		}
		catch (Exception e) {
		}
		finally {
			if (hits != null) {
				hits.closeSearcher();
			}
		}
		%>

		<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />
	</c:when>
	<c:otherwise>

		<%
		List headerNames = new ArrayList();

		headerNames.add("entry");
		headerNames.add("user-name");
		headerNames.add("modified-date");

		SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, headerNames, "there-are-no-entries");

		int total = BlogsEntryLocalServiceUtil.getGroupEntriesCount(portletGroupId.longValue());

		searchContainer.setTotal(total);

		List results = BlogsEntryLocalServiceUtil.getGroupEntries(portletGroupId.longValue(), searchContainer.getStart(), searchContainer.getEnd());

		searchContainer.setResults(results);

		List resultRows = searchContainer.getResultRows();

		for (int i = 0; i < results.size(); i++) {
			BlogsEntry entry = (BlogsEntry)results.get(i);

			ResultRow row = new ResultRow(entry, entry.getEntryId(), i);

			TagsAsset asset = TagsAssetLocalServiceUtil.getAsset(BlogsEntry.class.getName(), entry.getEntryId());

			StringMaker sm = new StringMaker();

			sm.append("javascript: ");
			sm.append(renderResponse.getNamespace());
			sm.append("selectAsset('");
			sm.append(asset.getAssetId());
			sm.append("', '");
			sm.append(asset.getAssetId());
			sm.append("', '");
			sm.append(asset.getTitle());
			sm.append("', '");
			sm.append(assetOrder);
			sm.append("');");

			String rowHREF = sm.toString();

			// Title

			row.addText(entry.getTitle(), rowHREF);

			// User name

			row.addText(entry.getUserName(), rowHREF);

			// Modified date

			row.addText(dateFormatDate.format(entry.getModifiedDate()), rowHREF);

			// Add result row

			resultRows.add(row);
		}
		%>

		<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />
	</c:otherwise>
</c:choose>

<br />