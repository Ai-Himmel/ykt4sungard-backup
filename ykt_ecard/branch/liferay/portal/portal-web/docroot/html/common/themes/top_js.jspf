<%
/**
 * Copyright (c) 2000-2008 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>


<script type="text/javascript">
	//<![CDATA[
		var themeDisplay = {
			getCompanyId: function() {
				return "<%= themeDisplay.getCompanyId() %>";
			},
			getDoAsUserIdEncoded: function() {
				return "<%= themeDisplay.getDoAsUserId() %>";
			},
			getPlid: function() {
				return "<%= themeDisplay.getPlid() %>";
			},
			getGroupId: function() {
				return "<%= themeDisplay.getPortletGroupId() %>";
			},
			getUserId: function() {
				return "<%= themeDisplay.getUserId() %>";
			},

			<c:if test="<%= layout != null %>">
				getLayoutId: function() {
					return "<%= layout.getLayoutId() %>";
				},
				isPrivateLayout: function() {
					return "<%= layout.isPrivateLayout() %>";
				},
				getParentLayoutId: function() {
					return "<%= layout.getParentLayoutId() %>";
				},
			</c:if>

			getLanguageId: function() {
				return "<%= LanguageUtil.getLanguageId(request) %>";
			},
			isFreeformLayout: function() {
				return <%= themeDisplay.isFreeformLayout() %>;
			},
			isSignedIn: function() {
				return <%= themeDisplay.isSignedIn() %>;
			},
			isStateExclusive: function() {
				return <%= themeDisplay.isStateExclusive() %>;
			},
			isStateMaximized: function() {
				return <%= themeDisplay.isStateMaximized() %>;
			},
			isStatePopUp: function() {
				return <%= themeDisplay.isStatePopUp() %>;
			},
			getPathContext: function() {
				return "<%= themeDisplay.getPathContext() %>";
			},
			getPathMain: function() {
				return "<%= themeDisplay.getPathMain() %>";
			},
			getPathThemeImages: function() {
				return "<%= themeDisplay.getPathThemeImages() %>";
			},
			getPathThemeRoot: function() {
				return "<%= themeDisplay.getPathThemeRoot() %>";
			},
			getURLHome: function() {
				return "<%= themeDisplay.getURLHome() %>";
			},
			getSessionId: function() {
				return "<%= session.getId() %>";
			}
		};

		var mainPath = themeDisplay.getPathMain();

		var propsUtil = {
			SESSION_ENABLE_PERSISTENT_COOKIES: function() {
				return <%= PropsValues.SESSION_ENABLE_PERSISTENT_COOKIES %>;
			}
		};
	//]]>
</script>

<c:choose>
	<c:when test='<%= ParamUtil.getBoolean(request, "js_fast_load", PropsValues.JAVASCRIPT_FAST_LOAD) %>'>

		<%--
		everything_packed.js includes all of the JavaScript files. It is
		autogenerated with the Ant build-javascript task.
		--%>

		<script src="<%= themeDisplay.getPathJavaScript() %>/everything_packed.js?bn=<%= ReleaseInfo.getBuildNumber() %>" type="text/javascript"></script>
	</c:when>
	<c:otherwise>

		<%
		String[] javaScriptFiles = PropsUtil.getArray(PropsUtil.JAVASCRIPT_FILES);

		for (int i = 0; i < javaScriptFiles.length; i++) {
		%>

			<script src="<%= themeDisplay.getPathJavaScript() %>/<%= javaScriptFiles[i] %>?bn=<%= ReleaseInfo.getBuildNumber() %>" type="text/javascript"></script>

		<%
		}
		%>

	</c:otherwise>
</c:choose>

<c:if test="<%= PropsValues.JAVASCRIPT_LOG_ENABLED %>">
	<script src="<%= themeDisplay.getPathJavaScript() %>/firebug/firebug.js" type="text/javascript"></script>
</c:if>

<c:if test="<%= themeDisplay.isIncludeServiceJs() %>">
	<script src="<%= themeDisplay.getPathJavaScript() %>/liferay/service_packed.js" type="text/javascript"></script>
</c:if>

<script type="text/javascript">
	//<![CDATA[

		<%@ include file="/html/portal/layout/view/portlet_js.jspf" %>

		<%
		String currentURL = PortalUtil.getCurrentURL(request);
		%>

		function addPortlet(plid, portletId, doAsUserId, returnPortlet) {
			var refreshPortletList = getRefreshPortletList();

			if (refreshPortletList["_" + portletId]) {
				self.location = "<%= themeDisplay.getPathMain() %>/portal/update_layout?p_l_id=" + plid + "&p_p_id=" + portletId + "&doAsUserId=" + doAsUserId + "&<%= Constants.CMD %>=<%= Constants.ADD %>&referer=<%= HttpUtil.encodeURL(currentURL) %>&refresh=1";
			}
			else {
				var loadingDiv = document.createElement("div");
				var container = document.getElementById("layout-column_column-1");

				if (container == null) {
					return;
				}

				loadingDiv.className = "loading-animation";

				var jContainer = jQuery(container);
				var firstPortlet = jContainer.find('.portlet-boundary:first');
				var hasStaticPortlet = (firstPortlet.length && firstPortlet[0].isStatic);

				if (!hasStaticPortlet) {
					jContainer.prepend(loadingDiv);
				}
				else {
					firstPortlet.after(loadingDiv);
				}

				var queryString = "<%= themeDisplay.getPathMain() %>/portal/update_layout?p_l_id=" + plid + "&p_p_id=" + portletId + "&p_p_col_id=column-1&p_p_col_pos=0&doAsUserId=" + doAsUserId + "&<%= Constants.CMD %>=<%= Constants.ADD %>&currentURL=<%= HttpUtil.encodeURL(currentURL) %>";

				return addPortletHTML(queryString, loadingDiv, returnPortlet);
			}
		}

		function showLayoutTemplates() {
			var message = Liferay.Popup(
				{
					width: 700,
					modal: true,
					title: "<%= UnicodeLanguageUtil.get(pageContext, "layout") %>"
				});

			url = "<%= themeDisplay.getPathMain() %>/layout_configuration/templates?p_l_id=<%= plid %>&doAsUserId=<%= themeDisplay.getDoAsUserId() %>&redirect=<%= HttpUtil.encodeURL(currentURL) %>";

			AjaxUtil.update(url, message, {onComplete: function(){Liferay.Popup.center()}});
		}

		jQuery(document).ready(
			function() {
				Liferay.Util.addInputType();
				Liferay.Util.addInputFocus();
			}
		);

		Liferay.Portlet.ready(
			function(portletId, jQueryObj) {
				Liferay.Util.addInputType(portletId, jQueryObj);

				new Liferay.Menu(
					{
						button: '.lfr-actions',
						context: jQueryObj[0],
						trigger: '.lfr-trigger'
					}
				);
			}
		);

		<c:if test="<%= !themeDisplay.isStatePopUp() %>">
			<c:if test="<%= MessagingUtil.isJabberEnabled() && themeDisplay.isSignedIn() %>">
				jQuery(document).ready(
					function() {
						Messaging.init("<%= request.getRemoteUser() %>");
					}
				);
			</c:if>

			<c:if test="<%= PropsValues.REVERSE_AJAX_ENABLED && themeDisplay.isSignedIn()%>">
				if (!Liferay.Browser.is_safari) {
					jQuery(document).last(
						function() {
							ReverseAjax.initialize();
						}
					);
				}
			</c:if>

			<%
			String scroll = ParamUtil.getString(request, "scroll");
			%>

			<c:if test="<%= Validator.isNotNull(scroll) %>">
				jQuery(document).last(
					function() {
						document.getElementById("<%= scroll %>").scrollIntoView();
					}
				);
			</c:if>
		</c:if>

		<c:if test="<%= (layoutTypePortlet != null) %>">

			<%
			List portletIds = layoutTypePortlet.getPortletIds();
			%>

			<c:choose>
				<c:when test="<%= portletIds.size() > 0 && !layoutTypePortlet.hasStateMax() %>">
					Liferay.Portlet.list = {<%
						for (int i = 0; i < portletIds.size(); i++) {
							out.print("\"" + portletIds.get(i) + "\":1");

							if (i < portletIds.size() - 1) {
								out.print(",");
							}
						}
					%>};
				</c:when>
				<c:otherwise>
					jQuery(document).ready(
						function() {
								Liferay.Portlet.processLast();
						}
					);
				</c:otherwise>
			</c:choose>
		</c:if>

		<c:if test="<%= (layout != null) && (LayoutPermissionUtil.contains(permissionChecker, layout, ActionKeys.UPDATE)) %>">
			jQuery(document).ready(
				function() {
					if (themeDisplay.isFreeformLayout()) {
						Liferay.Freeform({
							columnSelector: "div[@id^=layout-column_]",
							boxSelector: ".portlet-boundary"
						});
					}

					Liferay.Columns({
						columnSelector: "div.lfr-portlet-column",
						grid: '#layout-grid',
						handleSelector: ".portlet-title:first, .portlet-title-default:first",
						boxSelector: ".portlet-boundary" ,
						positionClass: "drop-position",
						areaClass: "drop-area",
						onComplete: function(d) {
							Liferay.Portlet.move(d);
						}
					});

					new Liferay.Navigation(
						{
							layoutIds: [<%= ListUtil.toString(layouts, "layoutId") %>],
							navBlock: '#navigation',
							hasPermission: <%= GroupPermissionUtil.contains(permissionChecker, portletGroupId.longValue(), ActionKeys.MANAGE_LAYOUTS) %>
						}
					);

					<%--/*jQuery(".journal-content-eip-text").leditable(
						"<%= themeDisplay.getPathMain() %>/journal_content/update_article_field",
						{
							cancel: Liferay.Language.get('cancel'),
							event: 'click',
							id: 'fieldName',
							name: 'fieldData',
							submit: Liferay.Language.get('ok'),
							type: 'text',
							width: '100%'
						}
					);

					jQuery(".journal-content-eip-text_box").leditable(
						"<%= themeDisplay.getPathMain() %>/journal_content/update_article_field",
						{
							cancel: Liferay.Language.get('cancel'),
							event: 'click',
							id: 'fieldName',
							name: 'fieldData',
							submit: Liferay.Language.get('ok'),
							type: 'textarea',
							width: '100%'
						}
					);

					jQuery(".journal-content-eip-text_area").leditable(
						"<%= themeDisplay.getPathMain() %>/journal_content/update_article_field",
						{
							cancel: Liferay.Language.get('cancel'),
							event: 'click',
							id: 'fieldName',
							name: 'fieldData',
							submit: Liferay.Language.get('ok'),
							type: 'fcktextarea',
							width: '100%'
						}
					);*/--%>
				}
			);
		</c:if>

		jQuery(document).ready(
			function() {
				new Liferay.Menu(
					{
						trigger: '.lfr-trigger',
						button: '.lfr-actions'
					}
				);

				Liferay.Dock.init();
				Liferay.Notice.prototype.setClosing();
			}
		);
	//]]>
</script>