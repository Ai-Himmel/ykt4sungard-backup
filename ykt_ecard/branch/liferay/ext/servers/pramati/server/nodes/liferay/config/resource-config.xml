<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE resource-service PUBLIC "-//Pramati Technologies //DTD Pramati Resource Service 4.1//EN" "http://www.pramati.com/dtd/pramati-resource-service_4_1.dtd">
<resource-service>
   <resources><!--
             This file is used to configure various resources that need to be set up for use by applications.
             Each type of resource has a tag to define its default resource,
             These default resources are used at the time of auto-mapping
             resolution by the DeployService ( all the tags are optional )
        -->
      <default-resources><!--
            <default-connection-factory name="CLOUDSCAPE_CF1"/>
            <default-datasource name="demo"/>
            <default-datasource-cluster name="DS_CLUSTER1"/>
            <default-mail-resource name="Mail1"/>
            <default-url-resource name="Web1"/>
            <default-jms-adapter name="default"/>
            --></default-resources><!--
            DataSource Definitions:
                The 'datasources' element encloses the definitions of the datasources that are configured.

        -->
      <datasources><!--
            The 'datasource' Element is used to configure a datasource with the specified properties. The
            datasource element has the following attributes:

                 name                       - represents the JNDI name with which the datasource is bound.
                 connection-factory         - JNDI name of the connection factory.
                 transaction-participation  - participation of the connection in the transaction. [ optional ]
                 transaction-isolation      - Isolation level for the connection [ optional ]
                                             ( ex: REPEATABLE_READ, READ_COMMITTED etc. these are the constants defined in the java.sql.Connection class )

                 'pool-properties'         - This element specifies the pool properties. It is  optional.
                                             max-pool-size                      - maximum size of the pool
                                             min-pool-size                      - minimum size of the pool
                                             initial-pool-size                  - initial size of the pool
                                             refresh-interval-seconds           - refresh interval for the pool.
                                             connection-request-timeout-seconds - connection request timeout seconds
                                             idle-timeout-seconds               - maximum idle time for connections in the pool.
                                             cache-size                         - prepared statement cache size for each connection.

                'connection-validation'   - This Element takes the properties required to
                                            validate the connections of the pool after every refresh interval.
                                            These properties are optional.
                                             sql   -  this is the query that is fired to validate a connection.
                                             class -  this will be used only if sql is not mentioned. The Attribute takes the
                                                      implementation class name which extends the com.pramati.util.pool.ObjectValidator interface.

                'connection-tracking  '   - This Element takes the properties required to track the connections of the pool.
                                            Tracking includes information like the status of each individual connection, operations
                                            performed on it etc.
                                            These properties are optional.
                                            enable   -  setting this to true will enable connection tracking.

            --><!--datasource name="demo" connection-factory="CLOUDSCAPE_CF1" description="DemoDS" transaction-participation="true" transaction-isolation="">
                <pool-properties min-pool-size="5" max-pool-size="20" initial-pool-size="1" refresh-interval-seconds="300" connection-request-timeout-seconds="10" idle-timeout-seconds="300" cache-size="50"/>
                <connection-validation sql="" class="TestClass"/>
	            <connection-tracking enable="false" />
            </datasource--><!--datasource name="jmsdb" connection-factory="JMS_CLOUDSCAPE_CF1" description="JMSDB" transaction-participation="false" transaction-isolation="">
                <pool-properties min-pool-size="5" max-pool-size="20" initial-pool-size="1" refresh-interval-seconds="300" connection-request-timeout-seconds="10" idle-timeout-seconds="300" cache-size="50"/>
                <connection-validation class="TestClass"/>
	            <connection-tracking enable="false" />
            </datasource--><!--
                These are the default values that are taken by the datasource if the corresponding value is not mentioned for the datasource. All the default values to be configured are optional.
            -->
         <datasource connection-factory="jdbc/LiferayPool" description="No Description" name="LiferayPool" transaction-participation="true">
            <pool-properties cache-size="" connection-request-timeout-seconds="10" idle-timeout-seconds="300" initial-pool-size="1" max-pool-size="20" min-pool-size="5" refresh-interval-seconds="300"/>
            <connection-initialization db-retrials="0" db-retry-interval-millis="0"/>
            <connection-validation class="" on-acquire="false" on-release="false" sql=""/>
            <connection-tracking enable="false"/>
         </datasource>
         <default-properties cache-size="20" connection-request-timeout-seconds="10" idle-timeout-seconds="300" initial-pool-size="1" max-pool-size="20" min-pool-size="5" refresh-interval-seconds="300"/>
      </datasources><!-- Connection Factory Properties --><!-- The 'connection-factories' Element encloses the definitions for all the connection
             factories. To define a connection factory add the 'connection-factory' Element with
             the appropriate properties
        -->
      <connection-factories><!--
                The connection factory has the following elements:

                 name               - represents the JNDI name with which the connection-factory is bound.
                 classname          - the name of the Driver/XADatasource implementation Class.
                 url                - url string.
                 authorized-by      - indicates whether the connections are authorized by the "Container" or
                                      "Application".
                 login-parameters   - takes the user, password and a property indicating whether the password
                                      is masked.
            --><!--connection-factory name="CLOUDSCAPE_CF1" description="CloudscapeCF" classname="COM.cloudscape.core.JDBCDriver" url="jdbc:cloudscape:$SAMPLES_DIR/sample_db" authorized-by="Container">
                <login-parameters user="" password="" mask-password="false"/>
            </connection-factory--><!--connection-factory name="JMS_CLOUDSCAPE_CF1" description="JMSCloudscapeCF" classname="COM.cloudscape.core.JDBCDriver" url="jdbc:cloudscape:$TEMPLATES_DIR/jmsdb" authorized-by="Container">
                <login-parameters user="" password="" mask-password="false"/>
            </connection-factory-->
         <connection-factory authorized-by="container" classname="org.hsqldb.jdbcDriver" classpath="" description="No Description" name="jdbc/LiferayPool" url="jdbc:hsqldb:lportal">
            <login-parameters mask-password="true" password="" user="sa"/>
            <properties/>
         </connection-factory>
      </connection-factories><!-- Clustered DataSource Properties --><!-- The 'datasource-clusters' Element encloses the definitions for all the datasource
             clusters. To define a datasource cluster add the 'datasource-cluster' Element with
             the appropriate properties

        -->
      <datasource-clusters><!--   The 'datasource-cluster' element is used to configure a datasource cluster.
                    It has the following attributes.

                 name               - represents the JNDI name with which the datasource cluster is bound.
                 balance-load       - whether the datasource cluster should balance the load
                 main-child-node    - the first request to the datasource cluster is served from this node if available [ optional ]
                 datasource-node    - a datasource that wants to be a part of this datasource cluster should add "datasource-node" element providing its name and weight(weightage. weight is optional)
               --><!--datasource-cluster name="DS_CLUSTER1" balance-load="true" main-child-node="jmsdb"  description="nodesc">
                <datasource-node name="jmsdb" weight="1"/>
                <datasource-node name="demo" weight="2"/>
            </datasource-cluster--></datasource-clusters><!-- Mail Resource Properties --><!--
            The 'mail-resources' Element encloses the definitions for all the mail resources.
        -->
      <mail-resources><!-- 'mail-resource' Element is used to configure a mail resource. It has the following attributes,

                  name             - represents the JNDI name with which the mail resource is bound.
                  host             - host name of the mail server
                  login-parameters - provide login parameters like mail-id, user , password and whether the password is masked
                  mail-id          - the id that will appear on the mail header as the sender of the mail
                  test             - specifies whether to test the mail resource on creation                  
            --><!--mail-resource name="PramatiMail" host="mail.pramati.com" description="No Description" test="false">
                <login-parameters mail-id="pramati@pramati.com" user="pramati" password="515411" mask-password="false" />
              </mail-resource-->
         <mail-resource description="No Description" host="localhost" name="mail/MailSession" test="false">
            <login-parameters mail-id="test@pramati.com" mask-password="true" password="" user=""/>
         </mail-resource>
      </mail-resources><!-- URL Resource Properties --><!--
            The 'url-resources' Element encloses the definitions for all the url resources. To define a url resource add the 'url-resource' Element with the appropriate properties
        -->
      <url-resources><!-- 'url-resource' Element is used to configure a url resource. It has the following attributes.
 
                      name             - represents the JNDI name with which the url resource is bound.
                      url              - url that has to be encapsulated as a resource
            --><!--url-resource name="URL1" description="nodesc" url="http://www.pramati.com"/--></url-resources><!-- JMS Adapter Properties -->
      <jms-adapters>
         <jms-adapter description="nodesc" interface-class="com.pramati.jms.client.JMSProviderImpl" name="default">
            <properties><!--

                    In case of non-embedded jms server i.e. where the jms service is not running in the same VM as
                    the EJBService  please use "com.pramati.naming.client.PramatiClientContextFactory" for
                    "java.naming.factory.initial"

                    -->
               <property name="java.naming.factory.initial" value="com.pramati.naming.PramatiLocalContextFactory"/><!-- IP and port of the VM where the JMS server is running
                    --><!-- In case of HA JMS provide the comma separated list of urls of HA JMS nodes
                       i.e. rmi://jms2:9191,rmi://jms1:9191
                    -->
               <property name="java.naming.provider.url" value="rmi://127.0.0.1:9191"/>
            </properties>
         </jms-adapter>
      </jms-adapters>
      <generic-resources/>
   </resources>
</resource-service>