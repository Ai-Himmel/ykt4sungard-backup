/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Sep 22 09:57:05 CST 2005 by MyEclipse Hibernate Tool.
 */
package com.kingstargroup.ecard.hibernate.infotype;

import java.io.Serializable;

/**
 * A class that represents a row in the INFO_TYPE table. 
 * You can customize the behavior of this class by editing the class, {@link InfoType()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractInfoType 
    extends com.kingstargroup.ecard.common.BasicPersistence
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.String infoType;

    /** The value of the simple infoName property. */
    private java.lang.String infoName;

    /**
     * Simple constructor of AbstractInfoType instances.
     */
    public AbstractInfoType()
    {
    }

    /**
     * Constructor of AbstractInfoType instances given a simple primary key.
     * @param infoType
     */
    public AbstractInfoType(java.lang.String infoType)
    {
        this.setInfoType(infoType);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.String
     */
    public java.lang.String getInfoType()
    {
        return infoType;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param infoType
     */
    public void setInfoType(java.lang.String infoType)
    {
        this.hashValue = 0;
        this.infoType = infoType;
    }

    /**
     * Return the value of the INFO_NAME column.
     * @return java.lang.String
     */
    public java.lang.String getInfoName()
    {
        return this.infoName;
    }

    /**
     * Set the value of the INFO_NAME column.
     * @param infoName
     */
    public void setInfoName(java.lang.String infoName)
    {
        this.infoName = infoName;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof InfoType))
            return false;
        InfoType that = (InfoType) rhs;
        if (this.getInfoType() == null || that.getInfoType() == null)
            return false;
        return (this.getInfoType().equals(that.getInfoType()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int infoTypeValue = this.getInfoType() == null ? 0 : this.getInfoType().hashCode();
            result = result * 37 + infoTypeValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
