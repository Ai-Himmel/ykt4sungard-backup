<?xml version='1.0' encoding='UTF-8' ?>

<!--Generated by XML Authority-->

<!--
    The action element contains the SQL used in a Statement.

    Used in: statement
-->
<!---->
<!--
    The jrun-ejb-jar element is the root element of the JRun EJB
    deployment descriptor. It contains structural information about
    all included enterprise beans ( additional information used by
    JRun, but not specified in the ejb-jar.xml file), and an optional
    ejb-containers configuration (to be done in the future).
-->
<!ELEMENT jrun-ejb-jar (description? , source? , enterprise-beans? , ejb-container?)>

<!ELEMENT action (#PCDATA)>

<!--
    The always-dirty element can be used to force synchronization with
    the data source at the ends of EJB business methods even when
    there has been no change to the entity bean's fields.

    Used in: entity
-->
<!ELEMENT always-dirty EMPTY>

<!--
    The client-id element provides client id for DurableSubscription
    setup and sign on.
-->
<!ELEMENT client-id (#PCDATA)>

<!--
    The cluster-home element denotes whether  the EJBHome should be clustered
    for this bean. If clustering is enabled in jrun.xml, this value is
    true by default. You can use this element to override this behavior on
    a bean-by-bean basis.

    Valid values: true | false

    Used in: session, entity
-->
<!ELEMENT cluster-home (#PCDATA)>

<!--
    The cluster-object element denotes whether  the EJBObject should be clustered
    for this bean. If clustering is enabled in jrun.xml, this value is
    true by default. You can use this element to override this behavior on
    a bean-by-bean basis.

    Valid values: true | false

    Used in: session, entity
-->
<!ELEMENT cluster-object (#PCDATA)>

<!--
    The commit-option element specifies the the commit option from
    Section 10.5.9 and 12.1.9 of the EJB 2.0 specification.

    Valid values: A | B | C

    Used in: entity
-->
<!ELEMENT commit-option (#PCDATA)>

<!--
    The cmr-statement element holds information specific to CMP operation, such
    as create and  load, but related to CMR field. 

    Used in: jdbc-mapping
-->
<!ELEMENT cmr-statement (name , statement+)>

<!ELEMENT create-table (#PCDATA)>

<!ELEMENT delete-table (#PCDATA)>

<!ELEMENT description (#PCDATA)>

<!--
    The ejb-name element gives the name of the bean, it must
    correspond to an ejb-name element in the ejb-jar.xml file.

    Used in: entity and session
-->
<!ELEMENT ejb-name (#PCDATA)>

<!--
    The enterprise-beans element contains additional information about
    the beans. Information, such as JNDI name, is specific to
    JRun and not described in ejb-jar.xml.

    Used in: jrun-ejb-jar
-->
<!ELEMENT enterprise-beans (session | entity | message-driven)+>

<!--
    The entity element holds information specific to JRun and not
    declared in ejb-jar.xml about an entity bean, such as resource
    mappings. The bean should already be declared in the ejb-jar.xml file
    with the same ejb-name.

    Used in: enterprise-beans
-->
<!ELEMENT entity (ejb-name , jndi-name , tx-domain-name? , ejb-ref* , ejb-local-ref* , resource-env-ref* , resource-ref* , cluster-home? , cluster-object? , commit-option? , always-dirty? , jdbc-mappings? , instance-pool? , cache-size? , interceptors?)>

<!--
    The ejb-local-ref element describes a mapping between the ejb-ref-name
   that the bean developer provides and its JNDI name.  The deployer provides
    the actual JNDI name.

    Used in: entity, message-driven, session
-->
<!ELEMENT ejb-local-ref (ejb-ref-name , jndi-name)>

<!--
    The ejb-ref element describes a mapping between the ejb-ref-name that
     the bean developer provides and its JNDI name. The deployer provides the
     actual JNDI name.

    Used in: entity, message-driven, session
-->
<!ELEMENT ejb-ref (ejb-ref-name , jndi-name)>

<!--
    The ejb-ref-name element gives the name of an EJB from the ejb-jar.xml file.
    The bean developer this information.

    Used in: ejb-ref, ejb-local-ref
-->
<!ELEMENT ejb-ref-name (#PCDATA)>

<!--
    The ejb-container element sets container specific properties used
    by containers during deployment

    Used in: session, entity, message-drive
-->
<!ELEMENT ejb-container (entity-default-store-type? , session-default-store-type? , file-store-directory? , cmp20-store-manager?)>

<!--
    The entity-default-store-type element defines the default
    store type used for entity persistence. Default is "jdbc"

    Used in: ejb-container
-->
<!ELEMENT entity-default-store-type (#PCDATA)>

<!--
    The session-default-store-type element defines the default
    store type used for stateful session persistence. Default is "file"

    Used in: ejb-container
-->
<!ELEMENT session-default-store-type (#PCDATA)>

<!--
    The file-store-directory element defines default directory
    for file persistence. Default is server-inf/temp

    Used in: ejb-container
-->
<!ELEMENT file-store-directory (#PCDATA)>

<!--
    The cache-size element defines default cache size
    for bean persistence. Default is 100

    Used in: ejb-container
-->
<!ELEMENT cache-size (#PCDATA)>

<!--
    The cmp20-store-manager element defines default store manager
    used to persistent cmp 2.0 beans.

    Used in: ejb-container
-->
<!ELEMENT cmp20-store-manager (#PCDATA)>

<!--
    The field element defines the field name.

    Used in: fields
-->
<!ELEMENT field (#PCDATA)>

<!--
    The fields element contains a list of field elements.

    Used in: statement
-->
<!ELEMENT fields (field*)>

<!--
    The jdbc-mapping element holds information specific to CMP operation, such
    as create, load, etc.

    Used in: jdbc-mappings
-->
<!ELEMENT jdbc-mapping (name , statement+ , cmr-statement*)>

<!--
    The jdbc-mappings element holds information specific to JRun and not declared
    in the ejb-jar.xml file about the CMP mappings for an entity bean.  jdbc-mappings are used
    to specify the SQL used to create, load, store, find and remove entity beans.

    Used in: entity
-->
<!ELEMENT jdbc-mappings (create-table? , delete-table? , jdbc-mapping*)>

<!--
    The jndi-name element gives the JNDI name where the bean or
    resource will be bound.

    Used in: entity, message-driven, resource-ref, resource-env-ref, session
-->
<!ELEMENT jndi-name (#PCDATA)>

<!--
    The message-driven element holds information specific to JRun and
    not declared in the ejb-jar.xml file about a session bean, such as
    resource mappings. The bean should already be declared in the
   ejb-jar.xml file with the same ejb-name.

    Used in: enterprise-beans
-->
<!ELEMENT message-driven (ejb-name , jndi-name , tx-domain-name? , ejb-ref* , ejb-local-ref* , resource-env-ref* , resource-ref* , message-driven-subscription? , message-driven-destination? , instance-pool? , server-session-pool? , interceptors?)>

<!--
    The message-driven-destination element provides the destination that the
    Message driven container uses.
-->
<!ELEMENT message-driven-destination (name , jndi-name)>

<!--
    The message-driven-subscription element provides the user ID that the message-driven
    container uses for durable subscription handling
-->
<!ELEMENT message-driven-subscription (client-id)>

<!--
    The name element defines the parameter name.

    Used in: param
-->
<!ELEMENT name (#PCDATA)>

<!--
    The param element contains a statement parameter name and type.

    Used in: params
-->
<!ELEMENT param (name , type)>

<!--
    The params element contains a list of statement param elements.

    Used in: statement
-->
<!ELEMENT params (param*)>

<!--
    The password element provides user credentials to be used
    with user element to identify and authenticate a specified resource.
-->
<!ELEMENT password (#PCDATA)>

<!--
    The res-ref-name element gives the name of a resource from EJB
    view. The bean developer provides this information.

    Used in: resource
-->
<!ELEMENT res-ref-name (#PCDATA)>

<!--
    The resource-ref element describes a mapping between the resource
    name that  the bean developer provides and its JNDI name. The deployer provides
    the actual  JNDI name.

    Used in: session, entity, message-driven
-->
<!ELEMENT resource-ref (res-ref-name , jndi-name , user? , password?)>

<!--
    The resource-env-ref element describes a mapping between the
    resource-env-name that the bean developer provides and its JNDI name. The deployer
    provides the actual JNDI name.

    Used in: session, entity, message-driven
-->
<!ELEMENT resource-env-ref (resource-env-ref-name , jndi-name , mdb-destination?)>

<!--
    The resource-env-ref-name element gives the name of a resource env
    from EJB view. The bean developer provides this information.

    Used in: resource-env-ref
-->
<!ELEMENT resource-env-ref-name (#PCDATA)>

<!--
    The session element holds information specific to JRun and not
    declared in the ejb-jar.xml file about a session bean, such resource
    mappings. The bean should already be declared in the ejb-jar.xml file
    with the same ejb-name.

    Used in: enterprise-beans
-->
<!ELEMENT session (ejb-name , jndi-name , tx-domain-name? , ejb-ref* , ejb-local-ref* , resource-env-ref* , resource-ref* , cluster-home? , cluster-object? , timeout? , instance-pool? , cache-size? , interceptors?)>

<!--
    The source element gives the JNDI name of the data source
    to be used to deploy this bean or execute this statement. If
    not provided, the JRun4 DefaultDataSource JNDI name will be
    used.

    Used in: jrun-ejb-jar, statement
-->
<!ELEMENT source (#PCDATA)>

<!--
    A jdbc-mapping element can contain multiple statements that are
    executed sequentially.

    Used in: jdbc-mapping
-->
<!ELEMENT statement (action , source? , params? , fields?)>

<!--
    The timeout element specifies the timeout value, in seconds,
    of a stateful session bean. The bean will be passivated if
    left idle for this duration.

    Used in: session
-->
<!ELEMENT timeout (#PCDATA)>

<!--
    The type element defines a statement parameter type.

    Used in: param
-->
<!ELEMENT type (#PCDATA)>

<!--
    The tx-domain-name element gives the transaction domain name in which
    the bean's transactions will take place.

    Used in: entity, message-driven, session
-->
<!ELEMENT tx-domain-name (#PCDATA)>

<!--
    The user element assigns a user identity to be used with a specified
    resource.
    -->
<!ELEMENT user (#PCDATA)>

<!--
   The mdb-destination element specifies a message-driven bean destination.
   -->
<!ELEMENT mdb-destination (#PCDATA)>

<!--
    The instance-pool element contains the maximum and minimum size parameters for
    StatelessSessionBean and MessageDrivenBean instance pools.
    -->
<!ELEMENT instance-pool (maximum-size , minimum-size)>

<!--
    The interceptors element contains a list of interceptor elements.
    -->
<!ELEMENT interceptors (interceptor*)>

<!--
    The fully qualified class name of a class that implements the
    jrun.ejb.Interceptor interface or extends the
    jrun.ejb.interceptors.AbstractInterceptor class.
    -->
<!ELEMENT interceptor (#PCDATA)>

<!--
    The maximum-size element specifies the maximum size for
     pools.
    -->
<!ELEMENT maximum-size (#PCDATA)>

<!--
    The minimum-size element specifies the minimum size for
    pools.
    -->
<!ELEMENT minimum-size (#PCDATA)>

<!--
 The server-session-pool element contains the maximum, minimum and overlap size parameters for
    JMS server session pools of the MessageDrivenBean containers.
   -->
<!ELEMENT server-session-pool (maximum-size , minimum-size , max-lap-size)>

<!--
    The max-lap-size element specifies the  maximum overlap size for
    server session pools in the MDB container, which can be reached at the peak of loaded.
    Poll size will be scaled back, when load goes down.
    -->
<!ELEMENT max-lap-size (#PCDATA)>

