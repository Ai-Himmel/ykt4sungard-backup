/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Mon Nov 13 14:23:51 CST 2006 by MyEclipse Hibernate Tool.
 */
package com.kingstargroup.form;

import java.io.Serializable;

/**
 * A class that represents a row in the MAP_SERVICE_EXCEPTION table. 
 * You can customize the behavior of this class by editing the class, {@link MapServiceException()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractMapServiceException 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The simple primary key value. */
    private MapServiceExceptionKey id;

    /** The value of the simple serverId property. */
    private java.lang.Integer serverId;

    /** The value of the simple serverName property. */
    private java.lang.String serverName;

    /** The value of the simple serviceType property. */
    private java.lang.String serviceType;

    /** The value of the simple status property. */
    private java.lang.String status;

    /** The value of the simple contactname property. */
    private java.lang.String contactname;

    /** The value of the simple errorcode property. */
    private java.lang.Short errorcode;

    /**
     * Simple constructor of AbstractMapServiceException instances.
     */
    public AbstractMapServiceException()
    {
    }

    /**
     * Constructor of AbstractMapServiceException instances given a composite primary key.
     * @param id
     */
    public AbstractMapServiceException(MapServiceExceptionKey id)
    {
        this.setId(id);
    }

    /**
     * Return the composite id instance that identifies this object.
     * @return MapServiceExceptionKey
     */
    public MapServiceExceptionKey getId()
    {
        return this.id;
    }

    /**
     * Set the composite id instance that identifies this object.
     * @param id
     */
    public void setId(MapServiceExceptionKey id)
    {
        this.hashValue = 0;
        this.id = id;
    }

    /**
     * Return the value of the SERVER_ID column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getServerId()
    {
        return this.serverId;
    }

    /**
     * Set the value of the SERVER_ID column.
     * @param serverId
     */
    public void setServerId(java.lang.Integer serverId)
    {
        this.serverId = serverId;
    }

    /**
     * Return the value of the SERVER_NAME column.
     * @return java.lang.String
     */
    public java.lang.String getServerName()
    {
        return this.serverName;
    }

    /**
     * Set the value of the SERVER_NAME column.
     * @param serverName
     */
    public void setServerName(java.lang.String serverName)
    {
        this.serverName = serverName;
    }

    /**
     * Return the value of the SERVICE_TYPE column.
     * @return java.lang.String
     */
    public java.lang.String getServiceType()
    {
        return this.serviceType;
    }

    /**
     * Set the value of the SERVICE_TYPE column.
     * @param serviceType
     */
    public void setServiceType(java.lang.String serviceType)
    {
        this.serviceType = serviceType;
    }

    /**
     * Return the value of the STATUS column.
     * @return java.lang.String
     */
    public java.lang.String getStatus()
    {
        return this.status;
    }

    /**
     * Set the value of the STATUS column.
     * @param status
     */
    public void setStatus(java.lang.String status)
    {
        this.status = status;
    }

    /**
     * Return the value of the CONTACTNAME column.
     * @return java.lang.String
     */
    public java.lang.String getContactname()
    {
        return this.contactname;
    }

    /**
     * Set the value of the CONTACTNAME column.
     * @param contactname
     */
    public void setContactname(java.lang.String contactname)
    {
        this.contactname = contactname;
    }

    /**
     * Return the value of the ERRORCODE column.
     * @return java.lang.Short
     */
    public java.lang.Short getErrorcode()
    {
        return this.errorcode;
    }

    /**
     * Set the value of the ERRORCODE column.
     * @param errorcode
     */
    public void setErrorcode(java.lang.Short errorcode)
    {
        this.errorcode = errorcode;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof MapServiceException))
            return false;
        MapServiceException that = (MapServiceException) rhs;
        if (this.getId() == null || that.getId() == null)
            return false;
        return (this.getId().equals(that.getId()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            if (this.getId() == null)
            {
                result = super.hashCode();
            }
            else
            {
                result = this.getId().hashCode();
            }
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
