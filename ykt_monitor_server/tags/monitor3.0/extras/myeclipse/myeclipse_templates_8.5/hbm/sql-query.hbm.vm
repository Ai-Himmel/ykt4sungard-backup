#foreach($queryKey in $cfg.namedSQLQueries.keySet())
#set ($queryDef = $cfg.namedSQLQueries.get($queryKey))
    <sql-query 
        name="$queryKey"
#if ($queryDef.flushMode)
        flush-mode="$queryDef.flushMode.toString().toLowerCase()"
#end
#if ($queryDef.isCacheable())
	    cacheable="$queryDef.isCacheable()"
#end
#if ($queryDef.cacheRegion)
	    cache-region="$queryDef.cacheRegion"
#end
#if ($queryDef.fetchSize)
        fetch-size="$queryDef.fetchSize"
#end
#if ($queryDef.timeout)
        timeout="$queryDef.timeout"
#end
    >
#foreach($tableName in $queryDef.querySpaces)
	    <synchronize table="$tableName" />
#end
#foreach($returnDef in $queryDef.queryReturns)
#set ($returnTag = $c2h.getNamedSQLReturnTag($returnDef))
	    <$returnTag
             alias="$returnDef.alias"
#if ($c2h.isNamedSQLReturnRoot($returnDef))
             class="$returnDef.returnEntityName"
#elseif($c2h.isNamedSQLReturnRole($returnDef))
             property="${returnDef.ownerAlias}.${returnDef.ownerProperty}"
#elseif($c2h.isNamedSQLReturnCollection($returnDef))
             role="${returnDef.ownerEntityName}.${returnDef.ownerProperty}"
#end
#if($returnDef.lockMode)
             lock-mode="$returnDef.lockMode.toString().toLowerCase()"
#end
	    />
#end
        <![CDATA[$queryDef.QueryString.trim()]]>
    </sql-query>
    
#end
