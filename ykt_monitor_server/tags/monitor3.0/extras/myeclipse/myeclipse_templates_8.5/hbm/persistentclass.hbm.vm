<$c2h.getTag($clazz) 
    name="$c2h.getClassName($clazz)"
#if(!$c2h.getClassName($clazz).equals($clazz.EntityName))
    entity-name="$clazz.EntityName"
#end
#if($clazz.getSuperclass())
    extends="$clazz.getSuperclass().className"
#end
#if ($c2h.needsTable($clazz))
    table="$clazz.table.quotedName"
#end
#if ($clazz.table.schema)
    schema="$clazz.table.quotedSchema"
#end
#if ($clazz.table.catalog)
    catalog="$clazz.table.catalog"
#end
#if (! $clazz.mutable)
    mutable="false"
#end
#if ($clazz.useDynamicUpdate())
    dynamic-update="true"
#end
#if ($clazz.useDynamicInsert())
    dynamic-insert="true"
#end
#if ($clazz.hasSelectBeforeUpdate())
    select-before-update="true"
#end
#if ($c2h.needsDiscriminator($clazz))
    discriminator-value="$clazz.discriminatorValue"
#end
#if ($clazz.isExplicitPolymorphism())
    polymorphism="explicit"
#end
#if ($clazz.isLazy() && !$c2h.getClassName($clazz).equals($c2h.getProxyInterfaceName($clazz)))
    proxy="$c2h.getProxyInterfaceName($clazz)"
#elseif (!$clazz.isLazy())
    lazy="false"
#end
#if ($clazz.isAbstract())
    abstract="true"
#end
#if ($c2h.isClassLevelOptimisticLockMode($clazz))
    optimistic-lock="$c2h.getClassLevelOptimisticLockMode($clazz)"
#end
#if ($clazz.batchSize > 1)
    batch-size="$clazz.batchSize"
#end
#if ($clazz.where)
    where="$clazz.where"
#end
#if ($clazz.table.subselect)
    subselect="$clazz.table.subselect"
#end
#if ($clazz.hasCustomEntityPersister($clazz))
    persister="$clazz.getEntityPersisterClass().name"
#end
#if ($clazz.table.rowId)
    rowid="$clazz.table.rowId"
#end
>
#set($metaattributable = $clazz)
#parse("hbm/meta.hbm.vm")
#if ($clazz.table.comment && $clazz.table.comment.length() > 0)
	<comment>${clazz.table.comment}</comment>
#end
#if (!$c2h.isSubclass($clazz))
	#if ($clazz.hasIdentifierProperty())
		#set ($property = $clazz.getIdentifierProperty())
		#parse ("hbm/id.hbm.vm")
	#elseif ($clazz.hasEmbeddedIdentifier())
		#set ($embeddedid = $class.key)
		#parse ("hbm/id.hbm.vm")		
	#end	
#elseif ($c2h.isJoinedSubclass($clazz))
	<key>	
		#foreach ($column in $clazz.key.columnIterator)
			#parse ("hbm/column.hbm.vm")
		#end	
	</key>
#end
#if ($pojo.hasVersionProperty())
	#set ($property = $clazz.getVersion())
	#parse ("hbm/${c2h.getTag($property)}.hbm.vm")
#end
#foreach ($property in $clazz.getUnjoinedPropertyIterator())
	#if (!($c2h.getTag($property) == "version" || $c2h.getTag($property) == "timestamp"))
		#parse ("hbm/${c2h.getTag($property)}.hbm.vm")
	#end
#end

</${c2h.getTag($clazz)}>