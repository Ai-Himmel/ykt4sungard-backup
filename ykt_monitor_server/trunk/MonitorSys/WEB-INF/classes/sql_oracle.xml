<?xml version="1.0" encoding="UTF-8"?>
<xml-body>
	<!-- BsheetverAnalysisThread 黑卡消费 -->

	<!-- 黑卡继续消费 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.BsheetverAnalysisThread.Analyze1
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			posdtl.status='7' and posdtl.transdate||posdtl.transtime>:startTime and
			not posdtl.transdate||posdtl.transtime>:endTime
		</sql-statement>
	</sql>
	<!-- 白卡不能消费 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.BsheetverAnalysisThread.Analyze2
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where not
			posdtl.status='7' and posdtl.errcode=390000 and
			posdtl.transdate||posdtl.transtime>:startTime and not
			posdtl.transdate||posdtl.transtime>:endTime
		</sql-statement>
	</sql>
	<!-- 取得客户名称 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.BsheetverAnalysisThread.getCutName
		</sql-name>
		<sql-statement>
			select a.custname as cutName from YKT_CUR.T_CUSTOMER
			a,YKT_CUR.T_CARD b where a.custid=b.custid and
			b.cardno=:cardno
		</sql-statement>
	</sql>
	<!-- 黑卡标记消费 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.BsheetverAnalysisThread.getCardId
		</sql-name>
		<sql-statement>
			select b.cardno as cardId from YKT_CUR.t_cardver b where
			b.CARDVERTYPE=:vertype and b.ADDDELFLAG=:flag and b.cardno=:cardId and not
			concat('20',b.volume)>:txTime
		</sql-statement>
	</sql>

	<!-- BsheetverErrorAnalysisThread 黑名单版本号错误 -->
	<!-- 黑名单版本号错误 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.BsheetverErrorAnalysisThread.BsverError1
		</sql-name>
		<sql-statement>
			select {a.*} from YKT_CUR.T_DEVICE a where (not
			a.CARDVERNO>:blackSheet) and a.status=1 and
			(a.devtypecode='0226' or a.devtypecode='0201' or a.devtypecode='0232')
			and a.CARDVERNO is not null and not a.CARDVERNO='000000000000'
			order by a.CARDVERNO
		</sql-statement>
	</sql>
	<!-- 门禁的黑名单版本错误 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.BsheetverErrorAnalysisThread.getMJBsverError
		</sql-name>
		<sql-statement>
			select {dev.*} from YKT_CUR.T_DEVICE dev where
			dev.deviceid in(select distinct d.deviceid from
			ykt_cur.t_doordevcardlist c,YKT_CUR.t_cardver
			a,YKT_CUR.T_DEVICE d where c.cardno=a.cardno and
			c.deviceid=d.deviceid and ((c.DOWNSTATUS='1' and a.ADDDELFLAG=0) or
			( c.DOWNSTATUS='0')) and not a.cardverno>:blackSheet and
			a.cardverno>d.cardverno and d.status=1 and
			d.devtypecode='0121' and not d.CARDVERNO>:blackSheet and not
			d.CARDVERNO='000000000000') order by dev.CARDVERNO
		</sql-statement>
	</sql>
	<!-- 上一次黑名单版本有问题 -->
	<sql>
        <sql-name>
            com.kingstargroup.action.bgAnalysis.BsheetverErrorAnalysisThread.PreBsverErrorResult
        </sql-name>
        <sql-statement>
	        select {a.*} from ykt_mon.map_device_table a where
           a.analysistime=:analysisTime and a.ERROR_REASON=11 
        </sql-statement>
    </sql>

	<!-- DeviceStatusAnalysisThread 设备状态监控 -->

	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.DeviceStatusAnalysisThread.AbDeviceResult
		</sql-name>
		<sql-statement>
			select {dev.*} from YKT_CUR.T_DEVICE
			dev,YKT_CUR.T_DEVMONITOR a where
			a.DEVICEID=dev.DEVICEID and dev.status=1 
		</sql-statement>
	</sql>
	<!-- 上一次脱机设备 -->
	<sql>
        <sql-name>
            com.kingstargroup.action.bgAnalysis.DeviceStatusAnalysisThread.PreDeviceResult
        </sql-name>
        <sql-statement>
            select {a.*} from ykt_mon.map_device_table a where
           a.analysistime=:analysisTime
        </sql-statement>
    </sql>
	

	<!-- ExceptSerilAnalysisThread 异常流水检查线程类 -->

	<!-- 流水号突变 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ExceptSerilAnalysisThread.SerialExcept
		</sql-name>
		<sql-statement>
			select {t.*} from (select DEVPHYID as
			deviceId,sum(DEVSEQNO) over (PARTITION BY DEVPHYID order
			by TRANSDATE,TRANSTIME rows between 1 preceding and 0
			following)- DEVSEQNO as formerNo,DEVSEQNO as nowNo,
			sum(DEVSEQNO) over (PARTITION BY DEVPHYID order by
			TRANSDATE,TRANSTIME rows between 0 preceding and 1 following)-
			DEVSEQNO as latterNo, TRANSDATE as txDate,TRANSTIME as txTime
			from YKT_CUR.T_POSDTL where (transdate||transtime)>=:startTime
			and not (transdate||transtime)>:endTime and not DEVSEQNO>999999) t
			where ((nowNo-formerNo>50 and not latterNo-nowNo>=-50) or
			(not nowNo-formerNo>=-50 and latterNo-nowNo>50))
		</sql-statement>
	</sql>

	<!-- 取得流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ExceptSerilAnalysisThread.getcertSerial
		</sql-name>
		<sql-statement>
			select {a.*} from ykt_cur.T_POSDTL a where
			a.DEVPHYID=:deviceId and a.DEVSEQNO=:serialNo and
			a.transdate||a.transtime>=:startTime and not
			a.transdate||a.transtime>=:endTime
		</sql-statement>
	</sql>
	<!-- 取得客户名 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ExceptSerilAnalysisThread.getCutName
		</sql-name>
		<sql-statement>
			select a.custname as cutName from YKT_CUR.T_CUSTOMER
			a,YKT_CUR.T_CARD b where a.custid=b.custid and
			b.cardno=:cardno
		</sql-statement>
	</sql>

	<!-- 时间突变 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ExceptSerilAnalysisThread.serialTimeerror
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			(not posdtl.TRANSDATE>'20050101' or
			substr(posdtl.TRANSDATE,5,2)>='13' or
			substr(posdtl.TRANSDATE,7,2)>'31') and
			(posdtl.transdate||posdtl.transtime)>=:startTime and not
			(posdtl.transdate||posdtl.transtime)>=:endTime
		</sql-statement>
	</sql>

	<!-- 流水出入卡金额突变 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ExceptSerilAnalysisThread.moneyinouterror
		</sql-name>
		<sql-statement>
			select {a.*} from YKT_CUR.T_POSDTL a,
			YKT_CUR.T_POSDTL b where a.CARDCNT=b.CARDCNT-1 and
			a.CARDNO=b.CARDNO and a.transdate||a.transtime>:startTime and not
			a.transdate||a.transtime>:endTime and b.transdate||b.transtime>:startTime and
			not b.transdate||b.transtime>:endTime and (a.TRANSCODE=3160 or
			a.TRANSCODE=3140) and a.errcode=0 and (b.TRANSCODE=3160 or
			b.TRANSCODE=3140) and b.errcode=0 and not
			a.CARDAFTBAL=b.CARDBEFBAL order by a.CARDNO,a.CARDCNT
		</sql-statement>
	</sql>
	<!-- 设备不存在 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ExceptSerilAnalysisThread.devicenotexist
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			posdtl.transdate||posdtl.transtime>:startTime and not
			posdtl.transdate||posdtl.transtime>:endTime and posdtl.errcode=100172
		</sql-statement>
	</sql>

	<!-- 流水重复 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ExceptSerilAnalysisThread.dupserial
		</sql-name>
		<sql-statement>
			select new
			com.kingstargroup.form.DupliSerialResult(a.id.devseqno,a.id.devphyid,a.cardno)
			from TPosdtl a where a.id.transdate||a.transtime>=:startTime and not
			a.id.transdate||a.transtime>=:endTime group by
			a.id.devphyid,a.cardno,a.id.devseqno having
			count(a.id.devseqno)>1
		</sql-statement>
	</sql>
	<!-- 取得特定流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ExceptSerilAnalysisThread.getspecialSerial
		</sql-name>
		<sql-statement>
			select {a.*} from ykt_cur.T_POSDTL a where
			a.devphyid=:deviceId and a.DEVSEQNO=:serialNo and
			a.cardno=:cardNo and a.transdate||a.transtime>=:startTime and not
			a.transdate||a.transtime>=:endTime
		</sql-statement>
	</sql>


	<!-- LargeExceptAnalysisThread 大额不正常流水 -->
	<!--  -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.LargeExceptAnalysisThread.bigAmountSerial
		</sql-name>
		<sql-statement>
			select new com.kingstargroup.form.RcvdtlCardResult(a.cardno,a.id.transdate,sum(a.amount))
			from TPosdtl a where a.transcode = 3160 and
			a.id.transdate||a.transtime>=:startTime and not a.id.transdate||a.transtime>=:endTime
			group by a.cardno,a.id.transdate having
			sum(a.amount)>=:limit
		</sql-statement>
	</sql>
	<!-- 取得流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.LargeExceptAnalysisThread.getSerial
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			posdtl.TRANSCODE=3160 and posdtl.TRANSMARK=153 and
			posdtl.cardno=:cardNo and posdtl.TRANSDATE=:txDate
		</sql-statement>
	</sql>

	<!-- 取得客户名 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.LargeExceptAnalysisThread.getCutName
		</sql-name>
		<sql-statement>
			select a.custname as cutName from YKT_CUR.T_CUSTOMER
			a,YKT_CUR.T_CARD b where a.custid=b.custid and
			b.cardno=:cardno
		</sql-statement>
	</sql>
	<!-- 单笔大额消费 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.LargeExceptAnalysisThread.bigsingleAmountSerial
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			posdtl.TRANSCODE=3160 and posdtl.transdate||posdtl.transtime>=:startTime
			and not posdtl.transdate||posdtl.transtime>=:endTime and
			posdtl.amount>:singleLimit
		</sql-statement>
	</sql>

	<!-- MidDragExcptAnalysisThread 中途拔卡 -->
	<!-- 中途拔卡流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.MidDragExcptAnalysisThread.getMiddragexcpt
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			posdtl.errcode=390002 and posdtl.transdate||posdtl.transtime>=:startTime
			and not posdtl.transdate||posdtl.transtime>:endTime
		</sql-statement>
	</sql>

	<!-- 取得客户名 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.MidDragExcptAnalysisThread.getCutName
		</sql-name>
		<sql-statement>
			select a.custname as cutName from YKT_CUR.T_CUSTOMER
			a,YKT_CUR.T_CARD b where a.custid=b.custid and
			b.cardno=:cardno
		</sql-statement>
	</sql>

	<!-- OtherExceptAnalysisThread 其他流水异常 -->
	<!-- 其他异常 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.OtherExceptAnalysisThread.getotherexcept
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			posdtl.TRANSMARK=255 and posdtl.transdate||posdtl.transtime>=:startTime and
			not posdtl.transdate||posdtl.transtime>:endTime
		</sql-statement>
	</sql>

	<!-- 取得客户名 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.OtherExceptAnalysisThread.getCutName
		</sql-name>
		<sql-statement>
			select a.custname as cutName from YKT_CUR.T_CUSTOMER
			a,YKT_CUR.T_CARD b where a.custid=b.custid and
			b.cardno=:cardno
		</sql-statement>
	</sql>

	<!-- ReverseSerialAnalysisThread 冲正流水 -->
	<!-- 冲正流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ReverseSerialAnalysisThread.getReverseSerial
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			not posdtl.amount>=0 and posdtl.TRANSMARK=254 and
			posdtl.transdate||posdtl.transtime>=:startTime and not
			posdtl.transdate||posdtl.transtime>:endTime
		</sql-statement>
	</sql>

	<!-- 取得客户名 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ReverseSerialAnalysisThread.getCutName
		</sql-name>
		<sql-statement>
			select a.custname as cutName from YKT_CUR.T_CUSTOMER
			a,YKT_CUR.T_CARD b where a.custid=b.custid and
			b.cardno=:cardno
		</sql-statement>
	</sql>

	<!-- SerialLostAnalysisThread 流水缺失 -->
	<!-- 两次分析中间缺的流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostAnalysisThread.getIntervalLostSerial
		</sql-name>
		<sql-statement>
			select t.devphyid as {serialost.deviceId}, v.lastno as
			{serialost.lastNo},t.firstno as {serialost.firstNo} from
			(select devphyid,min(DEVSEQNO) as firstno from
			YKT_CUR.T_POSDTL n where transdate||transtime>=:time1 and not
			transdate||transtime>:time2 group by devphyid) t, (select
			a.devphyid,DEVSEQNO as lastno from YKT_CUR.T_POSDTL a
			join (select devphyid,max(transdate||transtime) as col_timestamp
			from YKT_CUR.T_POSDTL c where not c.transdate||c.transtime>:time3
			and c.transdate||c.transtime>=:time4 group by devphyid) b on
			a.devphyid=b.devphyid and a.transdate||a.transtime=b.col_timestamp)
			v where t.devphyid=v.devphyid and t.firstno-v.lastno>1 and
			not t.firstno-v.lastno>50
		</sql-statement>
	</sql>
	<!-- 查找可能丢失的流水 确认是否确实丢失 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostAnalysisThread.checkSerial
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			posdtl.DEVSEQNO=:serialNo and posdtl.devphyid=:deviceId
			and posdtl.transdate||posdtl.transtime>=:startTime and not
			posdtl.transdate||posdtl.transtime>:endTime order by posdtl.TRANSDATE
			desc,posdtl.TRANSTIME desc
		</sql-statement>
	</sql>
	<!-- 查找丢失流水最近的流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostAnalysisThread.getnextSerail
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			posdtl.DEVSEQNO=:F_serialNo and posdtl.devphyid=:deviceId
			and posdtl.transdate||posdtl.transtime>=:startTime and not
			posdtl.transdate||posdtl.transtime>:endTime order by posdtl.TRANSDATE
			desc,posdtl.TRANSTIME desc
		</sql-statement>
	</sql>

	<!-- 分析时间内缺的流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostAnalysisThread.getinLostSerial1
		</sql-name>
		<sql-statement>
			Select a.devphyid as {serialost.deviceId},
			sum(cast(a.DEVSEQNO as float)) as {serialost.truth},
			(((max(cast(a.DEVSEQNO as float))+min(cast(a.DEVSEQNO as
			float)))*(max(cast(a.DEVSEQNO as
			float))-min(cast(a.DEVSEQNO as float))+1))/2) as
			{serialost.logic}, count(a.DEVSEQNO) as
			{serialost.countserial},
			(max(a.DEVSEQNO)-min(a.DEVSEQNO)+1) as
			{serialost.logicserial},
			((max(a.DEVSEQNO)-min(a.DEVSEQNO)+1)-count(a.DEVSEQNO))
			as {serialost.diff} from YKT_CUR.T_POSDTL a,
			YKT_CUR.T_DEVICE b where a.transdate||a.transtime>=:startTime 
			and b.DEVPHYTYPE='1000'
			and not a.transdate||a.transtime>:endTime and a.devphyid=b.devphyid 
			and b.status = 1 group by a.devphyid 
			having (not sum(cast(a.DEVSEQNO as float))=(((max(cast(a.DEVSEQNO as
			float))+min(cast(a.DEVSEQNO as
			float)))*(max(cast(a.DEVSEQNO as
			float))-min(cast(a.DEVSEQNO as float))+1))/2)) and (not
			max(a.DEVSEQNO)>=65535) and
			((max(a.DEVSEQNO)-min(a.DEVSEQNO)+1)-count(a.DEVSEQNO))>0
			order by {serialost.diff}
		</sql-statement>
	</sql>
	<!-- 分析时间内缺的流水,无流水限制大小 -->
	 <sql>
        <sql-name>
            com.kingstargroup.action.bgAnalysis.SerialLostAnalysisThread.getinLostSerial2
        </sql-name>
        <sql-statement>
            Select a.devphyid as {serialost.deviceId},
            sum(cast(a.DEVSEQNO as float)) as {serialost.truth},
            (((max(cast(a.DEVSEQNO as float))+min(cast(a.DEVSEQNO as
            float)))*(max(cast(a.DEVSEQNO as
            float))-min(cast(a.DEVSEQNO as float))+1))/2) as
            {serialost.logic}, count(a.DEVSEQNO) as
            {serialost.countserial},
            (max(a.DEVSEQNO)-min(a.DEVSEQNO)+1) as
            {serialost.logicserial},
            ((max(a.DEVSEQNO)-min(a.DEVSEQNO)+1)-count(a.DEVSEQNO))
            as {serialost.diff} from YKT_CUR.T_POSDTL a,
            YKT_CUR.T_DEVICE b where a.transdate||a.transtime>=:startTime 
            and not b.DEVPHYTYPE='1000' and
            not a.transdate||a.transtime>:endTime and a.devphyid=b.devphyid and
            b.status = 1 group by a.devphyid having (not
            sum(cast(a.DEVSEQNO as float))=(((max(cast(a.DEVSEQNO as
            float))+min(cast(a.DEVSEQNO as
            float)))*(max(cast(a.DEVSEQNO as
            float))-min(cast(a.DEVSEQNO as float))+1))/2))  and
            ((max(a.DEVSEQNO)-min(a.DEVSEQNO)+1)-count(a.DEVSEQNO))>0
            and not 
            ((max(a.DEVSEQNO)-min(a.DEVSEQNO)+1)-count(a.DEVSEQNO))>50
            order by {serialost.diff}
        </sql-statement>
    </sql>
	<!-- 获得特定设备的段时间内所有流水号 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostAnalysisThread.getAllSerialNo
		</sql-name>
		<sql-statement>
			select a.DEVSEQNO as serialNo from YKT_CUR.T_POSDTL a
			where a.transdate||a.transtime>=:startTime and not
			a.transdate||a.transtime>:endTime and a.devphyid=:deviceId order by
			a.DEVSEQNO desc
		</sql-statement>
	</sql>

	<!-- 获得25535设备的设备id -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostAnalysisThread.getSpecialDevice
		</sql-name>
		<sql-statement>
			Select a.devphyid as deviceId from YKT_CUR.T_POSDTL a
			where a.transdate||a.transtime>=:startTime and not
			a.transdate||a.transtime>:endTime group by a.devphyid having
			max(a.DEVSEQNO)=65535
		</sql-statement>
	</sql>

	<!-- 获得分界时间点 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostAnalysisThread.gettranstimestamp
		</sql-name>
		<sql-statement>
			select a.transdate||a.transtime as dateTime from YKT_CUR.T_POSDTL a
			where a.transdate||a.transtime>=:startTime and not
			a.transdate||a.transtime>:endTime and a.devphyid=:deviceId and
			a.DEVSEQNO=65535
		</sql-statement>
	</sql>

	<!-- SerialLostCkAnalysisThread 流水缺失check -->
	<!-- 缺失流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostCkAnalysisThread.getCheckLostSerial
		</sql-name>
		<sql-statement>
			Select a.devphyid as {serialost.deviceId},
			sum(cast(a.DEVSEQNO as float)) as {serialost.truth},
			(((max(cast(a.DEVSEQNO as float))+min(cast(a.DEVSEQNO as
			float)))*(max(cast(a.DEVSEQNO as
			float))-min(cast(a.DEVSEQNO as float))+1))/2) as
			{serialost.logic}, count(a.DEVSEQNO) as
			{serialost.countserial},
			(max(a.DEVSEQNO)-min(a.DEVSEQNO)+1) as
			{serialost.logicserial},
			((max(a.DEVSEQNO)-min(a.DEVSEQNO)+1)-count(a.DEVSEQNO))
			as {serialost.diff} from YKT_CUR.T_POSDTL a,
			YKT_CUR.T_DEVICE b where
			concat(a.TRANSDATE,a.TRANSTIME)>=:startTime and not
			concat(a.TRANSDATE,a.TRANSTIME)>:endTime and
			a.TRANSDATE>=:startDate and not a.TRANSDATE>:endDate and
			a.devphyid=b.dev999_id and not b.state_id = 5 group by
			a.devphyid having (not sum(cast(a.DEVSEQNO as
			float))=(((max(cast(a.DEVSEQNO as
			float))+min(cast(a.DEVSEQNO as
			float)))*(max(cast(a.DEVSEQNO as
			float))-min(cast(a.DEVSEQNO as float))+1))/2)) and (not
			max(a.DEVSEQNO)>=65535) and
			((max(a.DEVSEQNO)-min(a.DEVSEQNO)+1)-count(a.DEVSEQNO))>0
			order by {serialost.diff}
		</sql-statement>
	</sql>
	<!-- 取得设备流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostCkAnalysisThread.getdeviceSerial
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			posdtl.DEVSEQNO=:serialNo and posdtl.devphyid=:deviceId
			and concat(posdtl.TRANSDATE,posdtl.TRANSTIME)>=:startTime and
			not concat(posdtl.TRANSDATE,posdtl.TRANSTIME)>:endTime and
			posdtl.TRANSDATE>=:startDate and not posdtl.TRANSDATE>:endDate
			order by posdtl.TRANSDATE desc,posdtl.TRANSTIME desc
		</sql-statement>
	</sql>

	<!-- 确认流水是否丢失 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostCkAnalysisThread.checklostornot
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			posdtl.DEVSEQNO=:F_serialNo and posdtl.devphyid=:deviceId
			and posdtl.TRANSDATE||posdtl.TRANSTIME>=:startTime and
			not posdtl.TRANSDATE||posdtl.TRANSTIME>:endTime and
			posdtl.TRANSDATE>=:startDate and not posdtl.TRANSDATE>:endDate
			order by posdtl.TRANSDATE desc,posdtl.TRANSTIME desc
		</sql-statement>
	</sql>

	<!-- 取得特定时间段流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostCkAnalysisThread.getcerttimeserial
		</sql-name>
		<sql-statement>
			select a.DEVSEQNO as serialNo from YKT_CUR.T_POSDTL a
			where a.TRANSDATE||a.TRANSTIME>=:startTime and not
			a.TRANSDATE||a.TRANSTIME>:endTime and
			a.TRANSDATE>=:startDate and not a.TRANSDATE>:endDate and
			a.devphyid=:deviceId order by a.DEVSEQNO desc
		</sql-statement>
	</sql>

	<!-- 取得特定设备id -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostCkAnalysisThread.getspedeviceid
		</sql-name>
		<sql-statement>
			Select distinct a.devphyid as deviceId from
			YKT_CUR.T_POSDTL a where
			concat(a.TRANSDATE,a.TRANSTIME)>=:startTime and not
			concat(a.TRANSDATE,a.TRANSTIME)>:endTime and
			a.TRANSDATE>=:startDate and not a.TRANSDATE>:endDate and
			a.DEVSEQNO=65535
		</sql-statement>
	</sql>

	<!-- 取得特定设备的流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostCkAnalysisThread.getspedeviceidserial
		</sql-name>
		<sql-statement>
			select concat(a.TRANSDATE,a.TRANSTIME) as dateTime from
			YKT_CUR.T_POSDTL a where
			concat(a.TRANSDATE,a.TRANSTIME)>=:startTime and not
			concat(a.TRANSDATE,a.TRANSTIME)>:endTime and
			a.TRANSDATE>=:startDate and not a.TRANSDATE>:endDate and
			a.devphyid=:deviceId and a.DEVSEQNO=65535
		</sql-statement>
	</sql>

	<!-- 取得特定设备的流水号 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SerialLostCkAnalysisThread.getspedeviceidserialno
		</sql-name>
		<sql-statement>
			select a.DEVSEQNO as serialNo from YKT_CUR.T_POSDTL a
			where concat(a.TRANSDATE,a.TRANSTIME)>=:startTime and not
			concat(a.TRANSDATE,a.TRANSTIME)>:endTime and
			a.TRANSDATE>=:startDate and not a.TRANSDATE>:endDate and
			a.devphyid=:deviceId order by a.DEVSEQNO desc
		</sql-statement>
	</sql>

	<!-- SettimeErrorAnalysisThread 设备时钟 -->
	<!-- 取得特定设备的流水号 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SettimeErrorAnalysisThread.getdevmonitor
		</sql-name>
		<sql-statement>
			select {a.*} from ykt_cur.t_devmonitor a where not
			a.devtime='' and a.beatstatus = 0
		</sql-statement>
	</sql>

	<!-- 取得特定设备的流水号 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SettimeErrorAnalysisThread.getdevice
		</sql-name>
		<sql-statement>
			select {a.*} from YKT_CUR.T_DEVICE a where
			a.deviceid=:deviceId and a.status=1 and not
			a.DEVPHYID = 'FFFFFFFF' and not a.DEVPHYID = '' and not
			a.FDEVICEID = 1
		</sql-statement>
	</sql>

	<!-- ShortTimeMultiConsumptionAnalysisThread 短期多笔消费 -->
	<!-- 取得特定的卡号 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ShortTimeMultiConsumptionAnalysisThread.getstCardno
		</sql-name>
		<sql-statement>
			select a.cardno as cardNo from ykt_cur.T_POSDTL a where
			(a.TRANSDATE=:txDate or a.TRANSDATE=:txDate1) and
			a.TRANSTIME>:txTime and not a.TRANSTIME>:txTime1 and
			a.TRANSCODE=3160 and a.AMOUNT>0 group by a.cardno having
			count(a.DEVSEQNO)>:countLimit
		</sql-statement>
	</sql>

	<!-- 取得特定卡号的流水号 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ShortTimeMultiConsumptionAnalysisThread.getstCardserial
		</sql-name>
		<sql-statement>
			select {posdtl.*} from ykt_cur.T_POSDTL posdtl where
			(posdtl.TRANSDATE=:txDate or posdtl.TRANSDATE=:txDate1) and
			posdtl.TRANSTIME>:txTime and not posdtl.TRANSTIME>:txTime1 and
			posdtl.TRANSCODE=3160 and posdtl.AMOUNT>0 and
			posdtl.cardno=:cardNo
		</sql-statement>
	</sql>

	<!-- 取得客户名称 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.ShortTimeMultiConsumptionAnalysisThread.getCutName
		</sql-name>
		<sql-statement>
			select a.custname as cutName from YKT_CUR.T_CUSTOMER
			a,YKT_CUR.T_CARD b where a.custid=b.custid and
			b.cardno=:cardno
		</sql-statement>
	</sql>

	<!-- SupressExceptAnalysisThread 设备压数 -->
	<!-- 取得压数的设备id -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SupressExceptAnalysisThread.getsupressDeviceId
		</sql-name>
		<sql-statement>
			select distinct a.devphyid as deviceId from
			YKT_CUR.T_POSDTL a where a.transdate||a.transtime>:startTime and
			not a.transdate||a.transtime>:time and a.devphyid not in (select
			distinct b.devphyid from YKT_CUR.T_POSDTL b where
			b.transdate||b.transtime>:time and not b.transdate||b.transtime>:endTime)
		</sql-statement>
	</sql>

	<!-- 取得特定的卡号 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.SupressExceptAnalysisThread.getcerttimedeviceserial
		</sql-name>
		<sql-statement>
			select {posdtl.*} from YKT_CUR.T_POSDTL posdtl where
			posdtl.devphyid=:deviceId and
			posdtl.transdate||posdtl.transtime>:startTime and not
			posdtl.transdate||posdtl.transtime>:endTime Order by posdtl.TRANSDATE
			desc,posdtl.TRANSTIME desc
		</sql-statement>
	</sql>

	<!-- UncheckedSerialAnalysisThread 未入账流水 -->
	<!-- 取得压数的设备id -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.UncheckedSerialAnalysisThread.getunceckserial
		</sql-name>
		<sql-statement>
			select {a.*} from YKT_CUR.T_POSDTL a where a.status='2' and a.transdate||a.transtime> :startTime and not
			a.transdate||a.transtime> :endTime
		</sql-statement>
	</sql>
	<!-- 取得客户名称 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.UncheckedSerialAnalysisThread.getCutName
		</sql-name>
		<sql-statement>
			select a.custname as cutName from YKT_CUR.T_CUSTOMER
			a,YKT_CUR.T_CARD b where a.custid=b.custid and
			b.cardno=:cardno
		</sql-statement>
	</sql>

	<!-- UnbalanceAnalysisThread 卡库不平 -->
	<!-- 取得压数的设备id -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgAnalysis.UnbalanceAnalysisThread.getunbalanceacc
		</sql-name>
		<sql-statement>
			select {a.*} from ykt_cur.t_account a where not
			a.AVAILBAL=a.LASTCARDBAL and a.status=1 order by a.accno
		</sql-statement>
	</sql>


	<!-- SerialLostDealThread 流水丢失检查 -->
	<!-- 取得缺失的流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgDeal.SerialLostDealThread.getLostserial
		</sql-name>
		<sql-statement>
			from MapSerialostTable a where a.id.analysistime>=:startTime
			and not a.id.analysistime>=:endTime and a.serialReason=7 and
			a.serialStatus=0
		</sql-statement>
	</sql>
	<!-- 取得丢失流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgDeal.SerialLostDealThread.checkLostserial
		</sql-name>
		<sql-statement>
			select a.DEVSEQNO as serialNo from ykt_cur.T_POSDTL a
			where a.DEVSEQNO=:serialno and (a.TRANSDATE=:txdate1 or
			a.TRANSDATE=:txdate2 or a.TRANSDATE=:txdate3) and
			a.devphyid=:deviceId
		</sql-statement>
	</sql>

	<!-- 取得子系统id -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgDeal.SerialLostDealThread.getsubsystem
		</sql-name>
		<sql-statement>
			select a.SYSID subsystemId from YKT_CUR.T_DEVICE
			a where a.DEVPHYID=:devId and a.status = 1
		</sql-statement>
	</sql>

	<!-- 取得设备id -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgDeal.SerialLostDealThread.getdeviceid
		</sql-name>
		<sql-statement>
			select a.deviceid as deviceId from YKT_CUR.T_DEVICE a
			where a.DEVPHYID=:dev999Id
		</sql-statement>
	</sql>

	<!-- 取得流水号-->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgDeal.SerialLostDealThread.getserailno
		</sql-name>
		<sql-statement>
			select a.DEVSEQNO as serialNo from ykt_cur.T_POSDTL a
			where a.DEVSEQNO=:serialno and a.TRANSDATE=:txdate and
			a.devphyid=:deviceId
		</sql-statement>
	</sql>

	<!-- 取得没能补采的流水 -->
	<sql>
		<sql-name>
			com.kingstargroup.action.bgDeal.SerialLostDealThread.checkunretainserial
		</sql-name>
		<sql-statement>
			from MapSerialostTable a where a.serialReason=7 and
			a.serialStatus=0 and not a.id.analysistime>=:startTime and
			a.txDate>:txDate
		</sql-statement>
	</sql>
	
	<!-- ServerAnalysisThread 服务器 -->
	<sql>
        <sql-name>
            com.kingstargroup.action.bgAnalysis.ServerAnalysisThread.getdatabaseTime
        </sql-name>
        <sql-statement>
          select cast(sysdate as timestamp) as time from dual
        </sql-statement>
    </sql>
    
     <sql>
        <sql-name>
            com.kingstargroup.action.bgAnalysis.ServerAnalysisThread.getPreDownDevice
        </sql-name>
        <sql-statement>
           select {a.*} from ykt_mon.map_device_table a where
           a.analysistime=:analysisTime and a.ERROR_REASON=105
        </sql-statement>
    </sql>
    
    <sql>
        <sql-name>
            com.kingstargroup.action.bgAnalysis.ServerAnalysisThread.getPreDiskDevice
        </sql-name>
        <sql-statement>
           select {a.*} from ykt_mon.map_device_table a where
           a.analysistime=:analysisTime and a.ERROR_REASON=104
        </sql-statement>
    </sql>
    
    <sql>
        <sql-name>
            com.kingstargroup.action.bgAnalysis.ServerAnalysisThread.getPreMemDevice
        </sql-name>
        <sql-statement>
           select {a.*} from ykt_mon.map_device_table a where
           a.analysistime=:analysisTime and a.ERROR_REASON=103
        </sql-statement>
    </sql>
    
    <sql>
        <sql-name>
            com.kingstargroup.action.bgAnalysis.ServerAnalysisThread.getPreCpuDevice
        </sql-name>
        <sql-statement>
           select {a.*} from ykt_mon.map_device_table a where
           a.analysistime=:analysisTime and a.ERROR_REASON=102
        </sql-statement>
    </sql>
    
    <!-- ServiceAnalysisThread 服务 -->
    <!-- web服务 -->
	<sql>
        <sql-name>
            com.kingstargroup.action.bgAnalysis.ServiceAnalysisThread.getPreWebService
        </sql-name>
        <sql-statement>
           select {a.*} from ykt_mon.map_service_exception a where
           a.ANALYSISTIME=:analysisTime and a.ERRORCODE=108
        </sql-statement>
    </sql>
    <!-- db服务 -->
    <sql>
        <sql-name>
            com.kingstargroup.action.bgAnalysis.ServiceAnalysisThread.getPreDbService
        </sql-name>
        <sql-statement>
           select {a.*} from ykt_mon.map_service_exception a where
           a.ANALYSISTIME=:analysisTime and a.ERRORCODE=109
        </sql-statement>
    </sql>
    <!-- drtp服务 -->
    <sql>
        <sql-name>
            com.kingstargroup.action.bgAnalysis.ServiceAnalysisThread.getPreDrtpService
        </sql-name>
        <sql-statement>
           select {a.*} from ykt_mon.map_service_exception a where
           a.ANALYSISTIME=:analysisTime and a.ERRORCODE=110
        </sql-statement>
    </sql>
</xml-body>
